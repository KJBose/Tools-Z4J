This XML file does not appear to have any style information associated with it. The document tree is shown below.
<robot generated="20190715 02:25:51.083" rpa="false" generator="Robot 3.1.1 (Python 3.5.2 on linux)">
<suite id="s1" source="/home/jenkins/workspace/qa/Inside-Out/sanity-child-jobs/python_app_based_tests" name="Python App Based Tests">
<suite id="s1-s1" source="/home/jenkins/workspace/qa/Inside-Out/sanity-child-jobs/python_app_based_tests/testsuites" name="Testsuites">
<suite id="s1-s1-s1" source="/home/jenkins/workspace/qa/Inside-Out/sanity-child-jobs/python_app_based_tests/testsuites/02_managed_services_central" name="02 Managed Services Central">
<suite id="s1-s1-s1-s1" source="/home/jenkins/workspace/qa/Inside-Out/sanity-child-jobs/python_app_based_tests/testsuites/02_managed_services_central/01_elasticsearch_crud.robot" name="01 Elasticsearch Crud">
<test id="s1-s1-s1-s1-t1" name="Running suitsetup">
<kw name="LogData" library="logging">
<arguments>
<arg>suitesetup now part of init</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:25:51.920" endtime="20190715 02:25:51.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:25:51.921" level="INFO">suitesetup now part of init</msg>
<status status="PASS" starttime="20190715 02:25:51.921" endtime="20190715 02:25:51.921"/>
</kw>
<status status="PASS" starttime="20190715 02:25:51.920" endtime="20190715 02:25:51.921"/>
</kw>
<kw name="choose service with topology ${topology_version}" library="managed_services_keywords">
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${app_container_type}'== 'PYTHON'</arg>
<arg>samplepython</arg>
<arg>'${app_container_type}'== 'JAVA'</arg>
<arg>samplejava</arg>
<arg>'${app_container_type}'== 'GO'</arg>
<arg>samplego</arg>
<arg>'${app_container_type}'== 'GO'</arg>
<arg>samplego</arg>
</arguments>
<assign>
<var>${service_name}</var>
</assign>
<msg timestamp="20190715 02:25:51.937" level="INFO">${service_name} = samplepython</msg>
<status status="PASS" starttime="20190715 02:25:51.922" endtime="20190715 02:25:51.937"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>${topology_version}</arg>
</arguments>
<assign>
<var>${service_name}</var>
</assign>
<msg timestamp="20190715 02:25:51.938" level="INFO">${service_name} = samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:25:51.937" endtime="20190715 02:25:51.938"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>
Makes a variable available globally in all tests and suites.
</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<msg timestamp="20190715 02:25:51.938" level="INFO">${service_name} = samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:25:51.938" endtime="20190715 02:25:51.938"/>
</kw>
<status status="PASS" starttime="20190715 02:25:51.921" endtime="20190715 02:25:51.938"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${service_name}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:25:51.939" endtime="20190715 02:25:51.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:25:51.940" level="INFO">samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:25:51.939" endtime="20190715 02:25:51.940"/>
</kw>
<status status="PASS" starttime="20190715 02:25:51.939" endtime="20190715 02:25:51.940"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : we will remove it out once our test cases pass for mongodb and uncomment Suit Setup
</doc>
<tags>
<tag>anu</tag>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>service_discovery_v2</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:25:51.919" endtime="20190715 02:25:51.940"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Testing to get all the services from helm">
<kw name="I get all the helm service details within namespace ${app}" library="helm_keywords">
<kw name="Get Helm Chart List" library="helm_ctl">
<doc>
:param namespace: Display all the service within this namespace :return:
</doc>
<arguments>
<arg>${name_space}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:25:51.942" level="INFO">
get helm chart for all the services in namespace: dflytest
</msg>
<msg timestamp="20190715 02:25:54.535" level="INFO">
DEBUG: KubectlTestWrapper for HELM get_helm_chart_list() stdout : NAME REVISION	UPDATED STATUS CHART APP VERSION	NAMESPACE elasticsearch 1 Mon Jul 15 02:13:55 2019	DEPLOYED	elastic-streaming-stack-0.2.15	1.0 dflytest kafka 1 Mon Jul 15 02:13:01 2019	DEPLOYED	kafka-0.13.7 5.0.1 dflytest redis 1 Mon Jul 15 02:11:11 2019	DEPLOYED	redis-6.1.5 4.0.12 dflytest sample-es 1 Mon Jul 15 02:13:54 2019	DEPLOYED	elasticsearch-1.0.0 dflytest sample-kafka 1 Mon Jul 15 02:13:00 2019	DEPLOYED	kafka-1.0.0 dflytest sample-mongodb 1 Mon Jul 15 02:10:53 2019	DEPLOYED	mongodb-1.0.0 dflytest sample-rabbitmq	1 Mon Jul 15 02:20:15 2019	DEPLOYED	rabbitmq-1.0.0 dflytest sample-redis 1 Mon Jul 15 02:11:10 2019	DEPLOYED	redis-1.0.0 dflytest samplejavav2a 1 Mon Jul 15 02:23:01 2019	DEPLOYED samplejavav2-1.0.24 dflytest samplepythonv1a	1 Mon Jul 15 02:21:44 2019	DEPLOYED	samplepythonv1-1.0.20 dflytest samplepythonv2a	1 Mon Jul 15 02:20:40 2019 DEPLOYED	samplepythonv2-1.0.20 dflytest , stderr: b''
</msg>
<msg timestamp="20190715 02:25:54.535" level="INFO">
DEBUG: KubectlTestWrapper for HELM get_helm_chart_list() stdout : NAME REVISION	UPDATED STATUS CHART APP VERSION	NAMESPACE elasticsearch 1 Mon Jul 15 02:13:55 2019	DEPLOYED	elastic-streaming-stack-0.2.15	1.0 dflytest kafka 1 Mon Jul 15 02:13:01 2019	DEPLOYED	kafka-0.13.7 5.0.1 dflytest redis 1 Mon Jul 15 02:11:11 2019	DEPLOYED	redis-6.1.5 4.0.12 dflytest sample-es 1 Mon Jul 15 02:13:54 2019	DEPLOYED	elasticsearch-1.0.0 dflytest sample-kafka 1 Mon Jul 15 02:13:00 2019	DEPLOYED	kafka-1.0.0 dflytest sample-mongodb 1 Mon Jul 15 02:10:53 2019	DEPLOYED	mongodb-1.0.0 dflytest sample-rabbitmq	1 Mon Jul 15 02:20:15 2019	DEPLOYED	rabbitmq-1.0.0 dflytest sample-redis 1 Mon Jul 15 02:11:10 2019	DEPLOYED	redis-1.0.0 dflytest samplejavav2a 1 Mon Jul 15 02:23:01 2019	DEPLOYED samplejavav2-1.0.24 dflytest samplepythonv1a	1 Mon Jul 15 02:21:44 2019	DEPLOYED	samplepythonv1-1.0.20 dflytest samplepythonv2a	1 Mon Jul 15 02:20:40 2019 DEPLOYED	samplepythonv2-1.0.20 dflytest , stderr: b''
</msg>
<msg timestamp="20190715 02:25:54.536" level="INFO">
${response} = ('NAME \tREVISION\tUPDATED \tSTATUS \tCHART \tAPP VERSION\tNAMESPACE\nelasticsearch \t1 \tMon Jul 15 02:13:55 2019\tDEPLOYED\telastic-streamin...
</msg>
<status status="PASS" starttime="20190715 02:25:51.941" endtime="20190715 02:25:54.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:25:54.538" level="INFO">
('NAME \tREVISION\tUPDATED \tSTATUS \tCHART \tAPP VERSION\tNAMESPACE\nelasticsearch \t1 \tMon Jul 15 02:13:55 2019\tDEPLOYED\telastic-streaming-stack-0.2.15\t1.0 \tdflytest \nkafka \t1 \tMon Jul 15 02:13:01 2019\tDEPLOYED\tkafka-0.13.7 \t5.0.1 \tdflytest \nredis \t1 \tMon Jul 15 02:11:11 2019\tDEPLOYED\tredis-6.1.5 \t4.0.12 \tdflytest \nsample-es \t1 \tMon Jul 15 02:13:54 2019\tDEPLOYED\telasticsearch-1.0.0 \t \tdflytest \nsample-kafka \t1 \tMon Jul 15 02:13:00 2019\tDEPLOYED\tkafka-1.0.0 \t \tdflytest \nsample-mongodb \t1 \tMon Jul 15 02:10:53 2019\tDEPLOYED\tmongodb-1.0.0 \t \tdflytest \nsample-rabbitmq\t1 \tMon Jul 15 02:20:15 2019\tDEPLOYED\trabbitmq-1.0.0 \t \tdflytest \nsample-redis \t1 \tMon Jul 15 02:11:10 2019\tDEPLOYED\tredis-1.0.0 \t \tdflytest \nsamplejavav2a \t1 \tMon Jul 15 02:23:01 2019\tDEPLOYED\tsamplejavav2-1.0.24 \t \tdflytest \nsamplepythonv1a\t1 \tMon Jul 15 02:21:44 2019\tDEPLOYED\tsamplepythonv1-1.0.20 \t \tdflytest \nsamplepythonv2a\t1 \tMon Jul 15 02:20:40 2019\tDEPLOYED\tsamplepythonv2-1.0.20 \t \tdflytest \n', b'')
</msg>
<status status="PASS" starttime="20190715 02:25:54.537" endtime="20190715 02:25:54.538"/>
</kw>
<status status="PASS" starttime="20190715 02:25:51.941" endtime="20190715 02:25:54.538"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will connect ElasticSearch index for {appstack_namespace} sample app
</doc>
<tags>
<tag>anu</tag>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>service_discovery_v2</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:25:51.940" endtime="20190715 02:25:54.538"/>
</test>
<test id="s1-s1-s1-s1-t3" name="I create connection to ElasticSearch for appcontainer">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:25:54.540" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:25:54.540" endtime="20190715 02:25:54.540"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_index</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20190715 02:25:54.541" level="INFO">${index} = samplepythonv2_index</msg>
<status status="PASS" starttime="20190715 02:25:54.541" endtime="20190715 02:25:54.541"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>
Makes a variable available globally in all tests and suites.
</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<msg timestamp="20190715 02:25:54.542" level="INFO">${index} = samplepythonv2_index</msg>
<status status="PASS" starttime="20190715 02:25:54.541" endtime="20190715 02:25:54.542"/>
</kw>
<kw name="I create Elasticsearch connection for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/connect for index ${index} and host ${host}" library="elasticsearch_keywords">
<kw name="Create Elastic DB Connection" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"index": "${index}"}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:25:54.840" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:25:54.840" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:25:54.543" endtime="20190715 02:25:54.840"/>
</kw>
<kw type="for" name="${INDEX} IN RANGE [ 0 | 1 ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create DB Connection Trail ${INDEX}</arg>
</arguments>
<msg timestamp="20190715 02:25:54.841" level="INFO">Create DB Connection Trail 0</msg>
<status status="PASS" starttime="20190715 02:25:54.841" endtime="20190715 02:25:54.841"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:25:54.842" level="INFO">postData: {"index": "samplepythonv2_index"}</msg>
<msg timestamp="20190715 02:25:54.842" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/connect
</msg>
<msg timestamp="20190715 02:25:54.842" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:25:55.952" level="INFO">Header:</msg>
<msg timestamp="20190715 02:25:55.952" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:25:55.952" level="INFO">
resp.text: {"version": "2.1.0", "response": "elasticsearch connection successful"}
</msg>
<msg timestamp="20190715 02:25:55.952" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:25:54.841" endtime="20190715 02:25:55.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:25:55.953" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:25:55.953" endtime="20190715 02:25:55.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:25:55.954" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:25:55.954" endtime="20190715 02:25:55.954"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>
Stops executing the enclosing for loop if the ``condition`` is true.
</doc>
<arguments>
<arg>'${status_code}'=='200'</arg>
</arguments>
<msg timestamp="20190715 02:25:55.955" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190715 02:25:55.954" endtime="20190715 02:25:55.955"/>
</kw>
<status status="PASS" starttime="20190715 02:25:54.840" endtime="20190715 02:25:55.955"/>
</kw>
<status status="PASS" starttime="20190715 02:25:54.840" endtime="20190715 02:25:55.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:25:55.956" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:25:55.955" endtime="20190715 02:25:55.956"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:25:55.956" level="INFO">
${resp_data} = {'response': 'elasticsearch connection successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:55.956" endtime="20190715 02:25:55.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:25:55.957" level="INFO">
{'response': 'elasticsearch connection successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:55.957" endtime="20190715 02:25:55.957"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:25:55.958" level="INFO">${response} = elasticsearch connection successful</msg>
<status status="PASS" starttime="20190715 02:25:55.957" endtime="20190715 02:25:55.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:25:55.958" level="INFO">elasticsearch connection successful</msg>
<status status="PASS" starttime="20190715 02:25:55.958" endtime="20190715 02:25:55.958"/>
</kw>
<status status="PASS" starttime="20190715 02:25:54.543" endtime="20190715 02:25:55.958"/>
</kw>
<status status="PASS" starttime="20190715 02:25:54.542" endtime="20190715 02:25:55.959"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will connect ElasticSearch index for {appstack_namespace} sample app
</doc>
<tags>
<tag>anu</tag>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>service_discovery_v2</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:25:54.539" endtime="20190715 02:25:55.959"/>
</test>
<test id="s1-s1-s1-s1-t4" name="I read data from ElasticSearch for appcontainer">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:25:55.960" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:25:55.960" endtime="20190715 02:25:55.960"/>
</kw>
<kw name="I read data from ElasticSearch for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/read for index ${index}, servicename ${servicename} and host ${host}" library="elasticsearch_keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20190715 02:25:55.961" level="INFO">
/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<status status="PASS" starttime="20190715 02:25:55.961" endtime="20190715 02:25:55.961"/>
</kw>
<kw name="Read Data From elasticsearch And Validate" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
<arg>{"query_filter":"author-${servicename}"}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:25:56.228" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:25:56.228" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:25:55.962" endtime="20190715 02:25:56.229"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:25:56.229" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<msg timestamp="20190715 02:25:56.230" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:25:56.230" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE1NSwiaWF0IjoxNTYzMTU3NTU1LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.DsCWmfzDcO8uDPYYE12YMcK9v7glcOYa2iApRjp6eu9IEGVHH4yZdQ5XChq8jnbDpjjvWvRJOxpDx_bbcl1fkQ'}
</msg>
<msg timestamp="20190715 02:25:56.658" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:25:56.658" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:25:56.229" endtime="20190715 02:25:56.658"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:25:56.659" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:25:56.658" endtime="20190715 02:25:56.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:25:56.659" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:25:56.659" endtime="20190715 02:25:56.659"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:25:56.660" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:56.660" endtime="20190715 02:25:56.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:25:56.660" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:25:56.660" endtime="20190715 02:25:56.661"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:25:56.661" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:25:56.661" endtime="20190715 02:25:56.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:25:56.661" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:25:56.661" endtime="20190715 02:25:56.661"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:25:56.662" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:25:56.662" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:25:56.662" endtime="20190715 02:25:56.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:25:56.662" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:25:56.662" endtime="20190715 02:25:56.662"/>
</kw>
<status status="PASS" starttime="20190715 02:25:55.962" endtime="20190715 02:25:56.663"/>
</kw>
<status status="PASS" starttime="20190715 02:25:55.961" endtime="20190715 02:25:56.663"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will read ElasticSearch data for {appstack_namespace} sample app
</doc>
<tags>
<tag>anu</tag>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>service_discovery_v2</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:25:55.959" endtime="20190715 02:25:56.663"/>
</test>
<test id="s1-s1-s1-s1-t5" name="I write data in ElasticSearch for appcontainer">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:25:56.664" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:25:56.664" endtime="20190715 02:25:56.664"/>
</kw>
<kw name="I read data from ElasticSearch for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/read for index ${index}, servicename ${servicename} and host ${host}" library="elasticsearch_keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20190715 02:25:56.665" level="INFO">
/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<status status="PASS" starttime="20190715 02:25:56.665" endtime="20190715 02:25:56.665"/>
</kw>
<kw name="Read Data From elasticsearch And Validate" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
<arg>{"query_filter":"author-${servicename}"}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:25:56.935" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:25:56.935" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:25:56.666" endtime="20190715 02:25:56.935"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:25:56.936" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<msg timestamp="20190715 02:25:56.936" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:25:56.937" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE1NiwiaWF0IjoxNTYzMTU3NTU2LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.sPhH-FJSJREEa5M_b3iqc8Q3RZC43PvlIpkVbbFIEBzMmSwZnmqEljxBgdvVu-pc4UXvFIpgtKO2fBa1lIYtxA'}
</msg>
<msg timestamp="20190715 02:25:57.310" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:25:57.311" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:25:56.936" endtime="20190715 02:25:57.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:25:57.313" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:25:57.312" endtime="20190715 02:25:57.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:25:57.314" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:25:57.313" endtime="20190715 02:25:57.314"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:25:57.315" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:57.314" endtime="20190715 02:25:57.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:25:57.316" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:25:57.315" endtime="20190715 02:25:57.316"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:25:57.316" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:25:57.316" endtime="20190715 02:25:57.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:25:57.317" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:25:57.317" endtime="20190715 02:25:57.317"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:25:57.317" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:25:57.318" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:25:57.317" endtime="20190715 02:25:57.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:25:57.318" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:25:57.318" endtime="20190715 02:25:57.318"/>
</kw>
<status status="PASS" starttime="20190715 02:25:56.666" endtime="20190715 02:25:57.318"/>
</kw>
<status status="PASS" starttime="20190715 02:25:56.665" endtime="20190715 02:25:57.318"/>
</kw>
<kw name="I insert 1 row in ElasticSearch with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/write from ${service_name} and host ${host}" library="elasticsearch_keywords">
<kw name="Insert Data In To elasticsearch" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"query_filter": "author_${servicename}","text": "I was written by ${servicename}"}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:25:57.320" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:25:57.321" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:25:57.320" endtime="20190715 02:25:57.321"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:25:57.322" level="INFO">
postData: {"query_filter": "author_samplepythonv2","text": "I was written by samplepythonv2"}
</msg>
<msg timestamp="20190715 02:25:57.322" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/write
</msg>
<msg timestamp="20190715 02:25:57.322" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:25:58.085" level="INFO">Header:</msg>
<msg timestamp="20190715 02:25:58.085" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:25:58.086" level="INFO">
resp.text: {"version": "2.1.0", "response": "Write to elasticsearch successful"}
</msg>
<msg timestamp="20190715 02:25:58.086" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:25:57.321" endtime="20190715 02:25:58.086"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:25:58.088" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:25:58.087" endtime="20190715 02:25:58.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:25:58.089" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:25:58.089" endtime="20190715 02:25:58.089"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:25:58.090" level="INFO">
${resp_data} = {'response': 'Write to elasticsearch successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:58.090" endtime="20190715 02:25:58.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:25:58.092" level="INFO">
{'response': 'Write to elasticsearch successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:58.091" endtime="20190715 02:25:58.092"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:25:58.093" level="INFO">${response} = Write to elasticsearch successful</msg>
<status status="PASS" starttime="20190715 02:25:58.092" endtime="20190715 02:25:58.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:25:58.094" level="INFO">Write to elasticsearch successful</msg>
<status status="PASS" starttime="20190715 02:25:58.093" endtime="20190715 02:25:58.094"/>
</kw>
<status status="PASS" starttime="20190715 02:25:57.319" endtime="20190715 02:25:58.094"/>
</kw>
<status status="PASS" starttime="20190715 02:25:57.319" endtime="20190715 02:25:58.095"/>
</kw>
<kw name="I read data from ElasticSearch for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/read for index ${index}, servicename ${servicename} and host ${host}" library="elasticsearch_keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20190715 02:25:58.096" level="INFO">
/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<status status="PASS" starttime="20190715 02:25:58.096" endtime="20190715 02:25:58.096"/>
</kw>
<kw name="Read Data From elasticsearch And Validate" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
<arg>{"query_filter":"author-${servicename}"}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:25:58.098" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:25:58.098" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:25:58.097" endtime="20190715 02:25:58.098"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:25:58.099" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<msg timestamp="20190715 02:25:58.099" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:25:58.099" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE1NiwiaWF0IjoxNTYzMTU3NTU2LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.sPhH-FJSJREEa5M_b3iqc8Q3RZC43PvlIpkVbbFIEBzMmSwZnmqEljxBgdvVu-pc4UXvFIpgtKO2fBa1lIYtxA'}
</msg>
<msg timestamp="20190715 02:25:58.533" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:25:58.533" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:25:58.098" endtime="20190715 02:25:58.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:25:58.534" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:25:58.533" endtime="20190715 02:25:58.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:25:58.534" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:25:58.534" endtime="20190715 02:25:58.535"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:25:58.535" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:58.535" endtime="20190715 02:25:58.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:25:58.536" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:25:58.535" endtime="20190715 02:25:58.536"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:25:58.537" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:25:58.536" endtime="20190715 02:25:58.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:25:58.537" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:25:58.537" endtime="20190715 02:25:58.537"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:25:58.538" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:25:58.538" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:25:58.537" endtime="20190715 02:25:58.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:25:58.538" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:25:58.538" endtime="20190715 02:25:58.538"/>
</kw>
<status status="PASS" starttime="20190715 02:25:58.097" endtime="20190715 02:25:58.538"/>
</kw>
<status status="PASS" starttime="20190715 02:25:58.095" endtime="20190715 02:25:58.539"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will read ElasticSearch data for {appstack_namespace} sample app
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>service_discovery_v2</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:25:56.663" endtime="20190715 02:25:58.539"/>
</test>
<test id="s1-s1-s1-s1-t6" name="I update data in ElasticSearch for appcontainer">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:25:58.540" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:25:58.540" endtime="20190715 02:25:58.540"/>
</kw>
<kw name="I read data from ElasticSearch for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/read for index ${index}, servicename ${servicename} and host ${host}" library="elasticsearch_keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20190715 02:25:58.542" level="INFO">
/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<status status="PASS" starttime="20190715 02:25:58.541" endtime="20190715 02:25:58.542"/>
</kw>
<kw name="Read Data From elasticsearch And Validate" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
<arg>{"query_filter":"author-${servicename}"}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:25:58.809" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:25:58.809" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:25:58.542" endtime="20190715 02:25:58.809"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:25:58.810" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<msg timestamp="20190715 02:25:58.810" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:25:58.811" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE1OCwiaWF0IjoxNTYzMTU3NTU4LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.2sSucc7H_sptwDYRXoyTpw_i3I0c28cUxl1I13oIgmF8DK23BTB0EGA7qo6nIej_GBx1o-rAOo94veNnCYwbpA'}
</msg>
<msg timestamp="20190715 02:25:59.093" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:25:59.094" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:25:58.809" endtime="20190715 02:25:59.094"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:25:59.095" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:25:59.094" endtime="20190715 02:25:59.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:25:59.095" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:25:59.095" endtime="20190715 02:25:59.096"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:25:59.096" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:59.096" endtime="20190715 02:25:59.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:25:59.097" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:25:59.096" endtime="20190715 02:25:59.097"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:25:59.097" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:25:59.097" endtime="20190715 02:25:59.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:25:59.098" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:25:59.098" endtime="20190715 02:25:59.098"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:25:59.098" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:25:59.099" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:25:59.098" endtime="20190715 02:25:59.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:25:59.099" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:25:59.099" endtime="20190715 02:25:59.099"/>
</kw>
<status status="PASS" starttime="20190715 02:25:58.542" endtime="20190715 02:25:59.100"/>
</kw>
<status status="PASS" starttime="20190715 02:25:58.541" endtime="20190715 02:25:59.100"/>
</kw>
<kw name="I update data in ElasticSearch using update filter ${es_update_filter} with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/update for ${service_name} and host ${host}" library="elasticsearch_keywords">
<kw name="Update Data In elasticsearch" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"query_filter": "I was written by ${servicename}", "updates": "text = 'updated_text_by_${servicename}' "}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:25:59.102" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:25:59.102" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:25:59.101" endtime="20190715 02:25:59.102"/>
</kw>
<kw name="PUT" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:25:59.102" level="INFO">
put_data: {"query_filter": "I was written by samplepythonv2", "updates": "text = 'updated_text_by_samplepythonv2' "}
</msg>
<msg timestamp="20190715 02:25:59.103" level="INFO">
Looking at API in requestslib.put: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/update
</msg>
<msg timestamp="20190715 02:25:59.103" level="INFO">extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:25:59.103" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE1OCwiaWF0IjoxNTYzMTU3NTU4LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.2sSucc7H_sptwDYRXoyTpw_i3I0c28cUxl1I13oIgmF8DK23BTB0EGA7qo6nIej_GBx1o-rAOo94veNnCYwbpA'}
</msg>
<msg timestamp="20190715 02:25:59.900" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:25:59.900" level="INFO">
resp.text: {"version": "2.1.0", "response": "update record in elasticsearch successful"}
</msg>
<msg timestamp="20190715 02:25:59.901" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:25:59.102" endtime="20190715 02:25:59.901"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:25:59.902" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:25:59.901" endtime="20190715 02:25:59.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:25:59.902" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:25:59.902" endtime="20190715 02:25:59.902"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:25:59.903" level="INFO">
${resp_data} = {'response': 'update record in elasticsearch successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:59.902" endtime="20190715 02:25:59.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:25:59.903" level="INFO">
{'response': 'update record in elasticsearch successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:25:59.903" endtime="20190715 02:25:59.903"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:25:59.904" level="INFO">
${response} = update record in elasticsearch successful
</msg>
<status status="PASS" starttime="20190715 02:25:59.903" endtime="20190715 02:25:59.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:25:59.904" level="INFO">update record in elasticsearch successful</msg>
<status status="PASS" starttime="20190715 02:25:59.904" endtime="20190715 02:25:59.904"/>
</kw>
<status status="PASS" starttime="20190715 02:25:59.101" endtime="20190715 02:25:59.905"/>
</kw>
<status status="PASS" starttime="20190715 02:25:59.100" endtime="20190715 02:25:59.905"/>
</kw>
<kw name="I read data from ElasticSearch for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/read for index ${index}, servicename ${servicename} and host ${host}" library="elasticsearch_keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20190715 02:25:59.906" level="INFO">
/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<status status="PASS" starttime="20190715 02:25:59.906" endtime="20190715 02:25:59.906"/>
</kw>
<kw name="Read Data From elasticsearch And Validate" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
<arg>{"query_filter":"author-${servicename}"}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:25:59.907" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:25:59.907" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:25:59.907" endtime="20190715 02:25:59.907"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:25:59.908" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<msg timestamp="20190715 02:25:59.908" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:25:59.909" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE1OCwiaWF0IjoxNTYzMTU3NTU4LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.2sSucc7H_sptwDYRXoyTpw_i3I0c28cUxl1I13oIgmF8DK23BTB0EGA7qo6nIej_GBx1o-rAOo94veNnCYwbpA'}
</msg>
<msg timestamp="20190715 02:26:00.296" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:00.297" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:25:59.907" endtime="20190715 02:26:00.297"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:00.298" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:00.298" endtime="20190715 02:26:00.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:00.299" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:00.299" endtime="20190715 02:26:00.299"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:00.299" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:00.299" endtime="20190715 02:26:00.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:00.300" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:00.300" endtime="20190715 02:26:00.300"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:00.301" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:26:00.300" endtime="20190715 02:26:00.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:00.301" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:26:00.301" endtime="20190715 02:26:00.301"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:00.302" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:26:00.302" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:26:00.302" endtime="20190715 02:26:00.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:00.303" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:26:00.302" endtime="20190715 02:26:00.303"/>
</kw>
<status status="PASS" starttime="20190715 02:25:59.906" endtime="20190715 02:26:00.303"/>
</kw>
<status status="PASS" starttime="20190715 02:25:59.905" endtime="20190715 02:26:00.303"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will delete ElasticSearch data for {appstack_namespace} sample app based on delete filter parameter
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>service_discovery_v2</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:25:58.539" endtime="20190715 02:26:00.303"/>
</test>
<test id="s1-s1-s1-s1-t7" name="I delete data from ElasticSearch for appcontainer">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:00.305" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:00.304" endtime="20190715 02:26:00.305"/>
</kw>
<kw name="I read data from ElasticSearch for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/read for index ${index}, servicename ${servicename} and host ${host}" library="elasticsearch_keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20190715 02:26:00.306" level="INFO">
/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<status status="PASS" starttime="20190715 02:26:00.305" endtime="20190715 02:26:00.306"/>
</kw>
<kw name="Read Data From elasticsearch And Validate" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
<arg>{"query_filter":"author-${servicename}"}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:00.583" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:00.583" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:00.306" endtime="20190715 02:26:00.583"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:00.584" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<msg timestamp="20190715 02:26:00.584" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:00.584" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE2MCwiaWF0IjoxNTYzMTU3NTYwLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.eNEpfjchG4gxq0EWN-MS2LvuAxP2crzcUgRdg07SKan8vWoh9qsVmRVEHucMmYF3zn7tPWdDY_kmHBtVjPQd4Q'}
</msg>
<msg timestamp="20190715 02:26:00.885" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:00.885" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:00.583" endtime="20190715 02:26:00.886"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:00.886" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:00.886" endtime="20190715 02:26:00.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:00.887" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:00.887" endtime="20190715 02:26:00.887"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:00.888" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:00.887" endtime="20190715 02:26:00.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:00.888" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:00.888" endtime="20190715 02:26:00.888"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:00.889" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:26:00.888" endtime="20190715 02:26:00.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:00.889" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:26:00.889" endtime="20190715 02:26:00.889"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:00.890" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:26:00.890" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:26:00.890" endtime="20190715 02:26:00.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:00.890" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:26:00.890" endtime="20190715 02:26:00.890"/>
</kw>
<status status="PASS" starttime="20190715 02:26:00.306" endtime="20190715 02:26:00.891"/>
</kw>
<status status="PASS" starttime="20190715 02:26:00.305" endtime="20190715 02:26:00.891"/>
</kw>
<kw name="I delete data in ElasticSearch using delete filter ${es_delete_filter} with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/delete for ${servicename} and host ${host}" library="elasticsearch_keywords">
<kw name="Clear Data In elasticsearch" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"query_filter": "updated_text_by_${servicename}"}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:00.893" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:00.893" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:00.892" endtime="20190715 02:26:00.893"/>
</kw>
<kw name="DELETE" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:00.894" level="INFO">
delete_data: {"query_filter": "updated_text_by_samplepythonv2"}
</msg>
<msg timestamp="20190715 02:26:00.894" level="INFO">
Looking at API in requestslib.delete: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/delete
</msg>
<msg timestamp="20190715 02:26:00.894" level="INFO">extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:00.895" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE2MCwiaWF0IjoxNTYzMTU3NTYwLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.eNEpfjchG4gxq0EWN-MS2LvuAxP2crzcUgRdg07SKan8vWoh9qsVmRVEHucMmYF3zn7tPWdDY_kmHBtVjPQd4Q'}
</msg>
<msg timestamp="20190715 02:26:01.209" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:01.210" level="INFO">
resp.text: {"version": "2.1.0", "response": "delete records from elasticsearch is successful"}
</msg>
<msg timestamp="20190715 02:26:01.210" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:00.893" endtime="20190715 02:26:01.210"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:01.211" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:01.210" endtime="20190715 02:26:01.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:01.212" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:01.211" endtime="20190715 02:26:01.212"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:01.212" level="INFO">
${resp_data} = {'response': 'delete records from elasticsearch is successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:01.212" endtime="20190715 02:26:01.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.213" level="INFO">
{'response': 'delete records from elasticsearch is successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:01.212" endtime="20190715 02:26:01.213"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:01.213" level="INFO">
${response} = delete records from elasticsearch is successful
</msg>
<status status="PASS" starttime="20190715 02:26:01.213" endtime="20190715 02:26:01.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.214" level="INFO">delete records from elasticsearch is successful</msg>
<status status="PASS" starttime="20190715 02:26:01.214" endtime="20190715 02:26:01.214"/>
</kw>
<status status="PASS" starttime="20190715 02:26:00.891" endtime="20190715 02:26:01.214"/>
</kw>
<status status="PASS" starttime="20190715 02:26:00.891" endtime="20190715 02:26:01.214"/>
</kw>
<kw name="I read data from ElasticSearch for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/elasticsearch/read for index ${index}, servicename ${servicename} and host ${host}" library="elasticsearch_keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.216" level="INFO">
/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<status status="PASS" starttime="20190715 02:26:01.215" endtime="20190715 02:26:01.216"/>
</kw>
<kw name="Read Data From elasticsearch And Validate" library="elasticsearch_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
<arg>{"query_filter":"author-${servicename}"}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:01.217" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:01.217" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:01.217" endtime="20190715 02:26:01.217"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
<arg>jsonData=True</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:01.218" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/elasticsearch/read
</msg>
<msg timestamp="20190715 02:26:01.218" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:01.219" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE2MCwiaWF0IjoxNTYzMTU3NTYwLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.eNEpfjchG4gxq0EWN-MS2LvuAxP2crzcUgRdg07SKan8vWoh9qsVmRVEHucMmYF3zn7tPWdDY_kmHBtVjPQd4Q'}
</msg>
<msg timestamp="20190715 02:26:01.600" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:01.600" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:01.217" endtime="20190715 02:26:01.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:01.601" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:01.601" endtime="20190715 02:26:01.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:01.602" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:01.602" endtime="20190715 02:26:01.602"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:01.603" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:01.602" endtime="20190715 02:26:01.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.603" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:01.603" endtime="20190715 02:26:01.603"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:01.604" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:26:01.604" endtime="20190715 02:26:01.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.604" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:26:01.604" endtime="20190715 02:26:01.604"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:01.605" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:26:01.605" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:26:01.605" endtime="20190715 02:26:01.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.606" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:26:01.605" endtime="20190715 02:26:01.606"/>
</kw>
<status status="PASS" starttime="20190715 02:26:01.216" endtime="20190715 02:26:01.606"/>
</kw>
<status status="PASS" starttime="20190715 02:26:01.215" endtime="20190715 02:26:01.606"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will delete ElasticSearch data for {appstack_namespace} sample app based on delete filter parameter
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>service_discovery_v2</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:00.304" endtime="20190715 02:26:01.607"/>
</test>
<status status="PASS" starttime="20190715 02:25:51.244" endtime="20190715 02:26:01.610"/>
</suite>
<suite id="s1-s1-s1-s2" source="/home/jenkins/workspace/qa/Inside-Out/sanity-child-jobs/python_app_based_tests/testsuites/02_managed_services_central/02_kafka_crud.robot" name="02 Kafka Crud">
<test id="s1-s1-s1-s2-t1" name="Running suitsetup">
<kw name="LogData" library="logging">
<arguments>
<arg>suitesetup now part of init</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:01.643" endtime="20190715 02:26:01.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.644" level="INFO">suitesetup now part of init</msg>
<status status="PASS" starttime="20190715 02:26:01.644" endtime="20190715 02:26:01.644"/>
</kw>
<status status="PASS" starttime="20190715 02:26:01.643" endtime="20190715 02:26:01.644"/>
</kw>
<kw name="choose service with topology ${topology_version}" library="managed_services_keywords">
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${app_container_type}'== 'PYTHON'</arg>
<arg>samplepython</arg>
<arg>'${app_container_type}'== 'JAVA'</arg>
<arg>samplejava</arg>
<arg>'${app_container_type}'== 'GO'</arg>
<arg>samplego</arg>
<arg>'${app_container_type}'== 'GO'</arg>
<arg>samplego</arg>
</arguments>
<assign>
<var>${service_name}</var>
</assign>
<msg timestamp="20190715 02:26:01.645" level="INFO">${service_name} = samplepython</msg>
<status status="PASS" starttime="20190715 02:26:01.645" endtime="20190715 02:26:01.645"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>${topology_version}</arg>
</arguments>
<assign>
<var>${service_name}</var>
</assign>
<msg timestamp="20190715 02:26:01.646" level="INFO">${service_name} = samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:26:01.646" endtime="20190715 02:26:01.646"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>
Makes a variable available globally in all tests and suites.
</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.647" level="INFO">${service_name} = samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:26:01.646" endtime="20190715 02:26:01.647"/>
</kw>
<status status="PASS" starttime="20190715 02:26:01.644" endtime="20190715 02:26:01.647"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${service_name}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:01.649" endtime="20190715 02:26:01.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.650" level="INFO">samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:26:01.649" endtime="20190715 02:26:01.650"/>
</kw>
<status status="PASS" starttime="20190715 02:26:01.647" endtime="20190715 02:26:01.650"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>${topic_name}</arg>
</arguments>
<assign>
<var>${topic_name}</var>
</assign>
<msg timestamp="20190715 02:26:01.650" level="INFO">${topic_name} = samplepythonv2_topic</msg>
<status status="PASS" starttime="20190715 02:26:01.650" endtime="20190715 02:26:01.650"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${topic_name}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:01.651" endtime="20190715 02:26:01.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:01.652" level="INFO">samplepythonv2_topic</msg>
<status status="PASS" starttime="20190715 02:26:01.652" endtime="20190715 02:26:01.652"/>
</kw>
<status status="PASS" starttime="20190715 02:26:01.651" endtime="20190715 02:26:01.652"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : we will remove it out once our test cases pass for mongodb and uncomment Suit Setup
</doc>
<tags>
<tag>java_app</tag>
<tag>kafka_test</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:01.642" endtime="20190715 02:26:01.652"/>
</test>
<test id="s1-s1-s1-s2-t2" name="Testing to get all the services from helm">
<kw name="I get all the helm service details within namespace ${app}" library="helm_keywords">
<kw name="Get Helm Chart List" library="helm_ctl">
<doc>
:param namespace: Display all the service within this namespace :return:
</doc>
<arguments>
<arg>${name_space}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:01.655" level="INFO">
get helm chart for all the services in namespace: dflytest
</msg>
<msg timestamp="20190715 02:26:03.117" level="INFO">
DEBUG: KubectlTestWrapper for HELM get_helm_chart_list() stdout : NAME REVISION	UPDATED STATUS CHART APP VERSION	NAMESPACE elasticsearch 1 Mon Jul 15 02:13:55 2019	DEPLOYED	elastic-streaming-stack-0.2.15	1.0 dflytest kafka 1 Mon Jul 15 02:13:01 2019	DEPLOYED	kafka-0.13.7 5.0.1 dflytest redis 1 Mon Jul 15 02:11:11 2019	DEPLOYED	redis-6.1.5 4.0.12 dflytest sample-es 1 Mon Jul 15 02:13:54 2019	DEPLOYED	elasticsearch-1.0.0 dflytest sample-kafka 1 Mon Jul 15 02:13:00 2019	DEPLOYED	kafka-1.0.0 dflytest sample-mongodb 1 Mon Jul 15 02:10:53 2019	DEPLOYED	mongodb-1.0.0 dflytest sample-rabbitmq	1 Mon Jul 15 02:20:15 2019	DEPLOYED	rabbitmq-1.0.0 dflytest sample-redis 1 Mon Jul 15 02:11:10 2019	DEPLOYED	redis-1.0.0 dflytest samplejavav2a 1 Mon Jul 15 02:23:01 2019	DEPLOYED samplejavav2-1.0.24 dflytest samplepythonv1a	1 Mon Jul 15 02:21:44 2019	DEPLOYED	samplepythonv1-1.0.20 dflytest samplepythonv2a	1 Mon Jul 15 02:20:40 2019 DEPLOYED	samplepythonv2-1.0.20 dflytest , stderr: b''
</msg>
<msg timestamp="20190715 02:26:03.117" level="INFO">
DEBUG: KubectlTestWrapper for HELM get_helm_chart_list() stdout : NAME REVISION	UPDATED STATUS CHART APP VERSION	NAMESPACE elasticsearch 1 Mon Jul 15 02:13:55 2019	DEPLOYED	elastic-streaming-stack-0.2.15	1.0 dflytest kafka 1 Mon Jul 15 02:13:01 2019	DEPLOYED	kafka-0.13.7 5.0.1 dflytest redis 1 Mon Jul 15 02:11:11 2019	DEPLOYED	redis-6.1.5 4.0.12 dflytest sample-es 1 Mon Jul 15 02:13:54 2019	DEPLOYED	elasticsearch-1.0.0 dflytest sample-kafka 1 Mon Jul 15 02:13:00 2019	DEPLOYED	kafka-1.0.0 dflytest sample-mongodb 1 Mon Jul 15 02:10:53 2019	DEPLOYED	mongodb-1.0.0 dflytest sample-rabbitmq	1 Mon Jul 15 02:20:15 2019	DEPLOYED	rabbitmq-1.0.0 dflytest sample-redis 1 Mon Jul 15 02:11:10 2019	DEPLOYED	redis-1.0.0 dflytest samplejavav2a 1 Mon Jul 15 02:23:01 2019	DEPLOYED samplejavav2-1.0.24 dflytest samplepythonv1a	1 Mon Jul 15 02:21:44 2019	DEPLOYED	samplepythonv1-1.0.20 dflytest samplepythonv2a	1 Mon Jul 15 02:20:40 2019 DEPLOYED	samplepythonv2-1.0.20 dflytest , stderr: b''
</msg>
<msg timestamp="20190715 02:26:03.118" level="INFO">
${response} = ('NAME \tREVISION\tUPDATED \tSTATUS \tCHART \tAPP VERSION\tNAMESPACE\nelasticsearch \t1 \tMon Jul 15 02:13:55 2019\tDEPLOYED\telastic-streamin...
</msg>
<status status="PASS" starttime="20190715 02:26:01.654" endtime="20190715 02:26:03.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:03.120" level="INFO">
('NAME \tREVISION\tUPDATED \tSTATUS \tCHART \tAPP VERSION\tNAMESPACE\nelasticsearch \t1 \tMon Jul 15 02:13:55 2019\tDEPLOYED\telastic-streaming-stack-0.2.15\t1.0 \tdflytest \nkafka \t1 \tMon Jul 15 02:13:01 2019\tDEPLOYED\tkafka-0.13.7 \t5.0.1 \tdflytest \nredis \t1 \tMon Jul 15 02:11:11 2019\tDEPLOYED\tredis-6.1.5 \t4.0.12 \tdflytest \nsample-es \t1 \tMon Jul 15 02:13:54 2019\tDEPLOYED\telasticsearch-1.0.0 \t \tdflytest \nsample-kafka \t1 \tMon Jul 15 02:13:00 2019\tDEPLOYED\tkafka-1.0.0 \t \tdflytest \nsample-mongodb \t1 \tMon Jul 15 02:10:53 2019\tDEPLOYED\tmongodb-1.0.0 \t \tdflytest \nsample-rabbitmq\t1 \tMon Jul 15 02:20:15 2019\tDEPLOYED\trabbitmq-1.0.0 \t \tdflytest \nsample-redis \t1 \tMon Jul 15 02:11:10 2019\tDEPLOYED\tredis-1.0.0 \t \tdflytest \nsamplejavav2a \t1 \tMon Jul 15 02:23:01 2019\tDEPLOYED\tsamplejavav2-1.0.24 \t \tdflytest \nsamplepythonv1a\t1 \tMon Jul 15 02:21:44 2019\tDEPLOYED\tsamplepythonv1-1.0.20 \t \tdflytest \nsamplepythonv2a\t1 \tMon Jul 15 02:20:40 2019\tDEPLOYED\tsamplepythonv2-1.0.20 \t \tdflytest \n', b'')
</msg>
<status status="PASS" starttime="20190715 02:26:03.119" endtime="20190715 02:26:03.120"/>
</kw>
<status status="PASS" starttime="20190715 02:26:01.653" endtime="20190715 02:26:03.120"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will connect ElasticSearch index for {appstack_namespace} sample app
</doc>
<tags>
<tag>java_app</tag>
<tag>kafka_test</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:01.653" endtime="20190715 02:26:03.121"/>
</test>
<test id="s1-s1-s1-s2-t3" name="I create topic in kafka">
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>${topic_name}</arg>
</arguments>
<assign>
<var>${topic_name}</var>
</assign>
<msg timestamp="20190715 02:26:03.123" level="INFO">${topic_name} = samplepythonv2_topic</msg>
<status status="PASS" starttime="20190715 02:26:03.122" endtime="20190715 02:26:03.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:03.123" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:03.123" endtime="20190715 02:26:03.124"/>
</kw>
<kw name="I create kakfa topic ${app_container_type}_${topic_name} for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/kafka/createtopic for host ${host} with ${replication_factor} and ${number_of_partitions}" library="kafka_keywords">
<kw name="Create topic in kafka" library="kafka_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"topic_name": "${topic_name}", "number_of_partitions": "${number_of_partitions}", "replication_factor":"${replication_factor}"}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:03.390" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:03.390" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:03.126" endtime="20190715 02:26:03.390"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:03.391" level="INFO">
postData: {"topic_name": "PYTHON_samplepythonv2_topic", "number_of_partitions": "1", "replication_factor":"1"}
</msg>
<msg timestamp="20190715 02:26:03.391" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/kafka/createtopic
</msg>
<msg timestamp="20190715 02:26:03.392" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:04.304" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:04.305" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:04.305" level="INFO">
resp.text: {"version": "2.1.0", "response": "kafka topic created successfully"}
</msg>
<msg timestamp="20190715 02:26:04.305" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:03.390" endtime="20190715 02:26:04.305"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:04.306" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:04.306" endtime="20190715 02:26:04.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:04.307" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:04.307" endtime="20190715 02:26:04.307"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:04.308" level="INFO">
${resp_data} = {'response': 'kafka topic created successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:04.308" endtime="20190715 02:26:04.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:04.309" level="INFO">
{'response': 'kafka topic created successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:04.308" endtime="20190715 02:26:04.309"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:04.309" level="INFO">${response} = kafka topic created successfully</msg>
<status status="PASS" starttime="20190715 02:26:04.309" endtime="20190715 02:26:04.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:04.310" level="INFO">kafka topic created successfully</msg>
<status status="PASS" starttime="20190715 02:26:04.309" endtime="20190715 02:26:04.310"/>
</kw>
<status status="PASS" starttime="20190715 02:26:03.125" endtime="20190715 02:26:04.310"/>
</kw>
<status status="PASS" starttime="20190715 02:26:03.124" endtime="20190715 02:26:04.310"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will create topic in kafka for {appstack_namespace} sample app
</doc>
<tags>
<tag>java_app</tag>
<tag>kafka_test</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:03.122" endtime="20190715 02:26:04.310"/>
</test>
<test id="s1-s1-s1-s2-t4" name="I read all topic in kakfa">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:04.312" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:04.311" endtime="20190715 02:26:04.312"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>${topic_name}</arg>
</arguments>
<assign>
<var>${topic_name}</var>
</assign>
<msg timestamp="20190715 02:26:04.312" level="INFO">${topic_name} = samplepythonv2_topic</msg>
<status status="PASS" starttime="20190715 02:26:04.312" endtime="20190715 02:26:04.312"/>
</kw>
<kw name="I read all topic from kafka for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/kafka/gettopic for host ${host}" library="kafka_keywords">
<kw name="Read all topic in kafka" library="kafka_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:04.569" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:04.569" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:04.313" endtime="20190715 02:26:04.569"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:04.570" level="INFO">postData: {}</msg>
<msg timestamp="20190715 02:26:04.570" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/kafka/gettopic
</msg>
<msg timestamp="20190715 02:26:04.570" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:04.982" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:04.983" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:04.984" level="INFO">
resp.text: {"version": "2.1.0", "response": ["PYTHON_samplepythonv2_topic"]}
</msg>
<msg timestamp="20190715 02:26:04.984" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:04.569" endtime="20190715 02:26:04.984"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:04.986" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:04.985" endtime="20190715 02:26:04.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:04.986" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:04.986" endtime="20190715 02:26:04.986"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:04.987" level="INFO">
${resp_data} = {'response': ['PYTHON_samplepythonv2_topic'], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:04.987" endtime="20190715 02:26:04.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:04.988" level="INFO">
{'response': ['PYTHON_samplepythonv2_topic'], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:04.987" endtime="20190715 02:26:04.988"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:04.988" level="INFO">${response} = ['PYTHON_samplepythonv2_topic']</msg>
<status status="PASS" starttime="20190715 02:26:04.988" endtime="20190715 02:26:04.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:04.989" level="INFO">['PYTHON_samplepythonv2_topic']</msg>
<status status="PASS" starttime="20190715 02:26:04.989" endtime="20190715 02:26:04.989"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:04.990" level="INFO">Length is 1</msg>
<msg timestamp="20190715 02:26:04.990" level="INFO">${numberOfRows} = 1</msg>
<status status="PASS" starttime="20190715 02:26:04.989" endtime="20190715 02:26:04.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:04.990" level="INFO">1</msg>
<status status="PASS" starttime="20190715 02:26:04.990" endtime="20190715 02:26:04.990"/>
</kw>
<status status="PASS" starttime="20190715 02:26:04.313" endtime="20190715 02:26:04.991"/>
</kw>
<status status="PASS" starttime="20190715 02:26:04.312" endtime="20190715 02:26:04.991"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will read all available topics in kafka for {appstack_namespace} sample app
</doc>
<tags>
<tag>java_app</tag>
<tag>kafka_test</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:04.311" endtime="20190715 02:26:04.991"/>
</test>
<test id="s1-s1-s1-s2-t5" name="I send message to kafka topic">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:04.992" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:04.992" endtime="20190715 02:26:04.993"/>
</kw>
<kw name="I send ${number_of_message} messages to kafka topic ${topic_name} with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/kafka/produce for ${app_container_type} appcontainer and host ${host}" library="kafka_keywords">
<kw type="for" name="${i} IN RANGE [ 0 | ${number_of_message} ]">
<kw type="foritem" name="${i} = 0">
<kw name="Produce Data In To kafka topic" library="kafka_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"topic_name": "${topic_name}", "key": "testkey_${app_container_type}_${i}", "value":"Kafka_${app_container_type}_${i}"}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:05.254" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:05.254" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:04.995" endtime="20190715 02:26:05.255"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:05.256" level="INFO">
postData: {"topic_name": "_topic", "key": "testkey_PYTHON_0", "value":"Kafka_PYTHON_0"}
</msg>
<msg timestamp="20190715 02:26:05.256" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/kafka/produce
</msg>
<msg timestamp="20190715 02:26:05.257" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:09.990" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:09.991" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:09.991" level="INFO">
resp.text: {"version": "2.1.0", "response": "message sent to kafka successfully"}
</msg>
<msg timestamp="20190715 02:26:09.991" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:05.255" endtime="20190715 02:26:09.992"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:09.993" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:09.992" endtime="20190715 02:26:09.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:09.995" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:09.994" endtime="20190715 02:26:09.995"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:09.996" level="INFO">
${resp_data} = {'response': 'message sent to kafka successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:09.995" endtime="20190715 02:26:09.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:09.996" level="INFO">
{'response': 'message sent to kafka successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:09.996" endtime="20190715 02:26:09.996"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:09.997" level="INFO">${response} = message sent to kafka successfully</msg>
<status status="PASS" starttime="20190715 02:26:09.997" endtime="20190715 02:26:09.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:09.997" level="INFO">message sent to kafka successfully</msg>
<status status="PASS" starttime="20190715 02:26:09.997" endtime="20190715 02:26:09.998"/>
</kw>
<status status="PASS" starttime="20190715 02:26:04.994" endtime="20190715 02:26:09.998"/>
</kw>
<status status="PASS" starttime="20190715 02:26:04.994" endtime="20190715 02:26:09.998"/>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Produce Data In To kafka topic" library="kafka_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"topic_name": "${topic_name}", "key": "testkey_${app_container_type}_${i}", "value":"Kafka_${app_container_type}_${i}"}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:09.999" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:09.999" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:09.999" endtime="20190715 02:26:10.000"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:10.000" level="INFO">
postData: {"topic_name": "_topic", "key": "testkey_PYTHON_1", "value":"Kafka_PYTHON_1"}
</msg>
<msg timestamp="20190715 02:26:10.001" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/kafka/produce
</msg>
<msg timestamp="20190715 02:26:10.001" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:13.274" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:13.274" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:13.274" level="INFO">
resp.text: {"version": "2.1.0", "response": "message sent to kafka successfully"}
</msg>
<msg timestamp="20190715 02:26:13.274" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:10.000" endtime="20190715 02:26:13.275"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:13.276" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:13.275" endtime="20190715 02:26:13.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:13.276" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:13.276" endtime="20190715 02:26:13.276"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:13.277" level="INFO">
${resp_data} = {'response': 'message sent to kafka successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:13.276" endtime="20190715 02:26:13.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:13.278" level="INFO">
{'response': 'message sent to kafka successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:13.277" endtime="20190715 02:26:13.278"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:13.278" level="INFO">${response} = message sent to kafka successfully</msg>
<status status="PASS" starttime="20190715 02:26:13.278" endtime="20190715 02:26:13.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:13.279" level="INFO">message sent to kafka successfully</msg>
<status status="PASS" starttime="20190715 02:26:13.279" endtime="20190715 02:26:13.279"/>
</kw>
<status status="PASS" starttime="20190715 02:26:09.998" endtime="20190715 02:26:13.279"/>
</kw>
<status status="PASS" starttime="20190715 02:26:09.998" endtime="20190715 02:26:13.279"/>
</kw>
<status status="PASS" starttime="20190715 02:26:04.993" endtime="20190715 02:26:13.279"/>
</kw>
<status status="PASS" starttime="20190715 02:26:04.993" endtime="20190715 02:26:13.279"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will write message in kafka topic {appstack_namespace} sample app
</doc>
<tags>
<tag>java_app</tag>
<tag>kafka_test</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:04.991" endtime="20190715 02:26:13.280"/>
</test>
<test id="s1-s1-s1-s2-t6" name="I receive message from kafka topic">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:13.281" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:13.281" endtime="20190715 02:26:13.281"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>${topic_name}</arg>
</arguments>
<assign>
<var>${topic_name}</var>
</assign>
<msg timestamp="20190715 02:26:13.282" level="INFO">${topic_name} = samplepythonv2_topic</msg>
<status status="PASS" starttime="20190715 02:26:13.281" endtime="20190715 02:26:13.282"/>
</kw>
<kw name="I receive messages from kafka topic ${topic_name} with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/kafka/consume for host ${host}" library="kafka_keywords">
<kw name="Receive all message from kafka topic" library="kafka_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
<arg>{"topic_name":"${topic_name}"}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:13.555" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:13.555" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:13.284" endtime="20190715 02:26:13.555"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:13.557" level="INFO">postData: {"topic_name":"samplepythonv2_topic"}</msg>
<msg timestamp="20190715 02:26:13.558" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/kafka/consume
</msg>
<msg timestamp="20190715 02:26:13.558" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:15.334" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:15.335" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:15.335" level="INFO">resp.text: {"version": "2.1.0", "response": []}</msg>
<msg timestamp="20190715 02:26:15.335" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:13.556" endtime="20190715 02:26:15.336"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:15.337" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:15.336" endtime="20190715 02:26:15.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:15.337" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:15.337" endtime="20190715 02:26:15.337"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:15.338" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:15.337" endtime="20190715 02:26:15.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:15.338" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:15.338" endtime="20190715 02:26:15.338"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:15.339" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:26:15.339" endtime="20190715 02:26:15.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:15.339" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:26:15.339" endtime="20190715 02:26:15.340"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:15.340" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:26:15.340" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:26:15.340" endtime="20190715 02:26:15.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:15.341" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:26:15.340" endtime="20190715 02:26:15.341"/>
</kw>
<status status="PASS" starttime="20190715 02:26:13.283" endtime="20190715 02:26:15.341"/>
</kw>
<status status="PASS" starttime="20190715 02:26:13.282" endtime="20190715 02:26:15.341"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will receive message from kafka topic for {appstack_namespace} sample app based on topic name
</doc>
<tags>
<tag>java_app</tag>
<tag>kafka_test</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:13.280" endtime="20190715 02:26:15.341"/>
</test>
<test id="s1-s1-s1-s2-t7" name="I delete topic from kafka">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:15.343" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:15.343" endtime="20190715 02:26:15.343"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>abc</arg>
</arguments>
<assign>
<var>${topic_name}</var>
</assign>
<msg timestamp="20190715 02:26:15.344" level="INFO">${topic_name} = samplepythonv2abc</msg>
<status status="PASS" starttime="20190715 02:26:15.343" endtime="20190715 02:26:15.344"/>
</kw>
<kw name="I create kakfa topic ${app_container_type}_${delete_topic} for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/kafka/createtopic for host ${host} with ${replication_factor} and ${number_of_partitions}" library="kafka_keywords">
<kw name="Create topic in kafka" library="kafka_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"topic_name": "${topic_name}", "number_of_partitions": "${number_of_partitions}", "replication_factor":"${replication_factor}"}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:15.614" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:15.614" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:15.345" endtime="20190715 02:26:15.615"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>timeout=60</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:15.617" level="INFO">
postData: {"topic_name": "PYTHON_test_topic_delete", "number_of_partitions": "1", "replication_factor":"1"}
</msg>
<msg timestamp="20190715 02:26:15.617" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/kafka/createtopic
</msg>
<msg timestamp="20190715 02:26:15.617" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:16.780" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:16.781" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:16.782" level="INFO">
resp.text: {"version": "2.1.0", "response": "kafka topic created successfully"}
</msg>
<msg timestamp="20190715 02:26:16.782" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:15.615" endtime="20190715 02:26:16.782"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:16.783" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:16.783" endtime="20190715 02:26:16.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:16.785" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:16.784" endtime="20190715 02:26:16.785"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:16.786" level="INFO">
${resp_data} = {'response': 'kafka topic created successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:16.785" endtime="20190715 02:26:16.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:16.786" level="INFO">
{'response': 'kafka topic created successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:16.786" endtime="20190715 02:26:16.786"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:16.787" level="INFO">${response} = kafka topic created successfully</msg>
<status status="PASS" starttime="20190715 02:26:16.787" endtime="20190715 02:26:16.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:16.787" level="INFO">kafka topic created successfully</msg>
<status status="PASS" starttime="20190715 02:26:16.787" endtime="20190715 02:26:16.788"/>
</kw>
<status status="PASS" starttime="20190715 02:26:15.345" endtime="20190715 02:26:16.788"/>
</kw>
<status status="PASS" starttime="20190715 02:26:15.344" endtime="20190715 02:26:16.788"/>
</kw>
<kw name="I read all topic from kafka for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/kafka/gettopic for host ${host}" library="kafka_keywords">
<kw name="Read all topic in kafka" library="kafka_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:16.790" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:16.790" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:16.789" endtime="20190715 02:26:16.790"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:16.791" level="INFO">postData: {}</msg>
<msg timestamp="20190715 02:26:16.791" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/kafka/gettopic
</msg>
<msg timestamp="20190715 02:26:16.791" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:17.054" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:17.054" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:17.055" level="INFO">
resp.text: {"version": "2.1.0", "response": ["_topic", "PYTHON_test_topic_delete", "PYTHON_samplepythonv2_topic", "samplepythonv2_topic"]}
</msg>
<msg timestamp="20190715 02:26:17.055" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:16.790" endtime="20190715 02:26:17.055"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:17.057" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:17.056" endtime="20190715 02:26:17.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:17.058" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:17.057" endtime="20190715 02:26:17.058"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:17.059" level="INFO">
${resp_data} = {'response': ['_topic', 'PYTHON_test_topic_delete', 'PYTHON_samplepythonv2_topic', 'samplepythonv2_topic'], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:17.058" endtime="20190715 02:26:17.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.060" level="INFO">
{'response': ['_topic', 'PYTHON_test_topic_delete', 'PYTHON_samplepythonv2_topic', 'samplepythonv2_topic'], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:17.060" endtime="20190715 02:26:17.060"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:17.061" level="INFO">
${response} = ['_topic', 'PYTHON_test_topic_delete', 'PYTHON_samplepythonv2_topic', 'samplepythonv2_topic']
</msg>
<status status="PASS" starttime="20190715 02:26:17.061" endtime="20190715 02:26:17.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.062" level="INFO">
['_topic', 'PYTHON_test_topic_delete', 'PYTHON_samplepythonv2_topic', 'samplepythonv2_topic']
</msg>
<status status="PASS" starttime="20190715 02:26:17.062" endtime="20190715 02:26:17.062"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:17.063" level="INFO">Length is 4</msg>
<msg timestamp="20190715 02:26:17.063" level="INFO">${numberOfRows} = 4</msg>
<status status="PASS" starttime="20190715 02:26:17.063" endtime="20190715 02:26:17.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.065" level="INFO">4</msg>
<status status="PASS" starttime="20190715 02:26:17.064" endtime="20190715 02:26:17.065"/>
</kw>
<status status="PASS" starttime="20190715 02:26:16.789" endtime="20190715 02:26:17.065"/>
</kw>
<status status="PASS" starttime="20190715 02:26:16.788" endtime="20190715 02:26:17.065"/>
</kw>
<kw name="I delete topic ${app_container_type}_${delete_topic} for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/kafka/deletetopic for ${host}" library="kafka_keywords">
<kw name="Delete topic from kafka" library="kafka_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
<arg>{"topic_name": "${topic_name}"}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:17.067" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:17.068" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:17.067" endtime="20190715 02:26:17.068"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:17.068" level="INFO">
postData: {"topic_name": "PYTHON_test_topic_delete"}
</msg>
<msg timestamp="20190715 02:26:17.069" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/kafka/deletetopic
</msg>
<msg timestamp="20190715 02:26:17.069" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:17.348" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:17.349" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:17.349" level="INFO">
resp.text: {"version": "2.1.0", "response": "kafka topic deleted successfully"}
</msg>
<msg timestamp="20190715 02:26:17.350" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:17.068" endtime="20190715 02:26:17.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:17.351" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:17.350" endtime="20190715 02:26:17.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:17.353" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:17.352" endtime="20190715 02:26:17.353"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:17.354" level="INFO">
${resp_data} = {'response': 'kafka topic deleted successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:17.354" endtime="20190715 02:26:17.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.354" level="INFO">
{'response': 'kafka topic deleted successfully', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:17.354" endtime="20190715 02:26:17.355"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:17.355" level="INFO">${response} = kafka topic deleted successfully</msg>
<status status="PASS" starttime="20190715 02:26:17.355" endtime="20190715 02:26:17.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.356" level="INFO">kafka topic deleted successfully</msg>
<status status="PASS" starttime="20190715 02:26:17.355" endtime="20190715 02:26:17.356"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.066" endtime="20190715 02:26:17.356"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.066" endtime="20190715 02:26:17.356"/>
</kw>
<kw name="I read all topic from kafka for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/kafka/gettopic for host ${host}" library="kafka_keywords">
<kw name="Read all topic in kafka" library="kafka_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:17.358" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:17.358" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:17.357" endtime="20190715 02:26:17.358"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:17.359" level="INFO">postData: {}</msg>
<msg timestamp="20190715 02:26:17.359" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/kafka/gettopic
</msg>
<msg timestamp="20190715 02:26:17.359" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:17.624" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:17.625" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:17.625" level="INFO">
resp.text: {"version": "2.1.0", "response": ["_topic", "PYTHON_samplepythonv2_topic", "samplepythonv2_topic"]}
</msg>
<msg timestamp="20190715 02:26:17.625" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:17.358" endtime="20190715 02:26:17.625"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:17.627" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:17.626" endtime="20190715 02:26:17.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:17.628" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:17.627" endtime="20190715 02:26:17.628"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:17.629" level="INFO">
${resp_data} = {'response': ['_topic', 'PYTHON_samplepythonv2_topic', 'samplepythonv2_topic'], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:17.629" endtime="20190715 02:26:17.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.630" level="INFO">
{'response': ['_topic', 'PYTHON_samplepythonv2_topic', 'samplepythonv2_topic'], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:17.630" endtime="20190715 02:26:17.631"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:17.632" level="INFO">
${response} = ['_topic', 'PYTHON_samplepythonv2_topic', 'samplepythonv2_topic']
</msg>
<status status="PASS" starttime="20190715 02:26:17.631" endtime="20190715 02:26:17.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.633" level="INFO">
['_topic', 'PYTHON_samplepythonv2_topic', 'samplepythonv2_topic']
</msg>
<status status="PASS" starttime="20190715 02:26:17.632" endtime="20190715 02:26:17.633"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:17.634" level="INFO">Length is 3</msg>
<msg timestamp="20190715 02:26:17.634" level="INFO">${numberOfRows} = 3</msg>
<status status="PASS" starttime="20190715 02:26:17.633" endtime="20190715 02:26:17.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.635" level="INFO">3</msg>
<status status="PASS" starttime="20190715 02:26:17.634" endtime="20190715 02:26:17.635"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.357" endtime="20190715 02:26:17.635"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.356" endtime="20190715 02:26:17.636"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will delete kakfa topic for {appstack_namespace} sample app based on delete filter parameter
</doc>
<tags>
<tag>java_app</tag>
<tag>kafka_test</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:15.342" endtime="20190715 02:26:17.636"/>
</test>
<status status="PASS" starttime="20190715 02:26:01.618" endtime="20190715 02:26:17.638"/>
</suite>
<suite id="s1-s1-s1-s3" source="/home/jenkins/workspace/qa/Inside-Out/sanity-child-jobs/python_app_based_tests/testsuites/02_managed_services_central/03_mongodb_crud.robot" name="03 Mongodb Crud">
<test id="s1-s1-s1-s3-t1" name="00 Running Suite Setup">
<kw name="choose service with topology ${topology_version}" library="managed_services_keywords">
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${app_container_type}'== 'PYTHON'</arg>
<arg>samplepython</arg>
<arg>'${app_container_type}'== 'JAVA'</arg>
<arg>samplejava</arg>
<arg>'${app_container_type}'== 'GO'</arg>
<arg>samplego</arg>
<arg>'${app_container_type}'== 'GO'</arg>
<arg>samplego</arg>
</arguments>
<assign>
<var>${service_name}</var>
</assign>
<msg timestamp="20190715 02:26:17.672" level="INFO">${service_name} = samplepython</msg>
<status status="PASS" starttime="20190715 02:26:17.671" endtime="20190715 02:26:17.672"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>${topology_version}</arg>
</arguments>
<assign>
<var>${service_name}</var>
</assign>
<msg timestamp="20190715 02:26:17.673" level="INFO">${service_name} = samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:26:17.672" endtime="20190715 02:26:17.673"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>
Makes a variable available globally in all tests and suites.
</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.673" level="INFO">${service_name} = samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:26:17.673" endtime="20190715 02:26:17.673"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.671" endtime="20190715 02:26:17.673"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${service_name}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:17.674" endtime="20190715 02:26:17.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.675" level="INFO">samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:26:17.675" endtime="20190715 02:26:17.675"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.674" endtime="20190715 02:26:17.675"/>
</kw>
<tags>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:17.670" endtime="20190715 02:26:17.675"/>
</test>
<test id="s1-s1-s1-s3-t2" name="I create connection to Mongodb">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:17.677" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:17.676" endtime="20190715 02:26:17.677"/>
</kw>
<kw name="I create MongoDB connection for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/connect and host ${host}" library="mongodb_keywords">
<kw name="Create mongodb Connection" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:17.934" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:17.935" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:17.678" endtime="20190715 02:26:17.935"/>
</kw>
<kw type="for" name="${INDEX} IN RANGE [ 0 | 5 ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create DB Connection Trail ${INDEX}</arg>
</arguments>
<msg timestamp="20190715 02:26:17.936" level="INFO">Create DB Connection Trail 0</msg>
<status status="PASS" starttime="20190715 02:26:17.936" endtime="20190715 02:26:17.937"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:17.938" level="INFO">postData: {}</msg>
<msg timestamp="20190715 02:26:17.939" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/connect
</msg>
<msg timestamp="20190715 02:26:17.939" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:18.300" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:18.301" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:18.301" level="INFO">
resp.text: {"version": "2.1.0", "response": "mongodb connection successful"}
</msg>
<msg timestamp="20190715 02:26:18.302" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:17.937" endtime="20190715 02:26:18.302"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:18.303" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:18.302" endtime="20190715 02:26:18.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:18.305" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:18.304" endtime="20190715 02:26:18.305"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>
Stops executing the enclosing for loop if the ``condition`` is true.
</doc>
<arguments>
<arg>'${status_code}'=='200'</arg>
</arguments>
<msg timestamp="20190715 02:26:18.307" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190715 02:26:18.305" endtime="20190715 02:26:18.307"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.935" endtime="20190715 02:26:18.307"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.935" endtime="20190715 02:26:18.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:18.307" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:18.307" endtime="20190715 02:26:18.308"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:18.308" level="INFO">
${resp_data} = {'response': 'mongodb connection successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:18.308" endtime="20190715 02:26:18.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:18.309" level="INFO">
{'response': 'mongodb connection successful', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:18.308" endtime="20190715 02:26:18.309"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:18.309" level="INFO">${response} = mongodb connection successful</msg>
<status status="PASS" starttime="20190715 02:26:18.309" endtime="20190715 02:26:18.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:18.310" level="INFO">mongodb connection successful</msg>
<status status="PASS" starttime="20190715 02:26:18.310" endtime="20190715 02:26:18.310"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.678" endtime="20190715 02:26:18.310"/>
</kw>
<status status="PASS" starttime="20190715 02:26:17.677" endtime="20190715 02:26:18.310"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will read mongodb data for {appstack_namespace} sample app
</doc>
<tags>
<tag>inside_out</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:17.676" endtime="20190715 02:26:18.310"/>
</test>
<test id="s1-s1-s1-s3-t3" name="I read data from Mongodb">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:18.312" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:18.312" endtime="20190715 02:26:18.313"/>
</kw>
<kw name="I read data from Mongodb using maglev sdk for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb using maglev sdk And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"query_filter":{"status":"running"}}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:18.575" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:18.575" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:18.315" endtime="20190715 02:26:18.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190715 02:26:18.576" level="INFO">{"query_filter":{"status":"running"}}</msg>
<status status="PASS" starttime="20190715 02:26:18.575" endtime="20190715 02:26:18.576"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>jsonData=True</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:18.577" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/read
</msg>
<msg timestamp="20190715 02:26:18.577" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:18.577" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE3OCwiaWF0IjoxNTYzMTU3NTc4LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.evClPiSXohbyeyGsKPtEAb8pWUyTdT5CQ02py-CR-MmSIzh1MGmfLGy7Wx-NdcfoDWlr3phZNV-CnQSTyROPlw'}
</msg>
<msg timestamp="20190715 02:26:19.186" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:19.186" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:18.576" endtime="20190715 02:26:19.186"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:19.188" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:19.187" endtime="20190715 02:26:19.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:19.189" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:19.188" endtime="20190715 02:26:19.189"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:19.191" level="INFO">
${resp_data} = {'response': " read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribut...
</msg>
<status status="PASS" starttime="20190715 02:26:19.190" endtime="20190715 02:26:19.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:19.192" level="INFO">
{'response': " read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'] ", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:19.191" endtime="20190715 02:26:19.192"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:19.193" level="INFO">
${response} = read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getit...
</msg>
<status status="PASS" starttime="20190715 02:26:19.192" endtime="20190715 02:26:19.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:19.194" level="INFO">
read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
</msg>
<status status="PASS" starttime="20190715 02:26:19.193" endtime="20190715 02:26:19.194"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:19.195" level="INFO">Length is 587</msg>
<msg timestamp="20190715 02:26:19.195" level="INFO">${numberOfRows} = 587</msg>
<status status="PASS" starttime="20190715 02:26:19.194" endtime="20190715 02:26:19.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:19.196" level="INFO">587</msg>
<status status="PASS" starttime="20190715 02:26:19.196" endtime="20190715 02:26:19.196"/>
</kw>
<status status="PASS" starttime="20190715 02:26:18.314" endtime="20190715 02:26:19.196"/>
</kw>
<status status="PASS" starttime="20190715 02:26:18.313" endtime="20190715 02:26:19.196"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will read mongodb data for {appstack_namespace} sample app
</doc>
<tags>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:18.311" endtime="20190715 02:26:19.197"/>
</test>
<test id="s1-s1-s1-s3-t4" name="I write data in Mongodb">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:19.198" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:19.198" endtime="20190715 02:26:19.198"/>
</kw>
<kw name="I read data from Mongodb using maglev sdk for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb using maglev sdk And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"query_filter":{"status":"running"}}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:19.462" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:19.462" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:19.200" endtime="20190715 02:26:19.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190715 02:26:19.463" level="INFO">{"query_filter":{"status":"running"}}</msg>
<status status="PASS" starttime="20190715 02:26:19.462" endtime="20190715 02:26:19.463"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>jsonData=True</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:19.464" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/read
</msg>
<msg timestamp="20190715 02:26:19.464" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:19.464" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE3OCwiaWF0IjoxNTYzMTU3NTc4LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.veIXvVVecNOA2iyPU7JG2LN63w_ypubDrtxPAEAW098ELXWEZ_GtdhkDcb6DHrh46QwqXabwgCduvovdkn8zdg'}
</msg>
<msg timestamp="20190715 02:26:19.785" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:19.785" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:19.463" endtime="20190715 02:26:19.785"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:19.786" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:19.785" endtime="20190715 02:26:19.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:19.786" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:19.786" endtime="20190715 02:26:19.787"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:19.787" level="INFO">
${resp_data} = {'response': " read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribut...
</msg>
<status status="PASS" starttime="20190715 02:26:19.787" endtime="20190715 02:26:19.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:19.789" level="INFO">
{'response': " read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'] ", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:19.787" endtime="20190715 02:26:19.790"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:19.790" level="INFO">
${response} = read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getit...
</msg>
<status status="PASS" starttime="20190715 02:26:19.790" endtime="20190715 02:26:19.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:19.790" level="INFO">
read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
</msg>
<status status="PASS" starttime="20190715 02:26:19.790" endtime="20190715 02:26:19.791"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:19.791" level="INFO">Length is 587</msg>
<msg timestamp="20190715 02:26:19.791" level="INFO">${numberOfRows} = 587</msg>
<status status="PASS" starttime="20190715 02:26:19.791" endtime="20190715 02:26:19.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:19.791" level="INFO">587</msg>
<status status="PASS" starttime="20190715 02:26:19.791" endtime="20190715 02:26:19.792"/>
</kw>
<status status="PASS" starttime="20190715 02:26:19.199" endtime="20190715 02:26:19.792"/>
</kw>
<status status="PASS" starttime="20190715 02:26:19.198" endtime="20190715 02:26:19.792"/>
</kw>
<kw name="I insert 1 row in MongoDB using maglev sdk with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/write and host ${host}" library="mongodb_keywords">
<kw type="for" name="${i} IN RANGE [ 0 | ${count} ]">
<kw type="foritem" name="${i} = 0">
<kw name="Insert Data In To mongodb using maglev sdk" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"record": {"device_id": "${i}", "name": "Device ${i}", "ip": "251.89.70.3","version": "1.0.0", "status": "running"}}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:19.794" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:19.794" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:19.793" endtime="20190715 02:26:19.794"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>timeout=60</arg>
<arg>jsonData=True</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:19.795" level="INFO">
postData: {"record": {"device_id": "0", "name": "Device 0", "ip": "251.89.70.3","version": "1.0.0", "status": "running"}}
</msg>
<msg timestamp="20190715 02:26:19.795" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/write
</msg>
<msg timestamp="20190715 02:26:19.795" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:20.086" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:20.086" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:20.086" level="INFO">
resp.text: {"version": "2.1.0", "response": " add data to mongodb is successful : 5d2be44bc93e82000fc396a0, ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']"}
</msg>
<msg timestamp="20190715 02:26:20.086" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:19.794" endtime="20190715 02:26:20.087"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:20.087" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:20.087" endtime="20190715 02:26:20.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:20.088" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:20.088" endtime="20190715 02:26:20.088"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:20.089" level="INFO">
${resp_data} = {'response': " add data to mongodb is successful : 5d2be44bc93e82000fc396a0, ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattr...
</msg>
<status status="PASS" starttime="20190715 02:26:20.088" endtime="20190715 02:26:20.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.089" level="INFO">
{'response': " add data to mongodb is successful : 5d2be44bc93e82000fc396a0, ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:20.089" endtime="20190715 02:26:20.089"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:20.090" level="INFO">
${response} = add data to mongodb is successful : 5d2be44bc93e82000fc396a0, ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__g...
</msg>
<status status="PASS" starttime="20190715 02:26:20.089" endtime="20190715 02:26:20.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.090" level="INFO">
add data to mongodb is successful : 5d2be44bc93e82000fc396a0, ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
</msg>
<status status="PASS" starttime="20190715 02:26:20.090" endtime="20190715 02:26:20.090"/>
</kw>
<status status="PASS" starttime="20190715 02:26:19.793" endtime="20190715 02:26:20.090"/>
</kw>
<status status="PASS" starttime="20190715 02:26:19.793" endtime="20190715 02:26:20.090"/>
</kw>
<status status="PASS" starttime="20190715 02:26:19.793" endtime="20190715 02:26:20.090"/>
</kw>
<status status="PASS" starttime="20190715 02:26:19.792" endtime="20190715 02:26:20.091"/>
</kw>
<kw name="I read data from Mongodb using maglev sdk for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb using maglev sdk And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"query_filter":{"status":"running"}}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:20.092" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:20.093" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:20.092" endtime="20190715 02:26:20.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.093" level="INFO">{"query_filter":{"status":"running"}}</msg>
<status status="PASS" starttime="20190715 02:26:20.093" endtime="20190715 02:26:20.093"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>jsonData=True</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:20.094" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/read
</msg>
<msg timestamp="20190715 02:26:20.094" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:20.094" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE3OCwiaWF0IjoxNTYzMTU3NTc4LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.veIXvVVecNOA2iyPU7JG2LN63w_ypubDrtxPAEAW098ELXWEZ_GtdhkDcb6DHrh46QwqXabwgCduvovdkn8zdg'}
</msg>
<msg timestamp="20190715 02:26:20.354" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:20.354" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:20.093" endtime="20190715 02:26:20.354"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:20.355" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:20.354" endtime="20190715 02:26:20.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:20.355" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:20.355" endtime="20190715 02:26:20.355"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:20.356" level="INFO">
${resp_data} = {'response': " read data from mongodb is successful : [{'tenantId': 'SYS0', 'ip': '251.89.70.3', 'device_id': '0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'name': ...
</msg>
<status status="PASS" starttime="20190715 02:26:20.355" endtime="20190715 02:26:20.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.356" level="INFO">
{'response': " read data from mongodb is successful : [{'tenantId': 'SYS0', 'ip': '251.89.70.3', 'device_id': '0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'name': 'Device 0'}], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'] ", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:20.356" endtime="20190715 02:26:20.356"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:20.357" level="INFO">
${response} = read data from mongodb is successful : [{'tenantId': 'SYS0', 'ip': '251.89.70.3', 'device_id': '0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'name': 'Device 0'}], ...
</msg>
<status status="PASS" starttime="20190715 02:26:20.357" endtime="20190715 02:26:20.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.357" level="INFO">
read data from mongodb is successful : [{'tenantId': 'SYS0', 'ip': '251.89.70.3', 'device_id': '0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'name': 'Device 0'}], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
</msg>
<status status="PASS" starttime="20190715 02:26:20.357" endtime="20190715 02:26:20.357"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:20.358" level="INFO">Length is 742</msg>
<msg timestamp="20190715 02:26:20.358" level="INFO">${numberOfRows} = 742</msg>
<status status="PASS" starttime="20190715 02:26:20.358" endtime="20190715 02:26:20.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.358" level="INFO">742</msg>
<status status="PASS" starttime="20190715 02:26:20.358" endtime="20190715 02:26:20.358"/>
</kw>
<status status="PASS" starttime="20190715 02:26:20.091" endtime="20190715 02:26:20.358"/>
</kw>
<status status="PASS" starttime="20190715 02:26:20.091" endtime="20190715 02:26:20.359"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will read mongodb data for {appstack_namespace} sample app
</doc>
<tags>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:19.197" endtime="20190715 02:26:20.359"/>
</test>
<test id="s1-s1-s1-s3-t5" name="I update data in Mongodb">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:20.360" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:20.360" endtime="20190715 02:26:20.360"/>
</kw>
<kw name="I read data from Mongodb using maglev sdk for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb using maglev sdk And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"query_filter":{"status":"running"}}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:20.621" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:20.621" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:20.361" endtime="20190715 02:26:20.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.622" level="INFO">{"query_filter":{"status":"running"}}</msg>
<status status="PASS" starttime="20190715 02:26:20.622" endtime="20190715 02:26:20.622"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>jsonData=True</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:20.623" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/read
</msg>
<msg timestamp="20190715 02:26:20.624" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:20.624" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4MCwiaWF0IjoxNTYzMTU3NTgwLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.5Y5SZQA-r8eTTMoY3mGYtDPojfQgG0cH2tH6XM5n0yP5gexRpqGgnhpnnSFfazy0Tm0W0zAgrPqT3YPXpUgT3g'}
</msg>
<msg timestamp="20190715 02:26:20.984" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:20.985" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:20.623" endtime="20190715 02:26:20.985"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:20.986" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:20.985" endtime="20190715 02:26:20.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:20.986" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:20.986" endtime="20190715 02:26:20.986"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:20.987" level="INFO">
${resp_data} = {'response': " read data from mongodb is successful : [{'tenantId': 'SYS0', 'ip': '251.89.70.3', 'device_id': '0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'name': ...
</msg>
<status status="PASS" starttime="20190715 02:26:20.987" endtime="20190715 02:26:20.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.988" level="INFO">
{'response': " read data from mongodb is successful : [{'tenantId': 'SYS0', 'ip': '251.89.70.3', 'device_id': '0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'name': 'Device 0'}], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'] ", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:20.987" endtime="20190715 02:26:20.988"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:20.988" level="INFO">
${response} = read data from mongodb is successful : [{'tenantId': 'SYS0', 'ip': '251.89.70.3', 'device_id': '0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'name': 'Device 0'}], ...
</msg>
<status status="PASS" starttime="20190715 02:26:20.988" endtime="20190715 02:26:20.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.989" level="INFO">
read data from mongodb is successful : [{'tenantId': 'SYS0', 'ip': '251.89.70.3', 'device_id': '0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'name': 'Device 0'}], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
</msg>
<status status="PASS" starttime="20190715 02:26:20.988" endtime="20190715 02:26:20.989"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:20.989" level="INFO">Length is 742</msg>
<msg timestamp="20190715 02:26:20.989" level="INFO">${numberOfRows} = 742</msg>
<status status="PASS" starttime="20190715 02:26:20.989" endtime="20190715 02:26:20.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:20.990" level="INFO">742</msg>
<status status="PASS" starttime="20190715 02:26:20.990" endtime="20190715 02:26:20.990"/>
</kw>
<status status="PASS" starttime="20190715 02:26:20.361" endtime="20190715 02:26:20.990"/>
</kw>
<status status="PASS" starttime="20190715 02:26:20.360" endtime="20190715 02:26:20.990"/>
</kw>
<kw name="I update data in MongoDB using maglev sdk ${update_filter} with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/update and host ${host}" library="mongodb_keywords">
<kw name="Update Data In mongodb" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"query_filter": {"name": "${update_filter}"}, "updates" : {"set": {"status" : "abc"}}}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:20.993" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:20.993" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:20.992" endtime="20190715 02:26:20.993"/>
</kw>
<kw name="PUT" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:20.994" level="INFO">
put_data: {"query_filter": {"name": "Device 0"}, "updates" : {"set": {"status" : "abc"}}}
</msg>
<msg timestamp="20190715 02:26:20.994" level="INFO">
Looking at API in requestslib.put: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/update
</msg>
<msg timestamp="20190715 02:26:20.994" level="INFO">extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:20.994" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4MCwiaWF0IjoxNTYzMTU3NTgwLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.5Y5SZQA-r8eTTMoY3mGYtDPojfQgG0cH2tH6XM5n0yP5gexRpqGgnhpnnSFfazy0Tm0W0zAgrPqT3YPXpUgT3g'}
</msg>
<msg timestamp="20190715 02:26:21.285" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:21.286" level="INFO">
resp.text: {"version": "2.1.0", "response": " update data to mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']"}
</msg>
<msg timestamp="20190715 02:26:21.286" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:20.993" endtime="20190715 02:26:21.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:21.288" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:21.287" endtime="20190715 02:26:21.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:21.289" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:21.288" endtime="20190715 02:26:21.289"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:21.290" level="INFO">
${resp_data} = {'response': " update data to mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', ...
</msg>
<status status="PASS" starttime="20190715 02:26:21.290" endtime="20190715 02:26:21.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:21.291" level="INFO">
{'response': " update data to mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:21.291" endtime="20190715 02:26:21.291"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:21.293" level="INFO">
${response} = update data to mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '_...
</msg>
<status status="PASS" starttime="20190715 02:26:21.292" endtime="20190715 02:26:21.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:21.293" level="INFO">
update data to mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']
</msg>
<status status="PASS" starttime="20190715 02:26:21.293" endtime="20190715 02:26:21.294"/>
</kw>
<status status="PASS" starttime="20190715 02:26:20.991" endtime="20190715 02:26:21.294"/>
</kw>
<status status="PASS" starttime="20190715 02:26:20.991" endtime="20190715 02:26:21.294"/>
</kw>
<kw name="I read data from Mongodb using maglev sdk for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb using maglev sdk And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"query_filter":{"status":"running"}}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:21.297" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:21.297" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:21.296" endtime="20190715 02:26:21.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190715 02:26:21.298" level="INFO">{"query_filter":{"status":"running"}}</msg>
<status status="PASS" starttime="20190715 02:26:21.297" endtime="20190715 02:26:21.298"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>jsonData=True</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:21.298" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/read
</msg>
<msg timestamp="20190715 02:26:21.299" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:21.299" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4MCwiaWF0IjoxNTYzMTU3NTgwLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.5Y5SZQA-r8eTTMoY3mGYtDPojfQgG0cH2tH6XM5n0yP5gexRpqGgnhpnnSFfazy0Tm0W0zAgrPqT3YPXpUgT3g'}
</msg>
<msg timestamp="20190715 02:26:21.585" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:21.586" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:21.298" endtime="20190715 02:26:21.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:21.587" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:21.586" endtime="20190715 02:26:21.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:21.588" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:21.588" endtime="20190715 02:26:21.589"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:21.590" level="INFO">
${resp_data} = {'response': " read data from mongodb is successful : [{'set': {'status': 'abc'}, 'tenantId': 'SYS0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'ip': '251.89.70.3', ...
</msg>
<status status="PASS" starttime="20190715 02:26:21.589" endtime="20190715 02:26:21.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:21.591" level="INFO">
{'response': " read data from mongodb is successful : [{'set': {'status': 'abc'}, 'tenantId': 'SYS0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'ip': '251.89.70.3', 'device_id': '0', 'name': 'Device 0'}], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'] ", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:21.590" endtime="20190715 02:26:21.591"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:21.592" level="INFO">
${response} = read data from mongodb is successful : [{'set': {'status': 'abc'}, 'tenantId': 'SYS0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'ip': '251.89.70.3', 'device_id': '...
</msg>
<status status="PASS" starttime="20190715 02:26:21.591" endtime="20190715 02:26:21.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:21.593" level="INFO">
read data from mongodb is successful : [{'set': {'status': 'abc'}, 'tenantId': 'SYS0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'ip': '251.89.70.3', 'device_id': '0', 'name': 'Device 0'}], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
</msg>
<status status="PASS" starttime="20190715 02:26:21.593" endtime="20190715 02:26:21.593"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:21.594" level="INFO">Length is 768</msg>
<msg timestamp="20190715 02:26:21.595" level="INFO">${numberOfRows} = 768</msg>
<status status="PASS" starttime="20190715 02:26:21.594" endtime="20190715 02:26:21.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:21.595" level="INFO">768</msg>
<status status="PASS" starttime="20190715 02:26:21.595" endtime="20190715 02:26:21.596"/>
</kw>
<status status="PASS" starttime="20190715 02:26:21.296" endtime="20190715 02:26:21.596"/>
</kw>
<status status="PASS" starttime="20190715 02:26:21.295" endtime="20190715 02:26:21.596"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will delete mongodb data for {appstack_namespace} sample app based on delete filter parameter
</doc>
<tags>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:20.359" endtime="20190715 02:26:21.596"/>
</test>
<test id="s1-s1-s1-s3-t6" name="I delete data from Mongodb">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:21.598" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:21.598" endtime="20190715 02:26:21.598"/>
</kw>
<kw name="I read data from Mongodb using maglev sdk for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb using maglev sdk And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"query_filter":{"status":"running"}}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:21.863" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:21.863" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:21.599" endtime="20190715 02:26:21.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190715 02:26:21.865" level="INFO">{"query_filter":{"status":"running"}}</msg>
<status status="PASS" starttime="20190715 02:26:21.865" endtime="20190715 02:26:21.865"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>jsonData=True</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:21.866" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/read
</msg>
<msg timestamp="20190715 02:26:21.867" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:21.867" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4MSwiaWF0IjoxNTYzMTU3NTgxLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.TlGg2RvfOZgQhzPRI8SZrtHhcUX2_NAFVqVOun6hvgTXDIHBVzLyWnAiz7TJFEDyMFoa7jtqUGnAxaxumN7ZmA'}
</msg>
<msg timestamp="20190715 02:26:22.188" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:22.188" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:21.866" endtime="20190715 02:26:22.188"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:22.190" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:22.189" endtime="20190715 02:26:22.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:22.191" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:22.190" endtime="20190715 02:26:22.191"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:22.192" level="INFO">
${resp_data} = {'response': " read data from mongodb is successful : [{'set': {'status': 'abc'}, 'tenantId': 'SYS0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'ip': '251.89.70.3', ...
</msg>
<status status="PASS" starttime="20190715 02:26:22.191" endtime="20190715 02:26:22.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:22.193" level="INFO">
{'response': " read data from mongodb is successful : [{'set': {'status': 'abc'}, 'tenantId': 'SYS0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'ip': '251.89.70.3', 'device_id': '0', 'name': 'Device 0'}], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'] ", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:22.193" endtime="20190715 02:26:22.193"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:22.194" level="INFO">
${response} = read data from mongodb is successful : [{'set': {'status': 'abc'}, 'tenantId': 'SYS0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'ip': '251.89.70.3', 'device_id': '...
</msg>
<status status="PASS" starttime="20190715 02:26:22.194" endtime="20190715 02:26:22.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:22.195" level="INFO">
read data from mongodb is successful : [{'set': {'status': 'abc'}, 'tenantId': 'SYS0', 'status': 'running', 'version': '1.0.0', '_id': '5d2be44bc93e82000fc396a0', 'ip': '251.89.70.3', 'device_id': '0', 'name': 'Device 0'}], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
</msg>
<status status="PASS" starttime="20190715 02:26:22.195" endtime="20190715 02:26:22.196"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:22.196" level="INFO">Length is 768</msg>
<msg timestamp="20190715 02:26:22.196" level="INFO">${numberOfRows} = 768</msg>
<status status="PASS" starttime="20190715 02:26:22.196" endtime="20190715 02:26:22.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:22.197" level="INFO">768</msg>
<status status="PASS" starttime="20190715 02:26:22.197" endtime="20190715 02:26:22.197"/>
</kw>
<status status="PASS" starttime="20190715 02:26:21.599" endtime="20190715 02:26:22.197"/>
</kw>
<status status="PASS" starttime="20190715 02:26:21.598" endtime="20190715 02:26:22.197"/>
</kw>
<kw name="I update data in MongoDB using maglev sdk ${delete_filter} with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/delete and host ${host}" library="mongodb_keywords">
<kw name="Update Data In mongodb" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"query_filter": {"name": "${update_filter}"}, "updates" : {"set": {"status" : "abc"}}}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:22.199" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:22.199" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:22.199" endtime="20190715 02:26:22.199"/>
</kw>
<kw name="PUT" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:22.200" level="INFO">
put_data: {"query_filter": {"name": "Device 0"}, "updates" : {"set": {"status" : "abc"}}}
</msg>
<msg timestamp="20190715 02:26:22.200" level="INFO">
Looking at API in requestslib.put: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/delete
</msg>
<msg timestamp="20190715 02:26:22.201" level="INFO">extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:22.201" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4MSwiaWF0IjoxNTYzMTU3NTgxLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.TlGg2RvfOZgQhzPRI8SZrtHhcUX2_NAFVqVOun6hvgTXDIHBVzLyWnAiz7TJFEDyMFoa7jtqUGnAxaxumN7ZmA'}
</msg>
<msg timestamp="20190715 02:26:22.489" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:22.489" level="INFO">
resp.text: {"version": "2.1.0", "response": " delete data from mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']"}
</msg>
<msg timestamp="20190715 02:26:22.490" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:22.199" endtime="20190715 02:26:22.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:22.491" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:22.490" endtime="20190715 02:26:22.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:22.492" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:22.492" endtime="20190715 02:26:22.493"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:22.494" level="INFO">
${resp_data} = {'response': " delete data from mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__'...
</msg>
<status status="PASS" starttime="20190715 02:26:22.493" endtime="20190715 02:26:22.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:22.495" level="INFO">
{'response': " delete data from mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:22.494" endtime="20190715 02:26:22.495"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:22.496" level="INFO">
${response} = delete data from mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', ...
</msg>
<status status="PASS" starttime="20190715 02:26:22.495" endtime="20190715 02:26:22.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:22.497" level="INFO">
delete data from mongodb is successful : None, ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']
</msg>
<status status="PASS" starttime="20190715 02:26:22.496" endtime="20190715 02:26:22.497"/>
</kw>
<status status="PASS" starttime="20190715 02:26:22.198" endtime="20190715 02:26:22.497"/>
</kw>
<status status="PASS" starttime="20190715 02:26:22.198" endtime="20190715 02:26:22.497"/>
</kw>
<kw name="I read data from Mongodb using maglev sdk for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb using maglev sdk And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"query_filter":{"status":"running"}}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:22.499" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:22.499" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:22.499" endtime="20190715 02:26:22.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190715 02:26:22.500" level="INFO">{"query_filter":{"status":"running"}}</msg>
<status status="PASS" starttime="20190715 02:26:22.499" endtime="20190715 02:26:22.500"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>postData=${data}</arg>
<arg>jsonData=True</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:22.501" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/read
</msg>
<msg timestamp="20190715 02:26:22.501" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:22.501" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4MSwiaWF0IjoxNTYzMTU3NTgxLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.TlGg2RvfOZgQhzPRI8SZrtHhcUX2_NAFVqVOun6hvgTXDIHBVzLyWnAiz7TJFEDyMFoa7jtqUGnAxaxumN7ZmA'}
</msg>
<msg timestamp="20190715 02:26:22.784" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:22.785" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:22.500" endtime="20190715 02:26:22.785"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:22.786" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:22.785" endtime="20190715 02:26:22.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:22.786" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:22.786" endtime="20190715 02:26:22.786"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:22.787" level="INFO">
${resp_data} = {'response': " read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribut...
</msg>
<status status="PASS" starttime="20190715 02:26:22.786" endtime="20190715 02:26:22.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:22.787" level="INFO">
{'response': " read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'] ", 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:22.787" endtime="20190715 02:26:22.787"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:22.788" level="INFO">
${response} = read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getit...
</msg>
<status status="PASS" starttime="20190715 02:26:22.787" endtime="20190715 02:26:22.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:22.788" level="INFO">
read data from mongodb is successful : [], ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
</msg>
<status status="PASS" starttime="20190715 02:26:22.788" endtime="20190715 02:26:22.788"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:22.789" level="INFO">Length is 587</msg>
<msg timestamp="20190715 02:26:22.789" level="INFO">${numberOfRows} = 587</msg>
<status status="PASS" starttime="20190715 02:26:22.789" endtime="20190715 02:26:22.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:22.789" level="INFO">587</msg>
<status status="PASS" starttime="20190715 02:26:22.789" endtime="20190715 02:26:22.789"/>
</kw>
<status status="PASS" starttime="20190715 02:26:22.498" endtime="20190715 02:26:22.790"/>
</kw>
<status status="PASS" starttime="20190715 02:26:22.497" endtime="20190715 02:26:22.790"/>
</kw>
<doc>
Author :KUNAL KRISHNA<kunkrish@cisco.com> Description : Here we will delete mongodb data for {appstack_namespace} sample app based on delete filter parameter
</doc>
<tags>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:21.597" endtime="20190715 02:26:22.790"/>
</test>
<test id="s1-s1-s1-s3-t7" name="I create connection to Mongodb using pymongo">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:22.791" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:22.791" endtime="20190715 02:26:22.791"/>
</kw>
<kw name="I create MongoDB connection for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/connect and host ${host}" library="mongodb_keywords">
<kw name="Create mongodb Connection" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:23.051" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:23.052" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:22.793" endtime="20190715 02:26:23.052"/>
</kw>
<kw type="for" name="${INDEX} IN RANGE [ 0 | 5 ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create DB Connection Trail ${INDEX}</arg>
</arguments>
<msg timestamp="20190715 02:26:23.053" level="INFO">Create DB Connection Trail 0</msg>
<status status="PASS" starttime="20190715 02:26:23.053" endtime="20190715 02:26:23.053"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:23.054" level="INFO">postData: {}</msg>
<msg timestamp="20190715 02:26:23.054" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/connect
</msg>
<msg timestamp="20190715 02:26:23.054" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:23.316" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:23.316" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:23.316" level="INFO">
resp.text: {"version": "2.1.0", "response": "mongodb connection already established, re-using the mongodb client"}
</msg>
<msg timestamp="20190715 02:26:23.316" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:23.053" endtime="20190715 02:26:23.316"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:23.317" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:23.317" endtime="20190715 02:26:23.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:23.318" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:23.318" endtime="20190715 02:26:23.318"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>
Stops executing the enclosing for loop if the ``condition`` is true.
</doc>
<arguments>
<arg>'${status_code}'=='200'</arg>
</arguments>
<msg timestamp="20190715 02:26:23.319" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190715 02:26:23.318" endtime="20190715 02:26:23.319"/>
</kw>
<status status="PASS" starttime="20190715 02:26:23.052" endtime="20190715 02:26:23.319"/>
</kw>
<status status="PASS" starttime="20190715 02:26:23.052" endtime="20190715 02:26:23.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:23.320" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:23.320" endtime="20190715 02:26:23.320"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:23.320" level="INFO">
${resp_data} = {'response': 'mongodb connection already established, re-using the mongodb client', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:23.320" endtime="20190715 02:26:23.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:23.321" level="INFO">
{'response': 'mongodb connection already established, re-using the mongodb client', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:23.321" endtime="20190715 02:26:23.321"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:23.322" level="INFO">
${response} = mongodb connection already established, re-using the mongodb client
</msg>
<status status="PASS" starttime="20190715 02:26:23.321" endtime="20190715 02:26:23.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:23.322" level="INFO">
mongodb connection already established, re-using the mongodb client
</msg>
<status status="PASS" starttime="20190715 02:26:23.322" endtime="20190715 02:26:23.322"/>
</kw>
<status status="PASS" starttime="20190715 02:26:22.792" endtime="20190715 02:26:23.322"/>
</kw>
<status status="PASS" starttime="20190715 02:26:22.792" endtime="20190715 02:26:23.322"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : Here we will read mongodb data for {appstack_namespace} sample app
</doc>
<tags>
<tag>inside_out</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:22.790" endtime="20190715 02:26:23.323"/>
</test>
<test id="s1-s1-s1-s3-t8" name="I read data from Mongodb using pymongo">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:23.324" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:23.324" endtime="20190715 02:26:23.324"/>
</kw>
<kw name="I read data from Mongodb for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:23.591" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:23.591" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:23.326" endtime="20190715 02:26:23.591"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:23.592" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_read
</msg>
<msg timestamp="20190715 02:26:23.593" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:23.593" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4MywiaWF0IjoxNTYzMTU3NTgzLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.k9tvq5AHooheAif19rlLAd4YtlH5ITIz3XAioVJRs0-nQD63Cs2KFS-zpGn7lOE-PMmvckVOV3S73KZUIkiZbQ'}
</msg>
<msg timestamp="20190715 02:26:23.847" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:23.848" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:23.592" endtime="20190715 02:26:23.848"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:23.849" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:23.848" endtime="20190715 02:26:23.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:23.849" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:23.849" endtime="20190715 02:26:23.849"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:23.850" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:23.850" endtime="20190715 02:26:23.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:23.851" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:23.850" endtime="20190715 02:26:23.851"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:23.851" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:26:23.851" endtime="20190715 02:26:23.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:23.852" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:26:23.851" endtime="20190715 02:26:23.852"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:23.852" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:26:23.852" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:26:23.852" endtime="20190715 02:26:23.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:23.853" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:26:23.853" endtime="20190715 02:26:23.853"/>
</kw>
<status status="PASS" starttime="20190715 02:26:23.325" endtime="20190715 02:26:23.853"/>
</kw>
<status status="PASS" starttime="20190715 02:26:23.325" endtime="20190715 02:26:23.853"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : Here we will read mongodb data for {appstack_namespace} sample app
</doc>
<tags>
<tag>inside_out</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:23.323" endtime="20190715 02:26:23.854"/>
</test>
<test id="s1-s1-s1-s3-t9" name="I write data in Mongodb using pymongo">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:23.855" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:23.855" endtime="20190715 02:26:23.855"/>
</kw>
<kw name="I read data from Mongodb for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:24.122" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:24.122" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:23.857" endtime="20190715 02:26:24.123"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:24.124" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_read
</msg>
<msg timestamp="20190715 02:26:24.124" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:24.124" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4MywiaWF0IjoxNTYzMTU3NTgzLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.BhhHlJWQd3SjXrcy6FdOzhp9b9-afexihYP4Qt6KY6Jkn2Jjgq30_UIGxTaCAJ6iY2as2RBMcKZedCkXR9joVg'}
</msg>
<msg timestamp="20190715 02:26:24.387" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:24.387" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:24.123" endtime="20190715 02:26:24.387"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:24.388" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:24.388" endtime="20190715 02:26:24.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:24.389" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:24.389" endtime="20190715 02:26:24.389"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:24.390" level="INFO">
${resp_data} = {'response': [], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:24.389" endtime="20190715 02:26:24.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:24.390" level="INFO">{'response': [], 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:24.390" endtime="20190715 02:26:24.390"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:24.392" level="INFO">${response} = []</msg>
<status status="PASS" starttime="20190715 02:26:24.391" endtime="20190715 02:26:24.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:24.393" level="INFO">[]</msg>
<status status="PASS" starttime="20190715 02:26:24.392" endtime="20190715 02:26:24.393"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:24.393" level="INFO">Length is 0</msg>
<msg timestamp="20190715 02:26:24.393" level="INFO">${numberOfRows} = 0</msg>
<status status="PASS" starttime="20190715 02:26:24.393" endtime="20190715 02:26:24.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:24.394" level="INFO">0</msg>
<status status="PASS" starttime="20190715 02:26:24.394" endtime="20190715 02:26:24.394"/>
</kw>
<status status="PASS" starttime="20190715 02:26:23.856" endtime="20190715 02:26:24.394"/>
</kw>
<status status="PASS" starttime="20190715 02:26:23.856" endtime="20190715 02:26:24.394"/>
</kw>
<kw name="I insert 2 row in MongoDB with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_write and host ${host}" library="mongodb_keywords">
<kw type="for" name="${i} IN RANGE [ 0 | ${count} ]">
<kw type="foritem" name="${i} = 0">
<kw name="Insert Data In To mongodb" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"write_data": {"name": "Device ${i}", "ip": "251.89.70.3","version": "1.0.0", "status": "running"}}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:24.397" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:24.397" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:24.396" endtime="20190715 02:26:24.397"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:24.398" level="INFO">
postData: {"write_data": {"name": "Device 0", "ip": "251.89.70.3","version": "1.0.0", "status": "running"}}
</msg>
<msg timestamp="20190715 02:26:24.398" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_write
</msg>
<msg timestamp="20190715 02:26:24.398" level="INFO">Headers: {}</msg>
<msg timestamp="20190715 02:26:24.667" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:24.668" level="INFO">Returning this: 201</msg>
<msg timestamp="20190715 02:26:24.668" level="INFO">resp.text: {"version": "2.1.0", "response": "ok"}</msg>
<msg timestamp="20190715 02:26:24.668" level="INFO">${resp} = <Response [201]></msg>
<status status="PASS" starttime="20190715 02:26:24.397" endtime="20190715 02:26:24.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:24.669" level="INFO">${status_code} = 201</msg>
<status status="PASS" starttime="20190715 02:26:24.669" endtime="20190715 02:26:24.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190715 02:26:24.670" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:24.670" endtime="20190715 02:26:24.670"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:24.671" level="INFO">
${resp_data} = {'response': 'ok', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:24.670" endtime="20190715 02:26:24.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:24.671" level="INFO">{'response': 'ok', 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:24.671" endtime="20190715 02:26:24.671"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:24.672" level="INFO">${response} = ok</msg>
<status status="PASS" starttime="20190715 02:26:24.672" endtime="20190715 02:26:24.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:24.672" level="INFO">ok</msg>
<status status="PASS" starttime="20190715 02:26:24.672" endtime="20190715 02:26:24.673"/>
</kw>
<status status="PASS" starttime="20190715 02:26:24.396" endtime="20190715 02:26:24.673"/>
</kw>
<status status="PASS" starttime="20190715 02:26:24.395" endtime="20190715 02:26:24.673"/>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Insert Data In To mongodb" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"write_data": {"name": "Device ${i}", "ip": "251.89.70.3","version": "1.0.0", "status": "running"}}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:24.675" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:24.675" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:24.674" endtime="20190715 02:26:24.675"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:24.676" level="INFO">
postData: {"write_data": {"name": "Device 1", "ip": "251.89.70.3","version": "1.0.0", "status": "running"}}
</msg>
<msg timestamp="20190715 02:26:24.676" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_write
</msg>
<msg timestamp="20190715 02:26:24.676" level="INFO">Headers: {}</msg>
<msg timestamp="20190715 02:26:24.938" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:24.938" level="INFO">Returning this: 201</msg>
<msg timestamp="20190715 02:26:24.938" level="INFO">resp.text: {"version": "2.1.0", "response": "ok"}</msg>
<msg timestamp="20190715 02:26:24.938" level="INFO">${resp} = <Response [201]></msg>
<status status="PASS" starttime="20190715 02:26:24.675" endtime="20190715 02:26:24.939"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:24.939" level="INFO">${status_code} = 201</msg>
<status status="PASS" starttime="20190715 02:26:24.939" endtime="20190715 02:26:24.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190715 02:26:24.940" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:24.940" endtime="20190715 02:26:24.940"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:24.941" level="INFO">
${resp_data} = {'response': 'ok', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:24.940" endtime="20190715 02:26:24.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:24.941" level="INFO">{'response': 'ok', 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:24.941" endtime="20190715 02:26:24.941"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:24.942" level="INFO">${response} = ok</msg>
<status status="PASS" starttime="20190715 02:26:24.941" endtime="20190715 02:26:24.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:24.942" level="INFO">ok</msg>
<status status="PASS" starttime="20190715 02:26:24.942" endtime="20190715 02:26:24.942"/>
</kw>
<status status="PASS" starttime="20190715 02:26:24.673" endtime="20190715 02:26:24.942"/>
</kw>
<status status="PASS" starttime="20190715 02:26:24.673" endtime="20190715 02:26:24.942"/>
</kw>
<status status="PASS" starttime="20190715 02:26:24.395" endtime="20190715 02:26:24.942"/>
</kw>
<status status="PASS" starttime="20190715 02:26:24.395" endtime="20190715 02:26:24.943"/>
</kw>
<kw name="I read data from Mongodb for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:24.944" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:24.944" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:24.944" endtime="20190715 02:26:24.944"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:24.945" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_read
</msg>
<msg timestamp="20190715 02:26:24.945" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:24.946" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4MywiaWF0IjoxNTYzMTU3NTgzLCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.BhhHlJWQd3SjXrcy6FdOzhp9b9-afexihYP4Qt6KY6Jkn2Jjgq30_UIGxTaCAJ6iY2as2RBMcKZedCkXR9joVg'}
</msg>
<msg timestamp="20190715 02:26:25.212" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:25.212" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:24.945" endtime="20190715 02:26:25.212"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:25.213" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:25.212" endtime="20190715 02:26:25.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:25.213" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:25.213" endtime="20190715 02:26:25.214"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:25.214" level="INFO">
${resp_data} = {'response': [{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e8200...
</msg>
<status status="PASS" starttime="20190715 02:26:25.214" endtime="20190715 02:26:25.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:25.215" level="INFO">
{'response': [{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:25.214" endtime="20190715 02:26:25.215"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:25.215" level="INFO">
${response} = [{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'n...
</msg>
<status status="PASS" starttime="20190715 02:26:25.215" endtime="20190715 02:26:25.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:25.216" level="INFO">
[{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}]
</msg>
<status status="PASS" starttime="20190715 02:26:25.216" endtime="20190715 02:26:25.216"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:25.216" level="INFO">Length is 2</msg>
<msg timestamp="20190715 02:26:25.217" level="INFO">${numberOfRows} = 2</msg>
<status status="PASS" starttime="20190715 02:26:25.216" endtime="20190715 02:26:25.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:25.217" level="INFO">2</msg>
<status status="PASS" starttime="20190715 02:26:25.217" endtime="20190715 02:26:25.217"/>
</kw>
<status status="PASS" starttime="20190715 02:26:24.943" endtime="20190715 02:26:25.217"/>
</kw>
<status status="PASS" starttime="20190715 02:26:24.943" endtime="20190715 02:26:25.217"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : Here we will read mongodb data for {appstack_namespace} sample app
</doc>
<tags>
<tag>inside_out</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:23.854" endtime="20190715 02:26:25.218"/>
</test>
<test id="s1-s1-s1-s3-t10" name="I update data in Mongodb using pymongo">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:25.219" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:25.219" endtime="20190715 02:26:25.219"/>
</kw>
<kw name="I read data from Mongodb for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:25.479" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:25.479" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:25.221" endtime="20190715 02:26:25.479"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:25.480" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_read
</msg>
<msg timestamp="20190715 02:26:25.480" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:25.480" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4NCwiaWF0IjoxNTYzMTU3NTg0LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.pAD9yolCIljZ-KMkSFyLCKayLv4RtWCzYtaG8ZmN4AWII6QUoud7E6o0nOBCVgJ8yqgCOyl5UzDteCiCyJAKwA'}
</msg>
<msg timestamp="20190715 02:26:25.738" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:25.738" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:25.479" endtime="20190715 02:26:25.738"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:25.739" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:25.738" endtime="20190715 02:26:25.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:25.740" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:25.739" endtime="20190715 02:26:25.740"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:25.740" level="INFO">
${resp_data} = {'response': [{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e8200...
</msg>
<status status="PASS" starttime="20190715 02:26:25.740" endtime="20190715 02:26:25.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:25.741" level="INFO">
{'response': [{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:25.741" endtime="20190715 02:26:25.741"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:25.741" level="INFO">
${response} = [{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'n...
</msg>
<status status="PASS" starttime="20190715 02:26:25.741" endtime="20190715 02:26:25.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:25.742" level="INFO">
[{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}]
</msg>
<status status="PASS" starttime="20190715 02:26:25.742" endtime="20190715 02:26:25.742"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:25.743" level="INFO">Length is 2</msg>
<msg timestamp="20190715 02:26:25.743" level="INFO">${numberOfRows} = 2</msg>
<status status="PASS" starttime="20190715 02:26:25.742" endtime="20190715 02:26:25.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:25.743" level="INFO">2</msg>
<status status="PASS" starttime="20190715 02:26:25.743" endtime="20190715 02:26:25.743"/>
</kw>
<status status="PASS" starttime="20190715 02:26:25.220" endtime="20190715 02:26:25.744"/>
</kw>
<status status="PASS" starttime="20190715 02:26:25.219" endtime="20190715 02:26:25.744"/>
</kw>
<kw name="I update data in MongoDB using update filter ${update_filter} with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_update and host ${host}" library="mongodb_keywords">
<kw name="Update Data In mongodb" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>
{"update_filter": {"name": "${update_filter}"}, "update_data" : {"$set": {"status" : "abc"}}}
</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:25.746" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:25.746" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:25.745" endtime="20190715 02:26:25.746"/>
</kw>
<kw name="PUT" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:25.747" level="INFO">
put_data: {"update_filter": {"name": "Device 0"}, "update_data" : {"$set": {"status" : "abc"}}}
</msg>
<msg timestamp="20190715 02:26:25.747" level="INFO">
Looking at API in requestslib.put: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_update
</msg>
<msg timestamp="20190715 02:26:25.747" level="INFO">extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:25.748" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4NCwiaWF0IjoxNTYzMTU3NTg0LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.pAD9yolCIljZ-KMkSFyLCKayLv4RtWCzYtaG8ZmN4AWII6QUoud7E6o0nOBCVgJ8yqgCOyl5UzDteCiCyJAKwA'}
</msg>
<msg timestamp="20190715 02:26:26.014" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:26.014" level="INFO">resp.text: {"version": "2.1.0", "response": "ok"}</msg>
<msg timestamp="20190715 02:26:26.015" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:25.746" endtime="20190715 02:26:26.015"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:26.016" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:26.015" endtime="20190715 02:26:26.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:26.017" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:26.017" endtime="20190715 02:26:26.018"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:26.019" level="INFO">
${resp_data} = {'response': 'ok', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:26.018" endtime="20190715 02:26:26.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:26.020" level="INFO">{'response': 'ok', 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:26.019" endtime="20190715 02:26:26.020"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:26.021" level="INFO">${response} = ok</msg>
<status status="PASS" starttime="20190715 02:26:26.020" endtime="20190715 02:26:26.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:26.022" level="INFO">ok</msg>
<status status="PASS" starttime="20190715 02:26:26.021" endtime="20190715 02:26:26.022"/>
</kw>
<status status="PASS" starttime="20190715 02:26:25.745" endtime="20190715 02:26:26.022"/>
</kw>
<status status="PASS" starttime="20190715 02:26:25.744" endtime="20190715 02:26:26.022"/>
</kw>
<kw name="I read data from Mongodb for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:26.026" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:26.026" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:26.026" endtime="20190715 02:26:26.026"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:26.027" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_read
</msg>
<msg timestamp="20190715 02:26:26.027" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:26.028" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4NCwiaWF0IjoxNTYzMTU3NTg0LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.pAD9yolCIljZ-KMkSFyLCKayLv4RtWCzYtaG8ZmN4AWII6QUoud7E6o0nOBCVgJ8yqgCOyl5UzDteCiCyJAKwA'}
</msg>
<msg timestamp="20190715 02:26:26.384" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:26.385" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:26.027" endtime="20190715 02:26:26.385"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:26.386" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:26.385" endtime="20190715 02:26:26.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:26.387" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:26.387" endtime="20190715 02:26:26.388"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:26.389" level="INFO">
${resp_data} = {'response': [{'status': 'abc', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc3...
</msg>
<status status="PASS" starttime="20190715 02:26:26.388" endtime="20190715 02:26:26.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:26.390" level="INFO">
{'response': [{'status': 'abc', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:26.389" endtime="20190715 02:26:26.390"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:26.391" level="INFO">
${response} = [{'status': 'abc', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name'...
</msg>
<status status="PASS" starttime="20190715 02:26:26.390" endtime="20190715 02:26:26.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:26.392" level="INFO">
[{'status': 'abc', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}]
</msg>
<status status="PASS" starttime="20190715 02:26:26.391" endtime="20190715 02:26:26.392"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:26.393" level="INFO">Length is 2</msg>
<msg timestamp="20190715 02:26:26.393" level="INFO">${numberOfRows} = 2</msg>
<status status="PASS" starttime="20190715 02:26:26.392" endtime="20190715 02:26:26.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:26.394" level="INFO">2</msg>
<status status="PASS" starttime="20190715 02:26:26.394" endtime="20190715 02:26:26.394"/>
</kw>
<status status="PASS" starttime="20190715 02:26:26.024" endtime="20190715 02:26:26.395"/>
</kw>
<status status="PASS" starttime="20190715 02:26:26.023" endtime="20190715 02:26:26.395"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : Here we will delete mongodb data for {appstack_namespace} sample app based on delete filter parameter
</doc>
<tags>
<tag>inside_out</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:25.218" endtime="20190715 02:26:26.395"/>
</test>
<test id="s1-s1-s1-s3-t11" name="I delete data from Mongodb using pymongo">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This is ${app_container_type} appcontainer</arg>
</arguments>
<msg timestamp="20190715 02:26:26.397" level="INFO">This is PYTHON appcontainer</msg>
<status status="PASS" starttime="20190715 02:26:26.397" endtime="20190715 02:26:26.397"/>
</kw>
<kw name="I read data from Mongodb for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:26.655" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:26.656" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:26.398" endtime="20190715 02:26:26.656"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:26.657" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_read
</msg>
<msg timestamp="20190715 02:26:26.657" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:26.657" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4NiwiaWF0IjoxNTYzMTU3NTg2LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.voP5ad74WA5t8AOMIjSW5_uTehH0dorCzG43C6hudoG8GBxhx3Wmyo3p0l_WYc4_v1-h3DEdC9_uVeEAiWd9sg'}
</msg>
<msg timestamp="20190715 02:26:26.914" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:26.914" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:26.656" endtime="20190715 02:26:26.914"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:26.915" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:26.915" endtime="20190715 02:26:26.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:26.916" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:26.915" endtime="20190715 02:26:26.916"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:26.916" level="INFO">
${resp_data} = {'response': [{'status': 'abc', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc3...
</msg>
<status status="PASS" starttime="20190715 02:26:26.916" endtime="20190715 02:26:26.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:26.917" level="INFO">
{'response': [{'status': 'abc', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:26.917" endtime="20190715 02:26:26.917"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:26.918" level="INFO">
${response} = [{'status': 'abc', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name'...
</msg>
<status status="PASS" starttime="20190715 02:26:26.918" endtime="20190715 02:26:26.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:26.918" level="INFO">
[{'status': 'abc', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a1', 'name': 'Device 0', 'version': '1.0.0'}, {'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}]
</msg>
<status status="PASS" starttime="20190715 02:26:26.918" endtime="20190715 02:26:26.919"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:26.919" level="INFO">Length is 2</msg>
<msg timestamp="20190715 02:26:26.919" level="INFO">${numberOfRows} = 2</msg>
<status status="PASS" starttime="20190715 02:26:26.919" endtime="20190715 02:26:26.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:26.920" level="INFO">2</msg>
<status status="PASS" starttime="20190715 02:26:26.919" endtime="20190715 02:26:26.920"/>
</kw>
<status status="PASS" starttime="20190715 02:26:26.398" endtime="20190715 02:26:26.920"/>
</kw>
<status status="PASS" starttime="20190715 02:26:26.397" endtime="20190715 02:26:26.920"/>
</kw>
<kw name="I delete data in MongoDB using delete filter ${delete_filter} with Appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_delete and host ${host}" library="mongodb_keywords">
<kw name="Clear Data In mongodb" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>{"delete_filter": {"name": "${delete_filter}"}}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:26.922" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:26.922" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:26.921" endtime="20190715 02:26:26.922"/>
</kw>
<kw name="DELETE" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>${data}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:26.923" level="INFO">
delete_data: {"delete_filter": {"name": "Device 0"}}
</msg>
<msg timestamp="20190715 02:26:26.923" level="INFO">
Looking at API in requestslib.delete: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_delete
</msg>
<msg timestamp="20190715 02:26:26.923" level="INFO">extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:26.924" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4NiwiaWF0IjoxNTYzMTU3NTg2LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.voP5ad74WA5t8AOMIjSW5_uTehH0dorCzG43C6hudoG8GBxhx3Wmyo3p0l_WYc4_v1-h3DEdC9_uVeEAiWd9sg'}
</msg>
<msg timestamp="20190715 02:26:27.189" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:27.189" level="INFO">resp.text: {"version": "2.1.0", "response": "ok"}</msg>
<msg timestamp="20190715 02:26:27.190" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:26.922" endtime="20190715 02:26:27.190"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:27.191" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:27.190" endtime="20190715 02:26:27.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:27.193" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:27.192" endtime="20190715 02:26:27.193"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:27.194" level="INFO">
${resp_data} = {'response': 'ok', 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:27.193" endtime="20190715 02:26:27.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:27.195" level="INFO">{'response': 'ok', 'version': '2.1.0'}</msg>
<status status="PASS" starttime="20190715 02:26:27.194" endtime="20190715 02:26:27.195"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:27.196" level="INFO">${response} = ok</msg>
<status status="PASS" starttime="20190715 02:26:27.196" endtime="20190715 02:26:27.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:27.197" level="INFO">ok</msg>
<status status="PASS" starttime="20190715 02:26:27.196" endtime="20190715 02:26:27.197"/>
</kw>
<status status="PASS" starttime="20190715 02:26:26.921" endtime="20190715 02:26:27.197"/>
</kw>
<status status="PASS" starttime="20190715 02:26:26.920" endtime="20190715 02:26:27.197"/>
</kw>
<kw name="I read data from Mongodb for appstack url /api/${appstack_namespace}/v1/${service_name}/sts/mongodb/_read and host ${host}" library="mongodb_keywords">
<kw name="Read Data From mongodb And Validate" library="mongodb_keywords">
<arguments>
<arg>${url}</arg>
<arg>${host}</arg>
</arguments>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20190715 02:26:27.199" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:27.199" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:27.198" endtime="20190715 02:26:27.199"/>
</kw>
<kw name="GET" library="requests_lib">
<arguments>
<arg>${url}</arg>
<arg>{}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:27.200" level="INFO">
Looking at API in requestslib.get: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/mongodb/_read
</msg>
<msg timestamp="20190715 02:26:27.200" level="INFO"> extra_headers {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:27.200" level="INFO">
headers {'Content-Type': 'application/json', 'X-Auth-Token': 'eyJhbGciOiJFUzI1NiIsImtpZCI6IiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJhdXRoU291cmNlIjoibGVnYWN5IiwiY2xpZW50SWQiOiJhZG1pbiIsImV4cCI6MTU2MzE2MTE4NiwiaWF0IjoxNTYzMTU3NTg2LCJpc3MiOiJjZC1pbmZyYS50ZXNzZXJhY3RpbnRlcm5hbC5jb20iLCJwciI6ImxlZ2FjeSIsInJvbGVzIjpbIlNVUEVSLUFETUlOIl0sInN1YiI6ImFkbWluIiwidGVuYW50SWQiOiJUTlQwMDAiLCJ0ZW5hbnROYW1lIjoiVE5UMDAwIiwidXNlcm5hbWUiOiJhZG1pbiJ9.voP5ad74WA5t8AOMIjSW5_uTehH0dorCzG43C6hudoG8GBxhx3Wmyo3p0l_WYc4_v1-h3DEdC9_uVeEAiWd9sg'}
</msg>
<msg timestamp="20190715 02:26:27.478" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:27.478" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:27.199" endtime="20190715 02:26:27.478"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:27.479" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:27.479" endtime="20190715 02:26:27.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:27.480" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:27.479" endtime="20190715 02:26:27.480"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>
Calls the named method of the given object with the provided arguments.
</doc>
<arguments>
<arg>${resp}</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${resp_data}</var>
</assign>
<msg timestamp="20190715 02:26:27.480" level="INFO">
${resp_data} = {'response': [{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:27.480" endtime="20190715 02:26:27.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp_data}</arg>
</arguments>
<msg timestamp="20190715 02:26:27.481" level="INFO">
{'response': [{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}], 'version': '2.1.0'}
</msg>
<status status="PASS" starttime="20190715 02:26:27.480" endtime="20190715 02:26:27.481"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>
Returns a value from the given ``dictionary`` based on the given ``key``.
</doc>
<arguments>
<arg>${resp_data}</arg>
<arg>response</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190715 02:26:27.482" level="INFO">
${response} = [{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}]
</msg>
<status status="PASS" starttime="20190715 02:26:27.481" endtime="20190715 02:26:27.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20190715 02:26:27.482" level="INFO">
[{'status': 'running', 'ip': '251.89.70.3', '_id': '5d2be450c93e82000fc396a2', 'name': 'Device 1', 'version': '1.0.0'}]
</msg>
<status status="PASS" starttime="20190715 02:26:27.482" endtime="20190715 02:26:27.482"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>
Returns and logs the length of the given item as an integer.
</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${numberOfRows}</var>
</assign>
<msg timestamp="20190715 02:26:27.483" level="INFO">Length is 1</msg>
<msg timestamp="20190715 02:26:27.483" level="INFO">${numberOfRows} = 1</msg>
<status status="PASS" starttime="20190715 02:26:27.482" endtime="20190715 02:26:27.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberOfRows}</arg>
</arguments>
<msg timestamp="20190715 02:26:27.483" level="INFO">1</msg>
<status status="PASS" starttime="20190715 02:26:27.483" endtime="20190715 02:26:27.483"/>
</kw>
<status status="PASS" starttime="20190715 02:26:27.198" endtime="20190715 02:26:27.483"/>
</kw>
<status status="PASS" starttime="20190715 02:26:27.197" endtime="20190715 02:26:27.484"/>
</kw>
<doc>
Author :Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : Here we will delete mongodb data for {appstack_namespace} sample app based on delete filter parameter
</doc>
<tags>
<tag>inside_out</tag>
<tag>managed_services</tag>
<tag>mongodb_test</tag>
<tag>python_app</tag>
<tag>regression</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:26.396" endtime="20190715 02:26:27.484"/>
</test>
<status status="PASS" starttime="20190715 02:26:17.644" endtime="20190715 02:26:27.487"/>
</suite>
<suite id="s1-s1-s1-s4" source="/home/jenkins/workspace/qa/Inside-Out/sanity-child-jobs/python_app_based_tests/testsuites/02_managed_services_central/04_redis_crud.robot" name="04 Redis Crud">
<test id="s1-s1-s1-s4-t1" name="00_Running suitsetup">
<kw name="LogData" library="logging">
<arguments>
<arg>suitesetup now part of init</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:27.518" endtime="20190715 02:26:27.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:27.519" level="INFO">suitesetup now part of init</msg>
<status status="PASS" starttime="20190715 02:26:27.519" endtime="20190715 02:26:27.519"/>
</kw>
<status status="PASS" starttime="20190715 02:26:27.518" endtime="20190715 02:26:27.519"/>
</kw>
<kw name="choose service with topology ${topology_version}" library="managed_services_keywords">
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${app_container_type}'== 'PYTHON'</arg>
<arg>samplepython</arg>
<arg>'${app_container_type}'== 'JAVA'</arg>
<arg>samplejava</arg>
<arg>'${app_container_type}'== 'GO'</arg>
<arg>samplego</arg>
<arg>'${app_container_type}'== 'GO'</arg>
<arg>samplego</arg>
</arguments>
<assign>
<var>${service_name}</var>
</assign>
<msg timestamp="20190715 02:26:27.521" level="INFO">${service_name} = samplepython</msg>
<status status="PASS" starttime="20190715 02:26:27.520" endtime="20190715 02:26:27.521"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>${topology_version}</arg>
</arguments>
<assign>
<var>${service_name}</var>
</assign>
<msg timestamp="20190715 02:26:27.521" level="INFO">${service_name} = samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:26:27.521" endtime="20190715 02:26:27.521"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>
Makes a variable available globally in all tests and suites.
</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<msg timestamp="20190715 02:26:27.522" level="INFO">${service_name} = samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:26:27.521" endtime="20190715 02:26:27.522"/>
</kw>
<status status="PASS" starttime="20190715 02:26:27.520" endtime="20190715 02:26:27.522"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${service_name}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:27.523" endtime="20190715 02:26:27.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:27.525" level="INFO">samplepythonv2</msg>
<status status="PASS" starttime="20190715 02:26:27.524" endtime="20190715 02:26:27.525"/>
</kw>
<status status="PASS" starttime="20190715 02:26:27.522" endtime="20190715 02:26:27.525"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : test suite setup
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:27.517" endtime="20190715 02:26:27.526"/>
</test>
<test id="s1-s1-s1-s4-t2" name="01 I read from far cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:27.529" endtime="20190715 02:26:27.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:27.530" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:27.530" endtime="20190715 02:26:27.530"/>
</kw>
<status status="PASS" starttime="20190715 02:26:27.528" endtime="20190715 02:26:27.531"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>far</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:27.532" level="INFO">${cache_type} = far</msg>
<status status="PASS" starttime="20190715 02:26:27.531" endtime="20190715 02:26:27.532"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>I dont exist</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:27.533" level="INFO">${key} = I dont exist</msg>
<status status="PASS" starttime="20190715 02:26:27.532" endtime="20190715 02:26:27.533"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"response": "key not found"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${expected_value}</var>
</assign>
<msg timestamp="20190715 02:26:27.534" level="INFO">
${expected_value} = { "response": "key not found" }
</msg>
<status status="PASS" starttime="20190715 02:26:27.533" endtime="20190715 02:26:27.534"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${expected_value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:27.537" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:27.536" endtime="20190715 02:26:27.537"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:27.538" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:27.538" endtime="20190715 02:26:27.538"/>
</kw>
<msg timestamp="20190715 02:26:27.538" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:27.535" endtime="20190715 02:26:27.539"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:27.807" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:27.807" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:27.539" endtime="20190715 02:26:27.807"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:27.809" level="INFO">
postData: {"cacheType":"far", "key": "I dont exist"}
</msg>
<msg timestamp="20190715 02:26:27.810" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:27.810" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:28.077" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:28.078" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:28.078" level="INFO">resp.text: {"response": "key not found"}</msg>
<msg timestamp="20190715 02:26:28.079" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:27.808" endtime="20190715 02:26:28.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:28.081" level="INFO">{'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:28.080" endtime="20190715 02:26:28.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:28.083" level="INFO">${json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:28.082" endtime="20190715 02:26:28.083"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:28.084" level="INFO">${actual_value} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:28.083" endtime="20190715 02:26:28.084"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:28.086" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:28.085" endtime="20190715 02:26:28.086"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:28.086" level="INFO">
${expected_rjson} = "{'response': 'key not found'}"
</msg>
<status status="PASS" starttime="20190715 02:26:28.086" endtime="20190715 02:26:28.086"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:28.087" level="INFO">${expected_json} = "{'response': 'key not found'}"</msg>
<status status="PASS" starttime="20190715 02:26:28.087" endtime="20190715 02:26:28.087"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:28.088" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:28.087" endtime="20190715 02:26:28.088"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:28.088" endtime="20190715 02:26:28.088"/>
</kw>
<status status="PASS" starttime="20190715 02:26:27.534" endtime="20190715 02:26:28.088"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to far cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:27.526" endtime="20190715 02:26:28.089"/>
</test>
<test id="s1-s1-s1-s4-t3" name="02 I write to far cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:28.090" endtime="20190715 02:26:28.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:28.091" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:28.091" endtime="20190715 02:26:28.091"/>
</kw>
<status status="PASS" starttime="20190715 02:26:28.090" endtime="20190715 02:26:28.091"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key1</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:28.092" level="INFO">${key} = samplepythonv2_key1</msg>
<status status="PASS" starttime="20190715 02:26:28.092" endtime="20190715 02:26:28.092"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:28.093" endtime="20190715 02:26:28.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:28.093" level="INFO">samplepythonv2_key1</msg>
<status status="PASS" starttime="20190715 02:26:28.093" endtime="20190715 02:26:28.093"/>
</kw>
<status status="PASS" starttime="20190715 02:26:28.092" endtime="20190715 02:26:28.094"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{"value": {"value1": "i am value 1"}}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:28.094" level="INFO">${value} = {"value": {"value1": "i am value 1"}}</msg>
<status status="PASS" starttime="20190715 02:26:28.094" endtime="20190715 02:26:28.094"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:28.095" endtime="20190715 02:26:28.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:28.096" level="INFO">{"value": {"value1": "i am value 1"}}</msg>
<status status="PASS" starttime="20190715 02:26:28.095" endtime="20190715 02:26:28.096"/>
</kw>
<status status="PASS" starttime="20190715 02:26:28.094" endtime="20190715 02:26:28.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>far</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:28.096" level="INFO">${cache_type} = far</msg>
<status status="PASS" starttime="20190715 02:26:28.096" endtime="20190715 02:26:28.096"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:28.357" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:28.357" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:28.097" endtime="20190715 02:26:28.357"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:28.361" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:28.359" endtime="20190715 02:26:28.361"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:28.362" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:28.361" endtime="20190715 02:26:28.363"/>
</kw>
<msg timestamp="20190715 02:26:28.364" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:28.358" endtime="20190715 02:26:28.364"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:28.365" level="INFO">
postData: {"cacheType":"far", "key":"samplepythonv2_key1", "value":{"value": {"value1": "i am value 1"}}}
</msg>
<msg timestamp="20190715 02:26:28.366" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:28.366" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:28.625" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:28.625" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:28.626" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:28.626" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:28.364" endtime="20190715 02:26:28.626"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:28.628" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:28.627" endtime="20190715 02:26:28.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:28.629" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:28.628" endtime="20190715 02:26:28.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:28.630" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:28.629" endtime="20190715 02:26:28.630"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:28.631" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:28.631" endtime="20190715 02:26:28.632"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:28.635" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:28.634" endtime="20190715 02:26:28.635"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:28.635" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:28.635" endtime="20190715 02:26:28.636"/>
</kw>
<msg timestamp="20190715 02:26:28.636" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:28.633" endtime="20190715 02:26:28.636"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:28.637" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:28.637" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:28.636" endtime="20190715 02:26:28.637"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:28.638" level="INFO">
postData: {"cacheType":"far", "key": "samplepythonv2_key1"}
</msg>
<msg timestamp="20190715 02:26:28.638" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:28.638" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:28.985" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:28.986" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:28.986" level="INFO">resp.text: {"value": {"value1": "i am value 1"}}</msg>
<msg timestamp="20190715 02:26:28.987" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:28.637" endtime="20190715 02:26:28.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:28.988" level="INFO">{'value': {'value1': 'i am value 1'}}</msg>
<status status="PASS" starttime="20190715 02:26:28.987" endtime="20190715 02:26:28.989"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:28.990" level="INFO">${json} = {'value': {'value1': 'i am value 1'}}</msg>
<status status="PASS" starttime="20190715 02:26:28.989" endtime="20190715 02:26:28.990"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:28.991" level="INFO">
${actual_value} = {'value': {'value1': 'i am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:28.990" endtime="20190715 02:26:28.991"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:28.992" level="INFO">
${expected_json} = {'value': {'value1': 'i am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:28.992" endtime="20190715 02:26:28.993"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:28.994" level="INFO">
${expected_rjson} = "{'value': {'value1': 'i am value 1'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:28.993" endtime="20190715 02:26:28.994"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:28.995" level="INFO">
${expected_json} = "{'value': {'value1': 'i am value 1'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:28.995" endtime="20190715 02:26:28.995"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:28.997" level="INFO">
${expected_json} = {'value': {'value1': 'i am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:28.996" endtime="20190715 02:26:28.997"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:28.997" endtime="20190715 02:26:28.997"/>
</kw>
<status status="PASS" starttime="20190715 02:26:28.632" endtime="20190715 02:26:28.998"/>
</kw>
<status status="PASS" starttime="20190715 02:26:28.097" endtime="20190715 02:26:28.998"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to far cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:28.089" endtime="20190715 02:26:28.998"/>
</test>
<test id="s1-s1-s1-s4-t4" name="03 I update to far cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:29.000" endtime="20190715 02:26:29.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:29.001" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:29.001" endtime="20190715 02:26:29.002"/>
</kw>
<status status="PASS" starttime="20190715 02:26:28.999" endtime="20190715 02:26:29.002"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key1</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:29.003" level="INFO">${key} = samplepythonv2_key1</msg>
<status status="PASS" starttime="20190715 02:26:29.003" endtime="20190715 02:26:29.003"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:29.005" endtime="20190715 02:26:29.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:29.006" level="INFO">samplepythonv2_key1</msg>
<status status="PASS" starttime="20190715 02:26:29.006" endtime="20190715 02:26:29.006"/>
</kw>
<status status="PASS" starttime="20190715 02:26:29.004" endtime="20190715 02:26:29.007"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I will be updated soon"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:29.008" level="INFO">
${value} = { "value":{ "value1": "I will be updated soon" } }
</msg>
<status status="PASS" starttime="20190715 02:26:29.007" endtime="20190715 02:26:29.008"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:29.009" endtime="20190715 02:26:29.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:29.011" level="INFO">{ "value":{ "value1": "I will be updated soon" } }</msg>
<status status="PASS" starttime="20190715 02:26:29.010" endtime="20190715 02:26:29.011"/>
</kw>
<status status="PASS" starttime="20190715 02:26:29.008" endtime="20190715 02:26:29.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>far</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:29.012" level="INFO">${cache_type} = far</msg>
<status status="PASS" starttime="20190715 02:26:29.012" endtime="20190715 02:26:29.012"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:29.299" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:29.299" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:29.014" endtime="20190715 02:26:29.300"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:29.302" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:29.301" endtime="20190715 02:26:29.302"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:29.303" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:29.303" endtime="20190715 02:26:29.304"/>
</kw>
<msg timestamp="20190715 02:26:29.304" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:29.300" endtime="20190715 02:26:29.304"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:29.306" level="INFO">
postData: {"cacheType":"far", "key":"samplepythonv2_key1", "value":{ "value":{ "value1": "I will be updated soon" } }}
</msg>
<msg timestamp="20190715 02:26:29.306" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:29.307" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:29.567" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:29.567" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:29.568" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:29.568" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:29.305" endtime="20190715 02:26:29.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:29.570" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:29.569" endtime="20190715 02:26:29.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:29.571" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:29.571" endtime="20190715 02:26:29.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:29.573" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:29.572" endtime="20190715 02:26:29.573"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:29.575" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:29.574" endtime="20190715 02:26:29.575"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:29.579" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:29.578" endtime="20190715 02:26:29.579"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:29.580" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:29.579" endtime="20190715 02:26:29.580"/>
</kw>
<msg timestamp="20190715 02:26:29.580" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:29.576" endtime="20190715 02:26:29.580"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:29.581" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:29.581" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:29.580" endtime="20190715 02:26:29.582"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:29.583" level="INFO">
postData: {"cacheType":"far", "key": "samplepythonv2_key1"}
</msg>
<msg timestamp="20190715 02:26:29.583" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:29.583" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:29.850" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:29.850" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:29.850" level="INFO">
resp.text: {"value": {"value1": "I will be updated soon"}}
</msg>
<msg timestamp="20190715 02:26:29.851" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:29.582" endtime="20190715 02:26:29.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:29.852" level="INFO">{'value': {'value1': 'I will be updated soon'}}</msg>
<status status="PASS" starttime="20190715 02:26:29.851" endtime="20190715 02:26:29.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:29.853" level="INFO">
${json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:29.852" endtime="20190715 02:26:29.853"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:29.854" level="INFO">
${actual_value} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:29.853" endtime="20190715 02:26:29.854"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:29.855" level="INFO">
${expected_json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:29.855" endtime="20190715 02:26:29.855"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:29.856" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I will be updated soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:29.856" endtime="20190715 02:26:29.856"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:29.857" level="INFO">
${expected_json} = "{'value': {'value1': 'I will be updated soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:29.857" endtime="20190715 02:26:29.857"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:29.858" level="INFO">
${expected_json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:29.858" endtime="20190715 02:26:29.858"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:29.859" endtime="20190715 02:26:29.859"/>
</kw>
<status status="PASS" starttime="20190715 02:26:29.575" endtime="20190715 02:26:29.859"/>
</kw>
<status status="PASS" starttime="20190715 02:26:29.013" endtime="20190715 02:26:29.859"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I got updated now"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${updated_value}</var>
</assign>
<msg timestamp="20190715 02:26:29.860" level="INFO">
${updated_value} = { "value":{ "value1": "I got updated now" } }
</msg>
<status status="PASS" starttime="20190715 02:26:29.860" endtime="20190715 02:26:29.860"/>
</kw>
<kw name="I verify update ${key} with ${updated_value} in ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:29.862" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:29.862" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:29.862" endtime="20190715 02:26:29.863"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:29.864" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:29.864" endtime="20190715 02:26:29.864"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:29.866" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:29.865" endtime="20190715 02:26:29.866"/>
</kw>
<msg timestamp="20190715 02:26:29.866" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:29.863" endtime="20190715 02:26:29.866"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/update</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:29.867" level="INFO">
postData: {"cacheType":"far", "key":"samplepythonv2_key1", "value":{ "value":{ "value1": "I got updated now" } }}
</msg>
<msg timestamp="20190715 02:26:29.867" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/update
</msg>
<msg timestamp="20190715 02:26:29.867" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:30.125" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:30.126" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:30.126" level="INFO">resp.text: {"response": "redis update successful"}</msg>
<msg timestamp="20190715 02:26:30.126" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:29.866" endtime="20190715 02:26:30.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:30.128" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:30.127" endtime="20190715 02:26:30.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:30.128" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:30.128" endtime="20190715 02:26:30.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:30.129" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:30.129" endtime="20190715 02:26:30.129"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:30.132" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:30.132" endtime="20190715 02:26:30.133"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:30.133" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:30.133" endtime="20190715 02:26:30.134"/>
</kw>
<msg timestamp="20190715 02:26:30.134" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:30.131" endtime="20190715 02:26:30.134"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:30.135" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:30.135" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:30.134" endtime="20190715 02:26:30.135"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:30.136" level="INFO">
postData: {"cacheType":"far", "key": "samplepythonv2_key1"}
</msg>
<msg timestamp="20190715 02:26:30.137" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:30.137" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:30.485" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:30.485" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:30.486" level="INFO">
resp.text: {"value": {"value1": "I got updated now"}}
</msg>
<msg timestamp="20190715 02:26:30.486" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:30.135" endtime="20190715 02:26:30.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:30.487" level="INFO">{'value': {'value1': 'I got updated now'}}</msg>
<status status="PASS" starttime="20190715 02:26:30.486" endtime="20190715 02:26:30.487"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:30.487" level="INFO">
${json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:30.487" endtime="20190715 02:26:30.487"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:30.488" level="INFO">
${actual_value} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:30.488" endtime="20190715 02:26:30.488"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:30.489" level="INFO">
${expected_json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:30.488" endtime="20190715 02:26:30.489"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:30.489" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I got updated now'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:30.489" endtime="20190715 02:26:30.489"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:30.490" level="INFO">
${expected_json} = "{'value': {'value1': 'I got updated now'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:30.490" endtime="20190715 02:26:30.490"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:30.490" level="INFO">
${expected_json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:30.490" endtime="20190715 02:26:30.490"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:30.491" endtime="20190715 02:26:30.491"/>
</kw>
<status status="PASS" starttime="20190715 02:26:30.130" endtime="20190715 02:26:30.491"/>
</kw>
<status status="PASS" starttime="20190715 02:26:29.861" endtime="20190715 02:26:30.491"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to far cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:28.998" endtime="20190715 02:26:30.491"/>
</test>
<test id="s1-s1-s1-s4-t5" name="04 I delete from far cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:30.493" endtime="20190715 02:26:30.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:30.494" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:30.494" endtime="20190715 02:26:30.494"/>
</kw>
<status status="PASS" starttime="20190715 02:26:30.493" endtime="20190715 02:26:30.494"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key1</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:30.494" level="INFO">${key} = samplepythonv2_key1</msg>
<status status="PASS" starttime="20190715 02:26:30.494" endtime="20190715 02:26:30.495"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:30.495" endtime="20190715 02:26:30.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:30.496" level="INFO">samplepythonv2_key1</msg>
<status status="PASS" starttime="20190715 02:26:30.496" endtime="20190715 02:26:30.496"/>
</kw>
<status status="PASS" starttime="20190715 02:26:30.495" endtime="20190715 02:26:30.496"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I will be deleted soon"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:30.497" level="INFO">
${value} = { "value":{ "value1": "I will be deleted soon" } }
</msg>
<status status="PASS" starttime="20190715 02:26:30.496" endtime="20190715 02:26:30.497"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:30.497" endtime="20190715 02:26:30.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:30.498" level="INFO">{ "value":{ "value1": "I will be deleted soon" } }</msg>
<status status="PASS" starttime="20190715 02:26:30.498" endtime="20190715 02:26:30.498"/>
</kw>
<status status="PASS" starttime="20190715 02:26:30.497" endtime="20190715 02:26:30.498"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>far</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:30.499" level="INFO">${cache_type} = far</msg>
<status status="PASS" starttime="20190715 02:26:30.498" endtime="20190715 02:26:30.499"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:30.755" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:30.755" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:30.499" endtime="20190715 02:26:30.755"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:30.757" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:30.757" endtime="20190715 02:26:30.758"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:30.758" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:30.758" endtime="20190715 02:26:30.758"/>
</kw>
<msg timestamp="20190715 02:26:30.759" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:30.756" endtime="20190715 02:26:30.759"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:30.760" level="INFO">
postData: {"cacheType":"far", "key":"samplepythonv2_key1", "value":{ "value":{ "value1": "I will be deleted soon" } }}
</msg>
<msg timestamp="20190715 02:26:30.760" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:30.761" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:31.018" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:31.019" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:31.019" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:31.019" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:30.759" endtime="20190715 02:26:31.019"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:31.020" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:31.020" endtime="20190715 02:26:31.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:31.021" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:31.020" endtime="20190715 02:26:31.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:31.021" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:31.021" endtime="20190715 02:26:31.021"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:31.022" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:31.022" endtime="20190715 02:26:31.022"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:31.024" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:31.024" endtime="20190715 02:26:31.024"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:31.025" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:31.024" endtime="20190715 02:26:31.025"/>
</kw>
<msg timestamp="20190715 02:26:31.025" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:31.023" endtime="20190715 02:26:31.025"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:31.026" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:31.026" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:31.025" endtime="20190715 02:26:31.026"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:31.027" level="INFO">
postData: {"cacheType":"far", "key": "samplepythonv2_key1"}
</msg>
<msg timestamp="20190715 02:26:31.027" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:31.027" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:31.290" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:31.291" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:31.291" level="INFO">
resp.text: {"value": {"value1": "I will be deleted soon"}}
</msg>
<msg timestamp="20190715 02:26:31.291" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:31.026" endtime="20190715 02:26:31.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:31.293" level="INFO">{'value': {'value1': 'I will be deleted soon'}}</msg>
<status status="PASS" starttime="20190715 02:26:31.292" endtime="20190715 02:26:31.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:31.295" level="INFO">
${json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:31.294" endtime="20190715 02:26:31.295"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:31.296" level="INFO">
${actual_value} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:31.295" endtime="20190715 02:26:31.296"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:31.297" level="INFO">
${expected_json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:31.297" endtime="20190715 02:26:31.297"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:31.298" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I will be deleted soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:31.297" endtime="20190715 02:26:31.298"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:31.298" level="INFO">
${expected_json} = "{'value': {'value1': 'I will be deleted soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:31.298" endtime="20190715 02:26:31.298"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:31.299" level="INFO">
${expected_json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:31.299" endtime="20190715 02:26:31.299"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:31.299" endtime="20190715 02:26:31.300"/>
</kw>
<status status="PASS" starttime="20190715 02:26:31.022" endtime="20190715 02:26:31.300"/>
</kw>
<status status="PASS" starttime="20190715 02:26:30.499" endtime="20190715 02:26:31.300"/>
</kw>
<kw name="I verify delete ${key} from ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:31.302" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:31.302" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:31.301" endtime="20190715 02:26:31.302"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:31.303" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:31.303" endtime="20190715 02:26:31.303"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:31.304" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:31.303" endtime="20190715 02:26:31.304"/>
</kw>
<msg timestamp="20190715 02:26:31.304" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:31.302" endtime="20190715 02:26:31.304"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/delete</arg>
<arg>{"cacheType":"${cache_type}", "key":"${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:31.305" level="INFO">
postData: {"cacheType":"far", "key":"samplepythonv2_key1"}
</msg>
<msg timestamp="20190715 02:26:31.305" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/delete
</msg>
<msg timestamp="20190715 02:26:31.306" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:31.565" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:31.566" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:31.566" level="INFO">
resp.text: {"response": "redis delete key successful"}
</msg>
<msg timestamp="20190715 02:26:31.566" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:31.304" endtime="20190715 02:26:31.566"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:31.567" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:31.567" endtime="20190715 02:26:31.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:31.568" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:31.567" endtime="20190715 02:26:31.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:31.568" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:31.568" endtime="20190715 02:26:31.568"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"response": "key not found"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${read_after_delete}</var>
</assign>
<msg timestamp="20190715 02:26:31.569" level="INFO">
${read_after_delete} = { "response": "key not found" }
</msg>
<status status="PASS" starttime="20190715 02:26:31.569" endtime="20190715 02:26:31.569"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${read_after_delete}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:31.571" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:31.570" endtime="20190715 02:26:31.571"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:31.572" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:31.571" endtime="20190715 02:26:31.572"/>
</kw>
<msg timestamp="20190715 02:26:31.572" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:31.570" endtime="20190715 02:26:31.572"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:31.573" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:31.573" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:31.572" endtime="20190715 02:26:31.573"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:31.574" level="INFO">
postData: {"cacheType":"far", "key": "samplepythonv2_key1"}
</msg>
<msg timestamp="20190715 02:26:31.574" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:31.574" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:31.840" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:31.841" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:31.841" level="INFO">resp.text: {"response": "key not found"}</msg>
<msg timestamp="20190715 02:26:31.841" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:31.573" endtime="20190715 02:26:31.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:31.842" level="INFO">{'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:31.842" endtime="20190715 02:26:31.842"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:31.843" level="INFO">${json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:31.843" endtime="20190715 02:26:31.843"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:31.844" level="INFO">${actual_value} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:31.843" endtime="20190715 02:26:31.844"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:31.845" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:31.844" endtime="20190715 02:26:31.845"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:31.846" level="INFO">
${expected_rjson} = "{'response': 'key not found'}"
</msg>
<status status="PASS" starttime="20190715 02:26:31.845" endtime="20190715 02:26:31.846"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:31.846" level="INFO">${expected_json} = "{'response': 'key not found'}"</msg>
<status status="PASS" starttime="20190715 02:26:31.846" endtime="20190715 02:26:31.846"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:31.847" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:31.847" endtime="20190715 02:26:31.847"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:31.848" endtime="20190715 02:26:31.848"/>
</kw>
<status status="PASS" starttime="20190715 02:26:31.569" endtime="20190715 02:26:31.848"/>
</kw>
<status status="PASS" starttime="20190715 02:26:31.300" endtime="20190715 02:26:31.848"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to far cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:30.492" endtime="20190715 02:26:31.849"/>
</test>
<test id="s1-s1-s1-s4-t6" name="05 I read from near cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:31.851" endtime="20190715 02:26:31.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:31.852" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:31.852" endtime="20190715 02:26:31.853"/>
</kw>
<status status="PASS" starttime="20190715 02:26:31.850" endtime="20190715 02:26:31.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>near</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:31.853" level="INFO">${cache_type} = near</msg>
<status status="PASS" starttime="20190715 02:26:31.853" endtime="20190715 02:26:31.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>I dont exist</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:31.854" level="INFO">${key} = I dont exist</msg>
<status status="PASS" starttime="20190715 02:26:31.853" endtime="20190715 02:26:31.854"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"response": "key not found"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${expected_value}</var>
</assign>
<msg timestamp="20190715 02:26:31.855" level="INFO">
${expected_value} = { "response": "key not found" }
</msg>
<status status="PASS" starttime="20190715 02:26:31.854" endtime="20190715 02:26:31.855"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${expected_value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:31.857" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:31.856" endtime="20190715 02:26:31.857"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:31.858" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:31.857" endtime="20190715 02:26:31.858"/>
</kw>
<msg timestamp="20190715 02:26:31.858" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:31.856" endtime="20190715 02:26:31.858"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:32.119" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:32.119" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:31.858" endtime="20190715 02:26:32.119"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:32.120" level="INFO">
postData: {"cacheType":"near", "key": "I dont exist"}
</msg>
<msg timestamp="20190715 02:26:32.121" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:32.121" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:32.384" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:32.385" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:32.385" level="INFO">resp.text: {"response": "key not found"}</msg>
<msg timestamp="20190715 02:26:32.385" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:32.119" endtime="20190715 02:26:32.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:32.386" level="INFO">{'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:32.386" endtime="20190715 02:26:32.387"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:32.387" level="INFO">${json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:32.387" endtime="20190715 02:26:32.387"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:32.388" level="INFO">${actual_value} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:32.388" endtime="20190715 02:26:32.388"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:32.389" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:32.388" endtime="20190715 02:26:32.389"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:32.390" level="INFO">
${expected_rjson} = "{'response': 'key not found'}"
</msg>
<status status="PASS" starttime="20190715 02:26:32.389" endtime="20190715 02:26:32.390"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:32.390" level="INFO">${expected_json} = "{'response': 'key not found'}"</msg>
<status status="PASS" starttime="20190715 02:26:32.390" endtime="20190715 02:26:32.390"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:32.391" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:32.390" endtime="20190715 02:26:32.391"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:32.391" endtime="20190715 02:26:32.392"/>
</kw>
<status status="PASS" starttime="20190715 02:26:31.855" endtime="20190715 02:26:32.392"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to near cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:31.849" endtime="20190715 02:26:32.392"/>
</test>
<test id="s1-s1-s1-s4-t7" name="06 I write to near cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:32.394" endtime="20190715 02:26:32.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:32.395" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:32.394" endtime="20190715 02:26:32.395"/>
</kw>
<status status="PASS" starttime="20190715 02:26:32.393" endtime="20190715 02:26:32.395"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key2</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:32.396" level="INFO">${key} = samplepythonv2_key2</msg>
<status status="PASS" starttime="20190715 02:26:32.395" endtime="20190715 02:26:32.396"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:32.396" endtime="20190715 02:26:32.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:32.398" level="INFO">samplepythonv2_key2</msg>
<status status="PASS" starttime="20190715 02:26:32.397" endtime="20190715 02:26:32.398"/>
</kw>
<status status="PASS" starttime="20190715 02:26:32.396" endtime="20190715 02:26:32.398"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I am value 1"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:32.398" level="INFO">
${value} = { "value":{ "value1": "I am value 1" } }
</msg>
<status status="PASS" starttime="20190715 02:26:32.398" endtime="20190715 02:26:32.398"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:32.399" endtime="20190715 02:26:32.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:32.400" level="INFO">{ "value":{ "value1": "I am value 1" } }</msg>
<status status="PASS" starttime="20190715 02:26:32.400" endtime="20190715 02:26:32.400"/>
</kw>
<status status="PASS" starttime="20190715 02:26:32.399" endtime="20190715 02:26:32.400"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>near</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:32.401" level="INFO">${cache_type} = near</msg>
<status status="PASS" starttime="20190715 02:26:32.400" endtime="20190715 02:26:32.401"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:32.655" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:32.655" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:32.401" endtime="20190715 02:26:32.655"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:32.656" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:32.656" endtime="20190715 02:26:32.657"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:32.657" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:32.657" endtime="20190715 02:26:32.657"/>
</kw>
<msg timestamp="20190715 02:26:32.657" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:32.655" endtime="20190715 02:26:32.657"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:32.658" level="INFO">
postData: {"cacheType":"near", "key":"samplepythonv2_key2", "value":{ "value":{ "value1": "I am value 1" } }}
</msg>
<msg timestamp="20190715 02:26:32.659" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:32.659" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:32.923" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:32.923" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:32.923" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:32.924" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:32.658" endtime="20190715 02:26:32.924"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:32.925" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:32.924" endtime="20190715 02:26:32.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:32.925" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:32.925" endtime="20190715 02:26:32.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:32.926" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:32.925" endtime="20190715 02:26:32.926"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:32.927" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:32.926" endtime="20190715 02:26:32.927"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:32.929" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:32.928" endtime="20190715 02:26:32.929"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:32.929" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:32.929" endtime="20190715 02:26:32.929"/>
</kw>
<msg timestamp="20190715 02:26:32.930" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:32.928" endtime="20190715 02:26:32.930"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:32.930" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:32.930" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:32.930" endtime="20190715 02:26:32.931"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:32.931" level="INFO">
postData: {"cacheType":"near", "key": "samplepythonv2_key2"}
</msg>
<msg timestamp="20190715 02:26:32.932" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:32.932" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:33.195" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:33.195" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:33.195" level="INFO">resp.text: {"value": {"value1": "I am value 1"}}</msg>
<msg timestamp="20190715 02:26:33.196" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:32.931" endtime="20190715 02:26:33.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:33.197" level="INFO">{'value': {'value1': 'I am value 1'}}</msg>
<status status="PASS" starttime="20190715 02:26:33.197" endtime="20190715 02:26:33.197"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:33.198" level="INFO">${json} = {'value': {'value1': 'I am value 1'}}</msg>
<status status="PASS" starttime="20190715 02:26:33.198" endtime="20190715 02:26:33.198"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:33.198" level="INFO">
${actual_value} = {'value': {'value1': 'I am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:33.198" endtime="20190715 02:26:33.199"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:33.199" level="INFO">
${expected_json} = {'value': {'value1': 'I am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:33.199" endtime="20190715 02:26:33.199"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:33.200" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I am value 1'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:33.199" endtime="20190715 02:26:33.200"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:33.200" level="INFO">
${expected_json} = "{'value': {'value1': 'I am value 1'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:33.200" endtime="20190715 02:26:33.200"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:33.201" level="INFO">
${expected_json} = {'value': {'value1': 'I am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:33.200" endtime="20190715 02:26:33.201"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:33.201" endtime="20190715 02:26:33.201"/>
</kw>
<status status="PASS" starttime="20190715 02:26:32.927" endtime="20190715 02:26:33.202"/>
</kw>
<status status="PASS" starttime="20190715 02:26:32.401" endtime="20190715 02:26:33.202"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to near cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:32.392" endtime="20190715 02:26:33.202"/>
</test>
<test id="s1-s1-s1-s4-t8" name="07 I update to near cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:33.203" endtime="20190715 02:26:33.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:33.204" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:33.204" endtime="20190715 02:26:33.204"/>
</kw>
<status status="PASS" starttime="20190715 02:26:33.203" endtime="20190715 02:26:33.204"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key2</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:33.205" level="INFO">${key} = samplepythonv2_key2</msg>
<status status="PASS" starttime="20190715 02:26:33.205" endtime="20190715 02:26:33.205"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:33.206" endtime="20190715 02:26:33.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:33.206" level="INFO">samplepythonv2_key2</msg>
<status status="PASS" starttime="20190715 02:26:33.206" endtime="20190715 02:26:33.206"/>
</kw>
<status status="PASS" starttime="20190715 02:26:33.205" endtime="20190715 02:26:33.206"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I will be updated soon"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:33.207" level="INFO">
${value} = { "value":{ "value1": "I will be updated soon" } }
</msg>
<status status="PASS" starttime="20190715 02:26:33.207" endtime="20190715 02:26:33.207"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:33.209" endtime="20190715 02:26:33.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:33.210" level="INFO">{ "value":{ "value1": "I will be updated soon" } }</msg>
<status status="PASS" starttime="20190715 02:26:33.210" endtime="20190715 02:26:33.210"/>
</kw>
<status status="PASS" starttime="20190715 02:26:33.208" endtime="20190715 02:26:33.211"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>near</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:33.212" level="INFO">${cache_type} = near</msg>
<status status="PASS" starttime="20190715 02:26:33.211" endtime="20190715 02:26:33.212"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:33.480" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:33.480" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:33.213" endtime="20190715 02:26:33.481"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:33.483" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:33.482" endtime="20190715 02:26:33.483"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:33.484" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:33.483" endtime="20190715 02:26:33.484"/>
</kw>
<msg timestamp="20190715 02:26:33.485" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:33.481" endtime="20190715 02:26:33.485"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:33.487" level="INFO">
postData: {"cacheType":"near", "key":"samplepythonv2_key2", "value":{ "value":{ "value1": "I will be updated soon" } }}
</msg>
<msg timestamp="20190715 02:26:33.487" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:33.487" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:33.784" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:33.784" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:33.785" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:33.785" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:33.485" endtime="20190715 02:26:33.785"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:33.786" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:33.785" endtime="20190715 02:26:33.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:33.786" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:33.786" endtime="20190715 02:26:33.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:33.787" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:33.787" endtime="20190715 02:26:33.787"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:33.788" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:33.787" endtime="20190715 02:26:33.788"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:33.791" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:33.790" endtime="20190715 02:26:33.791"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:33.792" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:33.791" endtime="20190715 02:26:33.792"/>
</kw>
<msg timestamp="20190715 02:26:33.792" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:33.790" endtime="20190715 02:26:33.792"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:33.793" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:33.793" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:33.793" endtime="20190715 02:26:33.794"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:33.795" level="INFO">
postData: {"cacheType":"near", "key": "samplepythonv2_key2"}
</msg>
<msg timestamp="20190715 02:26:33.795" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:33.796" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:34.058" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:34.059" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:34.059" level="INFO">
resp.text: {"value": {"value1": "I will be updated soon"}}
</msg>
<msg timestamp="20190715 02:26:34.059" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:33.794" endtime="20190715 02:26:34.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:34.060" level="INFO">{'value': {'value1': 'I will be updated soon'}}</msg>
<status status="PASS" starttime="20190715 02:26:34.060" endtime="20190715 02:26:34.060"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:34.061" level="INFO">
${json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:34.061" endtime="20190715 02:26:34.061"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:34.062" level="INFO">
${actual_value} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:34.061" endtime="20190715 02:26:34.062"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:34.063" level="INFO">
${expected_json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:34.062" endtime="20190715 02:26:34.063"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:34.063" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I will be updated soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:34.063" endtime="20190715 02:26:34.063"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:34.064" level="INFO">
${expected_json} = "{'value': {'value1': 'I will be updated soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:34.063" endtime="20190715 02:26:34.064"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:34.065" level="INFO">
${expected_json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:34.064" endtime="20190715 02:26:34.065"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:34.065" endtime="20190715 02:26:34.065"/>
</kw>
<status status="PASS" starttime="20190715 02:26:33.789" endtime="20190715 02:26:34.065"/>
</kw>
<status status="PASS" starttime="20190715 02:26:33.212" endtime="20190715 02:26:34.065"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I got updated now"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${updated_value}</var>
</assign>
<msg timestamp="20190715 02:26:34.066" level="INFO">
${updated_value} = { "value":{ "value1": "I got updated now" } }
</msg>
<status status="PASS" starttime="20190715 02:26:34.066" endtime="20190715 02:26:34.066"/>
</kw>
<kw name="I verify update ${key} with ${updated_value} in ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:34.067" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:34.067" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:34.067" endtime="20190715 02:26:34.067"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:34.069" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:34.068" endtime="20190715 02:26:34.069"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:34.070" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:34.069" endtime="20190715 02:26:34.070"/>
</kw>
<msg timestamp="20190715 02:26:34.070" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:34.068" endtime="20190715 02:26:34.070"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/update</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:34.071" level="INFO">
postData: {"cacheType":"near", "key":"samplepythonv2_key2", "value":{ "value":{ "value1": "I got updated now" } }}
</msg>
<msg timestamp="20190715 02:26:34.071" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/update
</msg>
<msg timestamp="20190715 02:26:34.071" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:34.337" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:34.337" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:34.337" level="INFO">resp.text: {"response": "redis update successful"}</msg>
<msg timestamp="20190715 02:26:34.338" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:34.070" endtime="20190715 02:26:34.338"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:34.339" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:34.338" endtime="20190715 02:26:34.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:34.339" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:34.339" endtime="20190715 02:26:34.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:34.340" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:34.339" endtime="20190715 02:26:34.340"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:34.341" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:34.341" endtime="20190715 02:26:34.342"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:34.342" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:34.342" endtime="20190715 02:26:34.342"/>
</kw>
<msg timestamp="20190715 02:26:34.342" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:34.341" endtime="20190715 02:26:34.342"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:34.343" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:34.343" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:34.343" endtime="20190715 02:26:34.343"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:34.344" level="INFO">
postData: {"cacheType":"near", "key": "samplepythonv2_key2"}
</msg>
<msg timestamp="20190715 02:26:34.344" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:34.345" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:34.783" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:34.784" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:34.784" level="INFO">
resp.text: {"value": {"value1": "I got updated now"}}
</msg>
<msg timestamp="20190715 02:26:34.784" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:34.343" endtime="20190715 02:26:34.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:34.785" level="INFO">{'value': {'value1': 'I got updated now'}}</msg>
<status status="PASS" starttime="20190715 02:26:34.785" endtime="20190715 02:26:34.785"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:34.786" level="INFO">
${json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:34.786" endtime="20190715 02:26:34.786"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:34.787" level="INFO">
${actual_value} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:34.786" endtime="20190715 02:26:34.787"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:34.787" level="INFO">
${expected_json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:34.787" endtime="20190715 02:26:34.787"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:34.788" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I got updated now'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:34.788" endtime="20190715 02:26:34.788"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:34.789" level="INFO">
${expected_json} = "{'value': {'value1': 'I got updated now'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:34.788" endtime="20190715 02:26:34.789"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:34.789" level="INFO">
${expected_json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:34.789" endtime="20190715 02:26:34.789"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:34.790" endtime="20190715 02:26:34.790"/>
</kw>
<status status="PASS" starttime="20190715 02:26:34.340" endtime="20190715 02:26:34.790"/>
</kw>
<status status="PASS" starttime="20190715 02:26:34.066" endtime="20190715 02:26:34.790"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to near cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:33.202" endtime="20190715 02:26:34.790"/>
</test>
<test id="s1-s1-s1-s4-t9" name="08 I delete from near cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:34.792" endtime="20190715 02:26:34.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:34.793" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:34.793" endtime="20190715 02:26:34.793"/>
</kw>
<status status="PASS" starttime="20190715 02:26:34.792" endtime="20190715 02:26:34.793"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key2</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:34.794" level="INFO">${key} = samplepythonv2_key2</msg>
<status status="PASS" starttime="20190715 02:26:34.794" endtime="20190715 02:26:34.794"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:34.795" endtime="20190715 02:26:34.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:34.796" level="INFO">samplepythonv2_key2</msg>
<status status="PASS" starttime="20190715 02:26:34.795" endtime="20190715 02:26:34.796"/>
</kw>
<status status="PASS" starttime="20190715 02:26:34.794" endtime="20190715 02:26:34.796"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I will be deleted soon"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:34.796" level="INFO">
${value} = { "value":{ "value1": "I will be deleted soon" } }
</msg>
<status status="PASS" starttime="20190715 02:26:34.796" endtime="20190715 02:26:34.796"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:34.797" endtime="20190715 02:26:34.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:34.798" level="INFO">{ "value":{ "value1": "I will be deleted soon" } }</msg>
<status status="PASS" starttime="20190715 02:26:34.798" endtime="20190715 02:26:34.798"/>
</kw>
<status status="PASS" starttime="20190715 02:26:34.797" endtime="20190715 02:26:34.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>near</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:34.799" level="INFO">${cache_type} = near</msg>
<status status="PASS" starttime="20190715 02:26:34.798" endtime="20190715 02:26:34.799"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:35.060" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:35.060" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:34.799" endtime="20190715 02:26:35.060"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:35.062" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:35.061" endtime="20190715 02:26:35.062"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:35.062" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:35.062" endtime="20190715 02:26:35.062"/>
</kw>
<msg timestamp="20190715 02:26:35.063" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:35.061" endtime="20190715 02:26:35.063"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:35.063" level="INFO">
postData: {"cacheType":"near", "key":"samplepythonv2_key2", "value":{ "value":{ "value1": "I will be deleted soon" } }}
</msg>
<msg timestamp="20190715 02:26:35.064" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:35.064" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:35.337" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:35.338" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:35.338" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:35.339" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:35.063" endtime="20190715 02:26:35.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:35.340" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:35.339" endtime="20190715 02:26:35.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:35.342" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:35.341" endtime="20190715 02:26:35.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:35.343" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:35.343" endtime="20190715 02:26:35.343"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:35.345" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:35.344" endtime="20190715 02:26:35.345"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:35.347" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:35.347" endtime="20190715 02:26:35.347"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:35.348" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:35.348" endtime="20190715 02:26:35.348"/>
</kw>
<msg timestamp="20190715 02:26:35.348" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:35.346" endtime="20190715 02:26:35.348"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:35.349" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:35.349" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:35.348" endtime="20190715 02:26:35.350"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:35.350" level="INFO">
postData: {"cacheType":"near", "key": "samplepythonv2_key2"}
</msg>
<msg timestamp="20190715 02:26:35.351" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:35.351" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:35.612" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:35.613" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:35.613" level="INFO">
resp.text: {"value": {"value1": "I will be deleted soon"}}
</msg>
<msg timestamp="20190715 02:26:35.613" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:35.350" endtime="20190715 02:26:35.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:35.614" level="INFO">{'value': {'value1': 'I will be deleted soon'}}</msg>
<status status="PASS" starttime="20190715 02:26:35.613" endtime="20190715 02:26:35.614"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:35.615" level="INFO">
${json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:35.614" endtime="20190715 02:26:35.615"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:35.615" level="INFO">
${actual_value} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:35.615" endtime="20190715 02:26:35.615"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:35.616" level="INFO">
${expected_json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:35.616" endtime="20190715 02:26:35.616"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:35.617" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I will be deleted soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:35.616" endtime="20190715 02:26:35.617"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:35.617" level="INFO">
${expected_json} = "{'value': {'value1': 'I will be deleted soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:35.617" endtime="20190715 02:26:35.617"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:35.618" level="INFO">
${expected_json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:35.618" endtime="20190715 02:26:35.618"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:35.618" endtime="20190715 02:26:35.619"/>
</kw>
<status status="PASS" starttime="20190715 02:26:35.345" endtime="20190715 02:26:35.619"/>
</kw>
<status status="PASS" starttime="20190715 02:26:34.799" endtime="20190715 02:26:35.619"/>
</kw>
<kw name="I verify delete ${key} from ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:35.620" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:35.620" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:35.620" endtime="20190715 02:26:35.621"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:35.622" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:35.621" endtime="20190715 02:26:35.622"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:35.622" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:35.622" endtime="20190715 02:26:35.622"/>
</kw>
<msg timestamp="20190715 02:26:35.623" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:35.621" endtime="20190715 02:26:35.623"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/delete</arg>
<arg>{"cacheType":"${cache_type}", "key":"${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:35.624" level="INFO">
postData: {"cacheType":"near", "key":"samplepythonv2_key2"}
</msg>
<msg timestamp="20190715 02:26:35.624" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/delete
</msg>
<msg timestamp="20190715 02:26:35.624" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:35.881" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:35.881" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:35.882" level="INFO">
resp.text: {"response": "redis delete key successful"}
</msg>
<msg timestamp="20190715 02:26:35.882" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:35.623" endtime="20190715 02:26:35.882"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:35.883" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:35.882" endtime="20190715 02:26:35.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:35.883" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:35.883" endtime="20190715 02:26:35.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:35.884" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:35.884" endtime="20190715 02:26:35.884"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"response": "key not found"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${read_after_delete}</var>
</assign>
<msg timestamp="20190715 02:26:35.884" level="INFO">
${read_after_delete} = { "response": "key not found" }
</msg>
<status status="PASS" starttime="20190715 02:26:35.884" endtime="20190715 02:26:35.884"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${read_after_delete}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:35.887" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:35.886" endtime="20190715 02:26:35.887"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:35.887" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:35.887" endtime="20190715 02:26:35.887"/>
</kw>
<msg timestamp="20190715 02:26:35.887" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:35.885" endtime="20190715 02:26:35.887"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:35.888" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:35.888" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:35.888" endtime="20190715 02:26:35.888"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:35.889" level="INFO">
postData: {"cacheType":"near", "key": "samplepythonv2_key2"}
</msg>
<msg timestamp="20190715 02:26:35.889" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:35.890" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:36.156" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:36.157" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:36.157" level="INFO">resp.text: {"response": "key not found"}</msg>
<msg timestamp="20190715 02:26:36.158" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:35.889" endtime="20190715 02:26:36.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:36.159" level="INFO">{'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.158" endtime="20190715 02:26:36.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:36.160" level="INFO">${json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.160" endtime="20190715 02:26:36.161"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:36.162" level="INFO">${actual_value} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.161" endtime="20190715 02:26:36.162"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:36.163" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.162" endtime="20190715 02:26:36.163"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:36.164" level="INFO">
${expected_rjson} = "{'response': 'key not found'}"
</msg>
<status status="PASS" starttime="20190715 02:26:36.163" endtime="20190715 02:26:36.164"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:36.164" level="INFO">${expected_json} = "{'response': 'key not found'}"</msg>
<status status="PASS" starttime="20190715 02:26:36.164" endtime="20190715 02:26:36.164"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:36.165" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.164" endtime="20190715 02:26:36.165"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:36.165" endtime="20190715 02:26:36.166"/>
</kw>
<status status="PASS" starttime="20190715 02:26:35.885" endtime="20190715 02:26:36.166"/>
</kw>
<status status="PASS" starttime="20190715 02:26:35.619" endtime="20190715 02:26:36.166"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to near cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:34.791" endtime="20190715 02:26:36.166"/>
</test>
<test id="s1-s1-s1-s4-t10" name="09 I read from near_far cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:36.168" endtime="20190715 02:26:36.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:36.169" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:36.169" endtime="20190715 02:26:36.169"/>
</kw>
<status status="PASS" starttime="20190715 02:26:36.167" endtime="20190715 02:26:36.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>near_far</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:36.170" level="INFO">${cache_type} = near_far</msg>
<status status="PASS" starttime="20190715 02:26:36.169" endtime="20190715 02:26:36.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>I dont exist</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:36.170" level="INFO">${key} = I dont exist</msg>
<status status="PASS" starttime="20190715 02:26:36.170" endtime="20190715 02:26:36.170"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"response": "key not found"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${expected_value}</var>
</assign>
<msg timestamp="20190715 02:26:36.171" level="INFO">
${expected_value} = { "response": "key not found" }
</msg>
<status status="PASS" starttime="20190715 02:26:36.170" endtime="20190715 02:26:36.171"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${expected_value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:36.173" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:36.172" endtime="20190715 02:26:36.173"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:36.173" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:36.173" endtime="20190715 02:26:36.173"/>
</kw>
<msg timestamp="20190715 02:26:36.173" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:36.172" endtime="20190715 02:26:36.174"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:36.437" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:36.437" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:36.174" endtime="20190715 02:26:36.437"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:36.439" level="INFO">
postData: {"cacheType":"near_far", "key": "I dont exist"}
</msg>
<msg timestamp="20190715 02:26:36.440" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:36.440" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:36.708" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:36.708" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:36.709" level="INFO">resp.text: {"response": "key not found"}</msg>
<msg timestamp="20190715 02:26:36.709" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:36.437" endtime="20190715 02:26:36.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:36.711" level="INFO">{'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.710" endtime="20190715 02:26:36.711"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:36.712" level="INFO">${json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.711" endtime="20190715 02:26:36.712"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:36.714" level="INFO">${actual_value} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.713" endtime="20190715 02:26:36.714"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:36.715" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.714" endtime="20190715 02:26:36.715"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:36.716" level="INFO">
${expected_rjson} = "{'response': 'key not found'}"
</msg>
<status status="PASS" starttime="20190715 02:26:36.715" endtime="20190715 02:26:36.716"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:36.717" level="INFO">${expected_json} = "{'response': 'key not found'}"</msg>
<status status="PASS" starttime="20190715 02:26:36.717" endtime="20190715 02:26:36.717"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:36.718" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:36.717" endtime="20190715 02:26:36.718"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:36.718" endtime="20190715 02:26:36.718"/>
</kw>
<status status="PASS" starttime="20190715 02:26:36.171" endtime="20190715 02:26:36.718"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to near_far cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:36.167" endtime="20190715 02:26:36.719"/>
</test>
<test id="s1-s1-s1-s4-t11" name="10 I write to near_far cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:36.720" endtime="20190715 02:26:36.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:36.721" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:36.721" endtime="20190715 02:26:36.721"/>
</kw>
<status status="PASS" starttime="20190715 02:26:36.720" endtime="20190715 02:26:36.721"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key3</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:36.722" level="INFO">${key} = samplepythonv2_key3</msg>
<status status="PASS" starttime="20190715 02:26:36.721" endtime="20190715 02:26:36.722"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:36.723" endtime="20190715 02:26:36.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:36.724" level="INFO">samplepythonv2_key3</msg>
<status status="PASS" starttime="20190715 02:26:36.723" endtime="20190715 02:26:36.724"/>
</kw>
<status status="PASS" starttime="20190715 02:26:36.722" endtime="20190715 02:26:36.724"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I am value 1"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:36.724" level="INFO">
${value} = { "value":{ "value1": "I am value 1" } }
</msg>
<status status="PASS" starttime="20190715 02:26:36.724" endtime="20190715 02:26:36.724"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:36.725" endtime="20190715 02:26:36.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:36.726" level="INFO">{ "value":{ "value1": "I am value 1" } }</msg>
<status status="PASS" starttime="20190715 02:26:36.726" endtime="20190715 02:26:36.726"/>
</kw>
<status status="PASS" starttime="20190715 02:26:36.725" endtime="20190715 02:26:36.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>near_far</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:36.726" level="INFO">${cache_type} = near_far</msg>
<status status="PASS" starttime="20190715 02:26:36.726" endtime="20190715 02:26:36.727"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:36.988" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:36.988" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:36.727" endtime="20190715 02:26:36.988"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:36.989" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:36.989" endtime="20190715 02:26:36.989"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:36.990" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:36.990" endtime="20190715 02:26:36.990"/>
</kw>
<msg timestamp="20190715 02:26:36.990" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:36.988" endtime="20190715 02:26:36.990"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:36.991" level="INFO">
postData: {"cacheType":"near_far", "key":"samplepythonv2_key3", "value":{ "value":{ "value1": "I am value 1" } }}
</msg>
<msg timestamp="20190715 02:26:36.992" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:36.992" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:37.264" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:37.264" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:37.265" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:37.265" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:36.991" endtime="20190715 02:26:37.265"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:37.268" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:37.267" endtime="20190715 02:26:37.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:37.269" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:37.269" endtime="20190715 02:26:37.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:37.271" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:37.270" endtime="20190715 02:26:37.271"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:37.272" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:37.271" endtime="20190715 02:26:37.272"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:37.276" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:37.275" endtime="20190715 02:26:37.276"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:37.277" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:37.276" endtime="20190715 02:26:37.277"/>
</kw>
<msg timestamp="20190715 02:26:37.277" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:37.274" endtime="20190715 02:26:37.277"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:37.278" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:37.278" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:37.277" endtime="20190715 02:26:37.278"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:37.279" level="INFO">
postData: {"cacheType":"near_far", "key": "samplepythonv2_key3"}
</msg>
<msg timestamp="20190715 02:26:37.279" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:37.279" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:37.547" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:37.548" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:37.548" level="INFO">resp.text: {"value": {"value1": "I am value 1"}}</msg>
<msg timestamp="20190715 02:26:37.548" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:37.278" endtime="20190715 02:26:37.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:37.549" level="INFO">{'value': {'value1': 'I am value 1'}}</msg>
<status status="PASS" starttime="20190715 02:26:37.548" endtime="20190715 02:26:37.549"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:37.550" level="INFO">${json} = {'value': {'value1': 'I am value 1'}}</msg>
<status status="PASS" starttime="20190715 02:26:37.549" endtime="20190715 02:26:37.550"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:37.551" level="INFO">
${actual_value} = {'value': {'value1': 'I am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:37.550" endtime="20190715 02:26:37.551"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:37.551" level="INFO">
${expected_json} = {'value': {'value1': 'I am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:37.551" endtime="20190715 02:26:37.551"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:37.552" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I am value 1'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:37.551" endtime="20190715 02:26:37.552"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:37.553" level="INFO">
${expected_json} = "{'value': {'value1': 'I am value 1'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:37.552" endtime="20190715 02:26:37.553"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:37.554" level="INFO">
${expected_json} = {'value': {'value1': 'I am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:37.553" endtime="20190715 02:26:37.554"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:37.554" endtime="20190715 02:26:37.554"/>
</kw>
<status status="PASS" starttime="20190715 02:26:37.273" endtime="20190715 02:26:37.555"/>
</kw>
<status status="PASS" starttime="20190715 02:26:36.727" endtime="20190715 02:26:37.555"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to near_far cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:36.719" endtime="20190715 02:26:37.555"/>
</test>
<test id="s1-s1-s1-s4-t12" name="11 I update to near_far cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:37.557" endtime="20190715 02:26:37.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:37.558" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:37.557" endtime="20190715 02:26:37.558"/>
</kw>
<status status="PASS" starttime="20190715 02:26:37.556" endtime="20190715 02:26:37.558"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key3</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:37.558" level="INFO">${key} = samplepythonv2_key3</msg>
<status status="PASS" starttime="20190715 02:26:37.558" endtime="20190715 02:26:37.558"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:37.559" endtime="20190715 02:26:37.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:37.560" level="INFO">samplepythonv2_key3</msg>
<status status="PASS" starttime="20190715 02:26:37.560" endtime="20190715 02:26:37.560"/>
</kw>
<status status="PASS" starttime="20190715 02:26:37.559" endtime="20190715 02:26:37.560"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I will be updated soon"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:37.561" level="INFO">
${value} = { "value":{ "value1": "I will be updated soon" } }
</msg>
<status status="PASS" starttime="20190715 02:26:37.560" endtime="20190715 02:26:37.561"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:37.561" endtime="20190715 02:26:37.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:37.562" level="INFO">{ "value":{ "value1": "I will be updated soon" } }</msg>
<status status="PASS" starttime="20190715 02:26:37.562" endtime="20190715 02:26:37.562"/>
</kw>
<status status="PASS" starttime="20190715 02:26:37.561" endtime="20190715 02:26:37.562"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>near_far</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:37.563" level="INFO">${cache_type} = near_far</msg>
<status status="PASS" starttime="20190715 02:26:37.563" endtime="20190715 02:26:37.563"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:37.824" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:37.825" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:37.564" endtime="20190715 02:26:37.825"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:37.827" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:37.826" endtime="20190715 02:26:37.827"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:37.829" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:37.828" endtime="20190715 02:26:37.829"/>
</kw>
<msg timestamp="20190715 02:26:37.829" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:37.825" endtime="20190715 02:26:37.829"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:37.831" level="INFO">
postData: {"cacheType":"near_far", "key":"samplepythonv2_key3", "value":{ "value":{ "value1": "I will be updated soon" } }}
</msg>
<msg timestamp="20190715 02:26:37.832" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:37.832" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:38.096" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:38.096" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:38.097" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:38.097" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:37.830" endtime="20190715 02:26:38.097"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:38.098" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:38.097" endtime="20190715 02:26:38.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:38.098" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:38.098" endtime="20190715 02:26:38.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:38.099" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:38.099" endtime="20190715 02:26:38.099"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:38.100" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:38.099" endtime="20190715 02:26:38.100"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:38.102" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:38.101" endtime="20190715 02:26:38.102"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:38.102" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:38.102" endtime="20190715 02:26:38.102"/>
</kw>
<msg timestamp="20190715 02:26:38.103" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:38.101" endtime="20190715 02:26:38.103"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:38.103" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:38.104" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:38.103" endtime="20190715 02:26:38.104"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:38.105" level="INFO">
postData: {"cacheType":"near_far", "key": "samplepythonv2_key3"}
</msg>
<msg timestamp="20190715 02:26:38.105" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:38.105" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:38.365" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:38.365" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:38.366" level="INFO">
resp.text: {"value": {"value1": "I will be updated soon"}}
</msg>
<msg timestamp="20190715 02:26:38.366" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:38.104" endtime="20190715 02:26:38.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:38.367" level="INFO">{'value': {'value1': 'I will be updated soon'}}</msg>
<status status="PASS" starttime="20190715 02:26:38.367" endtime="20190715 02:26:38.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:38.369" level="INFO">
${json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:38.368" endtime="20190715 02:26:38.369"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:38.370" level="INFO">
${actual_value} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:38.369" endtime="20190715 02:26:38.371"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:38.372" level="INFO">
${expected_json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:38.371" endtime="20190715 02:26:38.372"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:38.373" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I will be updated soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:38.372" endtime="20190715 02:26:38.373"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:38.374" level="INFO">
${expected_json} = "{'value': {'value1': 'I will be updated soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:38.374" endtime="20190715 02:26:38.374"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:38.376" level="INFO">
${expected_json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:38.375" endtime="20190715 02:26:38.376"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:38.376" endtime="20190715 02:26:38.377"/>
</kw>
<status status="PASS" starttime="20190715 02:26:38.100" endtime="20190715 02:26:38.377"/>
</kw>
<status status="PASS" starttime="20190715 02:26:37.563" endtime="20190715 02:26:38.377"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I got updated now"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${updated_value}</var>
</assign>
<msg timestamp="20190715 02:26:38.378" level="INFO">
${updated_value} = { "value":{ "value1": "I got updated now" } }
</msg>
<status status="PASS" starttime="20190715 02:26:38.377" endtime="20190715 02:26:38.378"/>
</kw>
<kw name="I verify update ${key} with ${updated_value} in ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:38.379" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:38.379" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:38.378" endtime="20190715 02:26:38.379"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:38.380" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:38.380" endtime="20190715 02:26:38.380"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:38.381" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:38.381" endtime="20190715 02:26:38.381"/>
</kw>
<msg timestamp="20190715 02:26:38.381" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:38.379" endtime="20190715 02:26:38.381"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/update</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:38.383" level="INFO">
postData: {"cacheType":"near_far", "key":"samplepythonv2_key3", "value":{ "value":{ "value1": "I got updated now" } }}
</msg>
<msg timestamp="20190715 02:26:38.383" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/update
</msg>
<msg timestamp="20190715 02:26:38.384" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:38.686" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:38.687" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:38.687" level="INFO">resp.text: {"response": "redis update successful"}</msg>
<msg timestamp="20190715 02:26:38.689" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:38.382" endtime="20190715 02:26:38.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:38.690" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:38.689" endtime="20190715 02:26:38.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:38.691" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:38.691" endtime="20190715 02:26:38.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:38.693" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:38.692" endtime="20190715 02:26:38.693"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:38.696" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:38.695" endtime="20190715 02:26:38.696"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:38.697" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:38.696" endtime="20190715 02:26:38.697"/>
</kw>
<msg timestamp="20190715 02:26:38.697" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:38.695" endtime="20190715 02:26:38.697"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:38.698" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:38.698" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:38.697" endtime="20190715 02:26:38.698"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:38.699" level="INFO">
postData: {"cacheType":"near_far", "key": "samplepythonv2_key3"}
</msg>
<msg timestamp="20190715 02:26:38.699" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:38.700" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:38.955" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:38.955" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:38.956" level="INFO">
resp.text: {"value": {"value1": "I got updated now"}}
</msg>
<msg timestamp="20190715 02:26:38.956" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:38.698" endtime="20190715 02:26:38.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:38.958" level="INFO">{'value': {'value1': 'I got updated now'}}</msg>
<status status="PASS" starttime="20190715 02:26:38.957" endtime="20190715 02:26:38.958"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:38.959" level="INFO">
${json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:38.958" endtime="20190715 02:26:38.959"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:38.961" level="INFO">
${actual_value} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:38.960" endtime="20190715 02:26:38.961"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:38.962" level="INFO">
${expected_json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:38.961" endtime="20190715 02:26:38.962"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:38.963" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I got updated now'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:38.963" endtime="20190715 02:26:38.963"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:38.965" level="INFO">
${expected_json} = "{'value': {'value1': 'I got updated now'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:38.964" endtime="20190715 02:26:38.965"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:38.966" level="INFO">
${expected_json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:38.965" endtime="20190715 02:26:38.966"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:38.966" endtime="20190715 02:26:38.967"/>
</kw>
<status status="PASS" starttime="20190715 02:26:38.693" endtime="20190715 02:26:38.967"/>
</kw>
<status status="PASS" starttime="20190715 02:26:38.378" endtime="20190715 02:26:38.967"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to near_far cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:37.555" endtime="20190715 02:26:38.967"/>
</test>
<test id="s1-s1-s1-s4-t13" name="12 I delete from near_far cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:38.969" endtime="20190715 02:26:38.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:38.970" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:38.970" endtime="20190715 02:26:38.970"/>
</kw>
<status status="PASS" starttime="20190715 02:26:38.968" endtime="20190715 02:26:38.970"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key3</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:38.971" level="INFO">${key} = samplepythonv2_key3</msg>
<status status="PASS" starttime="20190715 02:26:38.970" endtime="20190715 02:26:38.971"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:38.972" endtime="20190715 02:26:38.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:38.972" level="INFO">samplepythonv2_key3</msg>
<status status="PASS" starttime="20190715 02:26:38.972" endtime="20190715 02:26:38.973"/>
</kw>
<status status="PASS" starttime="20190715 02:26:38.971" endtime="20190715 02:26:38.973"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I will be deleted soon"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:38.973" level="INFO">
${value} = { "value":{ "value1": "I will be deleted soon" } }
</msg>
<status status="PASS" starttime="20190715 02:26:38.973" endtime="20190715 02:26:38.973"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:38.974" endtime="20190715 02:26:38.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:38.975" level="INFO">{ "value":{ "value1": "I will be deleted soon" } }</msg>
<status status="PASS" starttime="20190715 02:26:38.974" endtime="20190715 02:26:38.975"/>
</kw>
<status status="PASS" starttime="20190715 02:26:38.973" endtime="20190715 02:26:38.975"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>near_far</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:38.975" level="INFO">${cache_type} = near_far</msg>
<status status="PASS" starttime="20190715 02:26:38.975" endtime="20190715 02:26:38.976"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:39.239" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:39.239" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:38.977" endtime="20190715 02:26:39.239"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:39.240" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:39.240" endtime="20190715 02:26:39.240"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:39.241" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:39.241" endtime="20190715 02:26:39.241"/>
</kw>
<msg timestamp="20190715 02:26:39.241" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:39.239" endtime="20190715 02:26:39.241"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:39.242" level="INFO">
postData: {"cacheType":"near_far", "key":"samplepythonv2_key3", "value":{ "value":{ "value1": "I will be deleted soon" } }}
</msg>
<msg timestamp="20190715 02:26:39.243" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:39.243" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:39.500" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:39.501" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:39.501" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:39.502" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:39.242" endtime="20190715 02:26:39.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:39.503" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:39.502" endtime="20190715 02:26:39.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:39.504" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:39.504" endtime="20190715 02:26:39.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:39.505" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:39.505" endtime="20190715 02:26:39.506"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:39.507" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:39.506" endtime="20190715 02:26:39.507"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:39.509" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:39.508" endtime="20190715 02:26:39.509"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:39.509" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:39.509" endtime="20190715 02:26:39.509"/>
</kw>
<msg timestamp="20190715 02:26:39.509" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:39.508" endtime="20190715 02:26:39.509"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:39.510" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:39.510" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:39.510" endtime="20190715 02:26:39.510"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:39.512" level="INFO">
postData: {"cacheType":"near_far", "key": "samplepythonv2_key3"}
</msg>
<msg timestamp="20190715 02:26:39.513" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:39.513" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:39.777" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:39.778" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:39.778" level="INFO">
resp.text: {"value": {"value1": "I will be deleted soon"}}
</msg>
<msg timestamp="20190715 02:26:39.778" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:39.511" endtime="20190715 02:26:39.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:39.780" level="INFO">{'value': {'value1': 'I will be deleted soon'}}</msg>
<status status="PASS" starttime="20190715 02:26:39.779" endtime="20190715 02:26:39.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:39.782" level="INFO">
${json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:39.781" endtime="20190715 02:26:39.782"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:39.783" level="INFO">
${actual_value} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:39.782" endtime="20190715 02:26:39.783"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:39.784" level="INFO">
${expected_json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:39.784" endtime="20190715 02:26:39.785"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:39.786" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I will be deleted soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:39.785" endtime="20190715 02:26:39.786"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:39.787" level="INFO">
${expected_json} = "{'value': {'value1': 'I will be deleted soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:39.786" endtime="20190715 02:26:39.787"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:39.787" level="INFO">
${expected_json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:39.787" endtime="20190715 02:26:39.787"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:39.788" endtime="20190715 02:26:39.788"/>
</kw>
<status status="PASS" starttime="20190715 02:26:39.507" endtime="20190715 02:26:39.788"/>
</kw>
<status status="PASS" starttime="20190715 02:26:38.976" endtime="20190715 02:26:39.788"/>
</kw>
<kw name="I verify delete ${key} from ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:39.790" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:39.791" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:39.789" endtime="20190715 02:26:39.791"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:39.794" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:39.792" endtime="20190715 02:26:39.794"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:39.795" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:39.795" endtime="20190715 02:26:39.795"/>
</kw>
<msg timestamp="20190715 02:26:39.796" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:39.791" endtime="20190715 02:26:39.796"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/delete</arg>
<arg>{"cacheType":"${cache_type}", "key":"${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:39.797" level="INFO">
postData: {"cacheType":"near_far", "key":"samplepythonv2_key3"}
</msg>
<msg timestamp="20190715 02:26:39.797" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/delete
</msg>
<msg timestamp="20190715 02:26:39.797" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:40.090" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:40.090" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:40.090" level="INFO">
resp.text: {"response": "redis delete key successful"}
</msg>
<msg timestamp="20190715 02:26:40.091" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:39.796" endtime="20190715 02:26:40.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:40.092" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:40.091" endtime="20190715 02:26:40.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:40.092" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:40.092" endtime="20190715 02:26:40.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:40.093" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:40.093" endtime="20190715 02:26:40.093"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"response": "key not found"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${read_after_delete}</var>
</assign>
<msg timestamp="20190715 02:26:40.093" level="INFO">
${read_after_delete} = { "response": "key not found" }
</msg>
<status status="PASS" starttime="20190715 02:26:40.093" endtime="20190715 02:26:40.093"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${read_after_delete}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:40.095" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:40.095" endtime="20190715 02:26:40.095"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:40.096" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:40.096" endtime="20190715 02:26:40.096"/>
</kw>
<msg timestamp="20190715 02:26:40.096" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:40.094" endtime="20190715 02:26:40.096"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:40.097" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:40.097" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:40.096" endtime="20190715 02:26:40.097"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:40.098" level="INFO">
postData: {"cacheType":"near_far", "key": "samplepythonv2_key3"}
</msg>
<msg timestamp="20190715 02:26:40.099" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:40.099" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:40.358" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:40.359" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:40.359" level="INFO">resp.text: {"response": "key not found"}</msg>
<msg timestamp="20190715 02:26:40.360" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:40.097" endtime="20190715 02:26:40.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:40.362" level="INFO">{'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.361" endtime="20190715 02:26:40.362"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:40.364" level="INFO">${json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.363" endtime="20190715 02:26:40.364"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:40.365" level="INFO">${actual_value} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.364" endtime="20190715 02:26:40.365"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:40.366" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.366" endtime="20190715 02:26:40.366"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:40.367" level="INFO">
${expected_rjson} = "{'response': 'key not found'}"
</msg>
<status status="PASS" starttime="20190715 02:26:40.367" endtime="20190715 02:26:40.367"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:40.367" level="INFO">${expected_json} = "{'response': 'key not found'}"</msg>
<status status="PASS" starttime="20190715 02:26:40.367" endtime="20190715 02:26:40.368"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:40.368" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.368" endtime="20190715 02:26:40.368"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:40.368" endtime="20190715 02:26:40.369"/>
</kw>
<status status="PASS" starttime="20190715 02:26:40.094" endtime="20190715 02:26:40.369"/>
</kw>
<status status="PASS" starttime="20190715 02:26:39.789" endtime="20190715 02:26:40.369"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to near_far cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:38.968" endtime="20190715 02:26:40.369"/>
</test>
<test id="s1-s1-s1-s4-t14" name="13 I read from default cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:40.371" endtime="20190715 02:26:40.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:40.372" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:40.372" endtime="20190715 02:26:40.372"/>
</kw>
<status status="PASS" starttime="20190715 02:26:40.371" endtime="20190715 02:26:40.372"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>default</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:40.373" level="INFO">${cache_type} = default</msg>
<status status="PASS" starttime="20190715 02:26:40.372" endtime="20190715 02:26:40.373"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>I dont exist</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:40.373" level="INFO">${key} = I dont exist</msg>
<status status="PASS" starttime="20190715 02:26:40.373" endtime="20190715 02:26:40.373"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"response": "key not found"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${expected_value}</var>
</assign>
<msg timestamp="20190715 02:26:40.374" level="INFO">
${expected_value} = { "response": "key not found" }
</msg>
<status status="PASS" starttime="20190715 02:26:40.373" endtime="20190715 02:26:40.374"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${expected_value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:40.375" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:40.375" endtime="20190715 02:26:40.375"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:40.376" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:40.376" endtime="20190715 02:26:40.376"/>
</kw>
<msg timestamp="20190715 02:26:40.376" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:40.374" endtime="20190715 02:26:40.376"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:40.639" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:40.639" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:40.376" endtime="20190715 02:26:40.639"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:40.640" level="INFO">
postData: {"cacheType":"default", "key": "I dont exist"}
</msg>
<msg timestamp="20190715 02:26:40.640" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:40.641" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:40.904" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:40.904" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:40.905" level="INFO">resp.text: {"response": "key not found"}</msg>
<msg timestamp="20190715 02:26:40.905" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:40.639" endtime="20190715 02:26:40.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:40.906" level="INFO">{'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.905" endtime="20190715 02:26:40.906"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:40.907" level="INFO">${json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.906" endtime="20190715 02:26:40.907"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:40.907" level="INFO">${actual_value} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.907" endtime="20190715 02:26:40.907"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:40.908" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.908" endtime="20190715 02:26:40.908"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:40.909" level="INFO">
${expected_rjson} = "{'response': 'key not found'}"
</msg>
<status status="PASS" starttime="20190715 02:26:40.908" endtime="20190715 02:26:40.909"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:40.909" level="INFO">${expected_json} = "{'response': 'key not found'}"</msg>
<status status="PASS" starttime="20190715 02:26:40.909" endtime="20190715 02:26:40.909"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:40.910" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:40.910" endtime="20190715 02:26:40.910"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:40.910" endtime="20190715 02:26:40.911"/>
</kw>
<status status="PASS" starttime="20190715 02:26:40.374" endtime="20190715 02:26:40.911"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to default cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:40.370" endtime="20190715 02:26:40.911"/>
</test>
<test id="s1-s1-s1-s4-t15" name="14 I write to default cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:40.913" endtime="20190715 02:26:40.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:40.914" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:40.914" endtime="20190715 02:26:40.914"/>
</kw>
<status status="PASS" starttime="20190715 02:26:40.912" endtime="20190715 02:26:40.914"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key4</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:40.915" level="INFO">${key} = samplepythonv2_key4</msg>
<status status="PASS" starttime="20190715 02:26:40.914" endtime="20190715 02:26:40.915"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:40.916" endtime="20190715 02:26:40.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:40.917" level="INFO">samplepythonv2_key4</msg>
<status status="PASS" starttime="20190715 02:26:40.916" endtime="20190715 02:26:40.917"/>
</kw>
<status status="PASS" starttime="20190715 02:26:40.915" endtime="20190715 02:26:40.917"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I am value 1"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:40.917" level="INFO">
${value} = { "value":{ "value1": "I am value 1" } }
</msg>
<status status="PASS" starttime="20190715 02:26:40.917" endtime="20190715 02:26:40.917"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:40.918" endtime="20190715 02:26:40.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:40.919" level="INFO">{ "value":{ "value1": "I am value 1" } }</msg>
<status status="PASS" starttime="20190715 02:26:40.919" endtime="20190715 02:26:40.919"/>
</kw>
<status status="PASS" starttime="20190715 02:26:40.918" endtime="20190715 02:26:40.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>default</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:40.920" level="INFO">${cache_type} = default</msg>
<status status="PASS" starttime="20190715 02:26:40.919" endtime="20190715 02:26:40.920"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:41.177" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:41.178" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:40.921" endtime="20190715 02:26:41.178"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:41.180" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:41.179" endtime="20190715 02:26:41.180"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:41.180" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:41.180" endtime="20190715 02:26:41.180"/>
</kw>
<msg timestamp="20190715 02:26:41.181" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:41.179" endtime="20190715 02:26:41.181"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:41.182" level="INFO">
postData: {"cacheType":"default", "key":"samplepythonv2_key4", "value":{ "value":{ "value1": "I am value 1" } }}
</msg>
<msg timestamp="20190715 02:26:41.182" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:41.183" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:41.435" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:41.436" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:41.436" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:41.436" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:41.181" endtime="20190715 02:26:41.436"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:41.437" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:41.436" endtime="20190715 02:26:41.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:41.437" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:41.437" endtime="20190715 02:26:41.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:41.438" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:41.438" endtime="20190715 02:26:41.438"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:41.439" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:41.438" endtime="20190715 02:26:41.439"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:41.440" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:41.440" endtime="20190715 02:26:41.440"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:41.441" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:41.441" endtime="20190715 02:26:41.441"/>
</kw>
<msg timestamp="20190715 02:26:41.441" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:41.439" endtime="20190715 02:26:41.441"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:41.442" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:41.442" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:41.441" endtime="20190715 02:26:41.442"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:41.443" level="INFO">
postData: {"cacheType":"default", "key": "samplepythonv2_key4"}
</msg>
<msg timestamp="20190715 02:26:41.443" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:41.443" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:41.716" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:41.717" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:41.717" level="INFO">resp.text: {"value": {"value1": "I am value 1"}}</msg>
<msg timestamp="20190715 02:26:41.717" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:41.442" endtime="20190715 02:26:41.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:41.718" level="INFO">{'value': {'value1': 'I am value 1'}}</msg>
<status status="PASS" starttime="20190715 02:26:41.717" endtime="20190715 02:26:41.718"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:41.719" level="INFO">${json} = {'value': {'value1': 'I am value 1'}}</msg>
<status status="PASS" starttime="20190715 02:26:41.718" endtime="20190715 02:26:41.719"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:41.719" level="INFO">
${actual_value} = {'value': {'value1': 'I am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:41.719" endtime="20190715 02:26:41.719"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:41.720" level="INFO">
${expected_json} = {'value': {'value1': 'I am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:41.719" endtime="20190715 02:26:41.720"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:41.720" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I am value 1'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:41.720" endtime="20190715 02:26:41.720"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:41.721" level="INFO">
${expected_json} = "{'value': {'value1': 'I am value 1'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:41.721" endtime="20190715 02:26:41.721"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:41.722" level="INFO">
${expected_json} = {'value': {'value1': 'I am value 1'}}
</msg>
<status status="PASS" starttime="20190715 02:26:41.721" endtime="20190715 02:26:41.722"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:41.722" endtime="20190715 02:26:41.722"/>
</kw>
<status status="PASS" starttime="20190715 02:26:41.439" endtime="20190715 02:26:41.722"/>
</kw>
<status status="PASS" starttime="20190715 02:26:40.920" endtime="20190715 02:26:41.722"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to default cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:40.911" endtime="20190715 02:26:41.723"/>
</test>
<test id="s1-s1-s1-s4-t16" name="15 I update to default cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:41.724" endtime="20190715 02:26:41.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:41.725" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:41.725" endtime="20190715 02:26:41.725"/>
</kw>
<status status="PASS" starttime="20190715 02:26:41.724" endtime="20190715 02:26:41.725"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key4</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:41.726" level="INFO">${key} = samplepythonv2_key4</msg>
<status status="PASS" starttime="20190715 02:26:41.726" endtime="20190715 02:26:41.726"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:41.727" endtime="20190715 02:26:41.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:41.728" level="INFO">samplepythonv2_key4</msg>
<status status="PASS" starttime="20190715 02:26:41.727" endtime="20190715 02:26:41.728"/>
</kw>
<status status="PASS" starttime="20190715 02:26:41.726" endtime="20190715 02:26:41.728"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{"value": {"value1": "I will be updated soon"}}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:41.729" level="INFO">
${value} = {"value": {"value1": "I will be updated soon"}}
</msg>
<status status="PASS" starttime="20190715 02:26:41.728" endtime="20190715 02:26:41.729"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:41.729" endtime="20190715 02:26:41.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:41.730" level="INFO">{"value": {"value1": "I will be updated soon"}}</msg>
<status status="PASS" starttime="20190715 02:26:41.730" endtime="20190715 02:26:41.730"/>
</kw>
<status status="PASS" starttime="20190715 02:26:41.729" endtime="20190715 02:26:41.730"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>default</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:41.731" level="INFO">${cache_type} = default</msg>
<status status="PASS" starttime="20190715 02:26:41.730" endtime="20190715 02:26:41.731"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:42.008" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:42.008" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:41.731" endtime="20190715 02:26:42.008"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:42.009" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:42.009" endtime="20190715 02:26:42.009"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:42.010" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:42.009" endtime="20190715 02:26:42.010"/>
</kw>
<msg timestamp="20190715 02:26:42.010" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:42.008" endtime="20190715 02:26:42.010"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:42.011" level="INFO">
postData: {"cacheType":"default", "key":"samplepythonv2_key4", "value":{"value": {"value1": "I will be updated soon"}}}
</msg>
<msg timestamp="20190715 02:26:42.011" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:42.011" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:42.269" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:42.270" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:42.271" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:42.271" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:42.010" endtime="20190715 02:26:42.271"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:42.273" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:42.272" endtime="20190715 02:26:42.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:42.274" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:42.273" endtime="20190715 02:26:42.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:42.275" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:42.275" endtime="20190715 02:26:42.275"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:42.276" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:42.276" endtime="20190715 02:26:42.276"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:42.278" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:42.278" endtime="20190715 02:26:42.278"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:42.279" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:42.278" endtime="20190715 02:26:42.279"/>
</kw>
<msg timestamp="20190715 02:26:42.279" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:42.277" endtime="20190715 02:26:42.279"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:42.280" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:42.280" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:42.279" endtime="20190715 02:26:42.280"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:42.281" level="INFO">
postData: {"cacheType":"default", "key": "samplepythonv2_key4"}
</msg>
<msg timestamp="20190715 02:26:42.282" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:42.282" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:42.537" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:42.538" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:42.538" level="INFO">
resp.text: {"value": {"value1": "I will be updated soon"}}
</msg>
<msg timestamp="20190715 02:26:42.538" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:42.280" endtime="20190715 02:26:42.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:42.539" level="INFO">{'value': {'value1': 'I will be updated soon'}}</msg>
<status status="PASS" starttime="20190715 02:26:42.539" endtime="20190715 02:26:42.539"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:42.540" level="INFO">
${json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:42.539" endtime="20190715 02:26:42.540"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:42.540" level="INFO">
${actual_value} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:42.540" endtime="20190715 02:26:42.540"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:42.541" level="INFO">
${expected_json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:42.541" endtime="20190715 02:26:42.541"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:42.542" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I will be updated soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:42.541" endtime="20190715 02:26:42.542"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:42.542" level="INFO">
${expected_json} = "{'value': {'value1': 'I will be updated soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:42.542" endtime="20190715 02:26:42.542"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:42.543" level="INFO">
${expected_json} = {'value': {'value1': 'I will be updated soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:42.542" endtime="20190715 02:26:42.543"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:42.543" endtime="20190715 02:26:42.544"/>
</kw>
<status status="PASS" starttime="20190715 02:26:42.277" endtime="20190715 02:26:42.544"/>
</kw>
<status status="PASS" starttime="20190715 02:26:41.731" endtime="20190715 02:26:42.544"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I got updated now"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${updated_value}</var>
</assign>
<msg timestamp="20190715 02:26:42.544" level="INFO">
${updated_value} = { "value":{ "value1": "I got updated now" } }
</msg>
<status status="PASS" starttime="20190715 02:26:42.544" endtime="20190715 02:26:42.544"/>
</kw>
<kw name="I verify update ${key} with ${updated_value} in ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:42.546" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:42.546" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:42.545" endtime="20190715 02:26:42.546"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:42.547" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:42.546" endtime="20190715 02:26:42.547"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:42.547" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:42.547" endtime="20190715 02:26:42.548"/>
</kw>
<msg timestamp="20190715 02:26:42.548" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:42.546" endtime="20190715 02:26:42.548"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/update</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:42.549" level="INFO">
postData: {"cacheType":"default", "key":"samplepythonv2_key4", "value":{ "value":{ "value1": "I got updated now" } }}
</msg>
<msg timestamp="20190715 02:26:42.549" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/update
</msg>
<msg timestamp="20190715 02:26:42.549" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:42.803" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:42.804" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:42.804" level="INFO">resp.text: {"response": "redis update successful"}</msg>
<msg timestamp="20190715 02:26:42.804" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:42.548" endtime="20190715 02:26:42.804"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:42.805" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:42.805" endtime="20190715 02:26:42.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:42.806" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:42.805" endtime="20190715 02:26:42.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:42.806" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:42.806" endtime="20190715 02:26:42.806"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:42.808" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:42.808" endtime="20190715 02:26:42.808"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:42.809" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:42.809" endtime="20190715 02:26:42.809"/>
</kw>
<msg timestamp="20190715 02:26:42.809" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:42.807" endtime="20190715 02:26:42.809"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:42.810" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:42.810" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:42.810" endtime="20190715 02:26:42.811"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:42.812" level="INFO">
postData: {"cacheType":"default", "key": "samplepythonv2_key4"}
</msg>
<msg timestamp="20190715 02:26:42.812" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:42.812" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:43.086" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:43.087" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:43.088" level="INFO">
resp.text: {"value": {"value1": "I got updated now"}}
</msg>
<msg timestamp="20190715 02:26:43.090" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:42.811" endtime="20190715 02:26:43.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:43.091" level="INFO">{'value': {'value1': 'I got updated now'}}</msg>
<status status="PASS" starttime="20190715 02:26:43.090" endtime="20190715 02:26:43.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:43.091" level="INFO">
${json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:43.091" endtime="20190715 02:26:43.091"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:43.092" level="INFO">
${actual_value} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:43.092" endtime="20190715 02:26:43.092"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:43.093" level="INFO">
${expected_json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:43.092" endtime="20190715 02:26:43.093"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:43.093" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I got updated now'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:43.093" endtime="20190715 02:26:43.093"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:43.094" level="INFO">
${expected_json} = "{'value': {'value1': 'I got updated now'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:43.094" endtime="20190715 02:26:43.094"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:43.095" level="INFO">
${expected_json} = {'value': {'value1': 'I got updated now'}}
</msg>
<status status="PASS" starttime="20190715 02:26:43.094" endtime="20190715 02:26:43.095"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:43.095" endtime="20190715 02:26:43.095"/>
</kw>
<status status="PASS" starttime="20190715 02:26:42.807" endtime="20190715 02:26:43.096"/>
</kw>
<status status="PASS" starttime="20190715 02:26:42.545" endtime="20190715 02:26:43.096"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to default cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:41.723" endtime="20190715 02:26:43.096"/>
</test>
<test id="s1-s1-s1-s4-t17" name="16 I delete from default cache">
<kw name="LogData" library="logging">
<arguments>
<arg>
Running tests using ${app_container_type} appcontainer based app
</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:43.098" endtime="20190715 02:26:43.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:43.099" level="INFO">Running tests using PYTHON appcontainer based app</msg>
<status status="PASS" starttime="20190715 02:26:43.099" endtime="20190715 02:26:43.099"/>
</kw>
<status status="PASS" starttime="20190715 02:26:43.098" endtime="20190715 02:26:43.099"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${service_name}</arg>
<arg>_key4</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190715 02:26:43.100" level="INFO">${key} = samplepythonv2_key4</msg>
<status status="PASS" starttime="20190715 02:26:43.100" endtime="20190715 02:26:43.100"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:43.101" endtime="20190715 02:26:43.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:43.102" level="INFO">samplepythonv2_key4</msg>
<status status="PASS" starttime="20190715 02:26:43.101" endtime="20190715 02:26:43.102"/>
</kw>
<status status="PASS" starttime="20190715 02:26:43.100" endtime="20190715 02:26:43.102"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"value":{</arg>
<arg>"value1": "I will be deleted soon"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190715 02:26:43.102" level="INFO">
${value} = { "value":{ "value1": "I will be deleted soon" } }
</msg>
<status status="PASS" starttime="20190715 02:26:43.102" endtime="20190715 02:26:43.102"/>
</kw>
<kw name="LogData" library="logging">
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:43.103" endtime="20190715 02:26:43.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}</arg>
</arguments>
<msg timestamp="20190715 02:26:43.104" level="INFO">{ "value":{ "value1": "I will be deleted soon" } }</msg>
<status status="PASS" starttime="20190715 02:26:43.104" endtime="20190715 02:26:43.104"/>
</kw>
<status status="PASS" starttime="20190715 02:26:43.103" endtime="20190715 02:26:43.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>default</arg>
</arguments>
<assign>
<var>${cache_type}</var>
</assign>
<msg timestamp="20190715 02:26:43.105" level="INFO">${cache_type} = default</msg>
<status status="PASS" starttime="20190715 02:26:43.104" endtime="20190715 02:26:43.105"/>
</kw>
<kw name="I verify write ${key}:${value} to ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:43.362" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:43.362" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:43.106" endtime="20190715 02:26:43.362"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:43.363" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:43.363" endtime="20190715 02:26:43.363"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:43.364" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:43.363" endtime="20190715 02:26:43.364"/>
</kw>
<msg timestamp="20190715 02:26:43.364" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:43.362" endtime="20190715 02:26:43.364"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/write</arg>
<arg>
{"cacheType":"${cache_type}", "key":"${key}", "value":${value}}
</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:43.365" level="INFO">
postData: {"cacheType":"default", "key":"samplepythonv2_key4", "value":{ "value":{ "value1": "I will be deleted soon" } }}
</msg>
<msg timestamp="20190715 02:26:43.365" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/write
</msg>
<msg timestamp="20190715 02:26:43.366" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:43.623" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:43.624" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:43.624" level="INFO">resp.text: {"response": "redis write successful"}</msg>
<msg timestamp="20190715 02:26:43.624" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:43.364" endtime="20190715 02:26:43.624"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:43.625" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:43.625" endtime="20190715 02:26:43.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:43.626" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:43.626" endtime="20190715 02:26:43.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:43.627" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:43.626" endtime="20190715 02:26:43.627"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${write_result}</var>
</assign>
<msg timestamp="20190715 02:26:43.627" level="INFO">
${write_result} = {'response': 'redis write successful'}
</msg>
<status status="PASS" starttime="20190715 02:26:43.627" endtime="20190715 02:26:43.628"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${value}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:43.629" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:43.629" endtime="20190715 02:26:43.629"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:43.630" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:43.629" endtime="20190715 02:26:43.630"/>
</kw>
<msg timestamp="20190715 02:26:43.630" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:43.628" endtime="20190715 02:26:43.630"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:43.631" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:43.631" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:43.630" endtime="20190715 02:26:43.631"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:43.632" level="INFO">
postData: {"cacheType":"default", "key": "samplepythonv2_key4"}
</msg>
<msg timestamp="20190715 02:26:43.632" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:43.632" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:43.993" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:43.993" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:43.993" level="INFO">
resp.text: {"value": {"value1": "I will be deleted soon"}}
</msg>
<msg timestamp="20190715 02:26:43.993" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:43.631" endtime="20190715 02:26:43.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:43.994" level="INFO">{'value': {'value1': 'I will be deleted soon'}}</msg>
<status status="PASS" starttime="20190715 02:26:43.994" endtime="20190715 02:26:43.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:43.995" level="INFO">
${json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:43.995" endtime="20190715 02:26:43.995"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:43.996" level="INFO">
${actual_value} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:43.996" endtime="20190715 02:26:43.996"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:43.997" level="INFO">
${expected_json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:43.997" endtime="20190715 02:26:43.997"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:43.998" level="INFO">
${expected_rjson} = "{'value': {'value1': 'I will be deleted soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:43.997" endtime="20190715 02:26:43.998"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:43.998" level="INFO">
${expected_json} = "{'value': {'value1': 'I will be deleted soon'}}"
</msg>
<status status="PASS" starttime="20190715 02:26:43.998" endtime="20190715 02:26:43.999"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:43.999" level="INFO">
${expected_json} = {'value': {'value1': 'I will be deleted soon'}}
</msg>
<status status="PASS" starttime="20190715 02:26:43.999" endtime="20190715 02:26:43.999"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:44.000" endtime="20190715 02:26:44.000"/>
</kw>
<status status="PASS" starttime="20190715 02:26:43.628" endtime="20190715 02:26:44.000"/>
</kw>
<status status="PASS" starttime="20190715 02:26:43.105" endtime="20190715 02:26:44.000"/>
</kw>
<kw name="I verify delete ${key} from ${cache_type} cache using ${app}/${service_name} service is successful" library="redis_keywords">
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:44.002" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:44.002" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:44.001" endtime="20190715 02:26:44.002"/>
</kw>
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:44.003" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:44.003" endtime="20190715 02:26:44.003"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:44.004" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:44.004" endtime="20190715 02:26:44.004"/>
</kw>
<msg timestamp="20190715 02:26:44.004" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:44.003" endtime="20190715 02:26:44.004"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/delete</arg>
<arg>{"cacheType":"${cache_type}", "key":"${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:44.005" level="INFO">
postData: {"cacheType":"default", "key":"samplepythonv2_key4"}
</msg>
<msg timestamp="20190715 02:26:44.005" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/delete
</msg>
<msg timestamp="20190715 02:26:44.005" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:44.286" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:44.286" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:44.287" level="INFO">
resp.text: {"response": "redis delete key successful"}
</msg>
<msg timestamp="20190715 02:26:44.287" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:44.004" endtime="20190715 02:26:44.287"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20190715 02:26:44.288" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20190715 02:26:44.287" endtime="20190715 02:26:44.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status_code is ${status_code}</arg>
</arguments>
<msg timestamp="20190715 02:26:44.288" level="INFO">status_code is 200</msg>
<status status="PASS" starttime="20190715 02:26:44.288" endtime="20190715 02:26:44.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to integers.
</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190715 02:26:44.293" level="INFO">Argument types are: <class 'int'> <type 'unicode'></msg>
<status status="PASS" starttime="20190715 02:26:44.293" endtime="20190715 02:26:44.293"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>
Catenates the given items together and returns the resulted string.
</doc>
<arguments>
<arg>{</arg>
<arg>"response": "key not found"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${read_after_delete}</var>
</assign>
<msg timestamp="20190715 02:26:44.294" level="INFO">
${read_after_delete} = { "response": "key not found" }
</msg>
<status status="PASS" starttime="20190715 02:26:44.293" endtime="20190715 02:26:44.294"/>
</kw>
<kw name="I verify key ${key} from ${cache_type} cache using ${app}/${service_name} service has value ${read_after_delete}" library="redis_keywords">
<kw name="set extra headers with "Content-Type":"application/json"" library="managed_services_keywords">
<assign>
<var>${extra_headers}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>
Creates and returns a dictionary based on the given ``items``.
</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>&{extra_headers}</var>
</assign>
<msg timestamp="20190715 02:26:44.295" level="INFO">
&{extra_headers} = { Content-Type=application/json }
</msg>
<status status="PASS" starttime="20190715 02:26:44.295" endtime="20190715 02:26:44.295"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${extra_headers}</arg>
</arguments>
<assign>
<var>${string}</var>
</assign>
<msg timestamp="20190715 02:26:44.296" level="INFO">${string} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190715 02:26:44.296" endtime="20190715 02:26:44.296"/>
</kw>
<msg timestamp="20190715 02:26:44.296" level="INFO">
${extra_headers} = {'Content-Type': 'application/json'}
</msg>
<status status="PASS" starttime="20190715 02:26:44.295" endtime="20190715 02:26:44.296"/>
</kw>
<kw name="SET URL PREFIX" library="requests_lib">
<arguments>
<arg>maglev.${host}</arg>
<arg>443</arg>
<arg>secure=True</arg>
</arguments>
<msg timestamp="20190715 02:26:44.297" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<msg timestamp="20190715 02:26:44.297" level="INFO">
SET_URL_PREFIX: https://maglev.dailybuild07152019271.dragonfly-dev.com:443
</msg>
<status status="PASS" starttime="20190715 02:26:44.296" endtime="20190715 02:26:44.297"/>
</kw>
<kw name="POST" library="requests_lib">
<arguments>
<arg>/api/${app}/v1/${service_name}/sts/redis/read</arg>
<arg>{"cacheType":"${cache_type}", "key": "${key}"}</arg>
<arg>extra_headers={"Content-Type": "application/json"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190715 02:26:44.298" level="INFO">
postData: {"cacheType":"default", "key": "samplepythonv2_key4"}
</msg>
<msg timestamp="20190715 02:26:44.298" level="INFO">
Looking at API in requestslib.post: https://maglev.dailybuild07152019271.dragonfly-dev.com:443/api/dflytest/v1/samplepythonv2/sts/redis/read
</msg>
<msg timestamp="20190715 02:26:44.298" level="INFO">Headers: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20190715 02:26:44.586" level="INFO">Header:</msg>
<msg timestamp="20190715 02:26:44.586" level="INFO">Returning this: 200</msg>
<msg timestamp="20190715 02:26:44.586" level="INFO">resp.text: {"response": "key not found"}</msg>
<msg timestamp="20190715 02:26:44.587" level="INFO">${resp} = <Response [200]></msg>
<status status="PASS" starttime="20190715 02:26:44.297" endtime="20190715 02:26:44.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20190715 02:26:44.587" level="INFO">{'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:44.587" endtime="20190715 02:26:44.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>
Returns the given values which can then be assigned to a variables.
</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20190715 02:26:44.588" level="INFO">${json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:44.588" endtime="20190715 02:26:44.588"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${actual_value}</var>
</assign>
<msg timestamp="20190715 02:26:44.589" level="INFO">${actual_value} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:44.588" endtime="20190715 02:26:44.589"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_value}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:44.589" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:44.589" endtime="20190715 02:26:44.590"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.dumps('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_rjson}</var>
</assign>
<msg timestamp="20190715 02:26:44.590" level="INFO">
${expected_rjson} = "{'response': 'key not found'}"
</msg>
<status status="PASS" starttime="20190715 02:26:44.590" endtime="20190715 02:26:44.590"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${expected_rjson}</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:44.591" level="INFO">${expected_json} = "{'response': 'key not found'}"</msg>
<status status="PASS" starttime="20190715 02:26:44.590" endtime="20190715 02:26:44.591"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>
Evaluates the given expression in Python and returns the results.
</doc>
<arguments>
<arg>json.loads('''${expected_json}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${expected_json}</var>
</assign>
<msg timestamp="20190715 02:26:44.591" level="INFO">${expected_json} = {'response': 'key not found'}</msg>
<status status="PASS" starttime="20190715 02:26:44.591" endtime="20190715 02:26:44.591"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>
Fails if objects are unequal after converting them to strings.
</doc>
<arguments>
<arg>${actual_value}</arg>
<arg>${expected_json}</arg>
</arguments>
<status status="PASS" starttime="20190715 02:26:44.591" endtime="20190715 02:26:44.592"/>
</kw>
<status status="PASS" starttime="20190715 02:26:44.294" endtime="20190715 02:26:44.592"/>
</kw>
<status status="PASS" starttime="20190715 02:26:44.001" endtime="20190715 02:26:44.592"/>
</kw>
<doc>
Author :ANUPAMA JANAKIRAM<anjanaki@cisco.com> Description : write to default cache
</doc>
<tags>
<tag>elasticsearch_test</tag>
<tag>inside_out</tag>
<tag>java_app</tag>
<tag>managed_services</tag>
<tag>python_app</tag>
<tag>redis</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190715 02:26:43.097" endtime="20190715 02:26:44.592"/>
</test>
<status status="PASS" starttime="20190715 02:26:27.497" endtime="20190715 02:26:44.597"/>
</suite>
<status status="PASS" starttime="20190715 02:25:51.241" endtime="20190715 02:26:44.619"/>
</suite>
<status status="PASS" starttime="20190715 02:25:51.239" endtime="20190715 02:26:44.662"/>
</suite>
<status status="PASS" starttime="20190715 02:25:51.198" endtime="20190715 02:26:44.704"/>
</suite>
<statistics>
<total>
<stat pass="42" fail="0">Critical Tests</stat>
<stat pass="42" fail="0">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="4">anu</stat>
<stat fail="0" pass="24">elasticsearch_test</stat>
<stat fail="0" pass="35">inside_out</stat>
<stat fail="0" pass="36">java_app</stat>
<stat fail="0" pass="7">kafka_test</stat>
<stat fail="0" pass="42">managed_services</stat>
<stat fail="0" pass="11">mongodb_test</stat>
<stat fail="0" pass="42">python_app</stat>
<stat fail="0" pass="17">redis</stat>
<stat fail="0" pass="11">regression</stat>
<stat fail="0" pass="7">service_discovery_v2</stat>
</tag>
<suite>
<stat pass="42" fail="0" name="Python App Based Tests" id="s1">Python App Based Tests</stat>
<stat pass="42" fail="0" name="Testsuites" id="s1-s1">Python App Based Tests.Testsuites</stat>
<stat pass="42" fail="0" name="02 Managed Services Central" id="s1-s1-s1">
Python App Based Tests.Testsuites.02 Managed Services Central
</stat>
<stat pass="7" fail="0" name="01 Elasticsearch Crud" id="s1-s1-s1-s1">
Python App Based Tests.Testsuites.02 Managed Services Central.01 Elasticsearch Crud
</stat>
<stat pass="7" fail="0" name="02 Kafka Crud" id="s1-s1-s1-s2">
Python App Based Tests.Testsuites.02 Managed Services Central.02 Kafka Crud
</stat>
<stat pass="11" fail="0" name="03 Mongodb Crud" id="s1-s1-s1-s3">
Python App Based Tests.Testsuites.02 Managed Services Central.03 Mongodb Crud
</stat>
<stat pass="17" fail="0" name="04 Redis Crud" id="s1-s1-s1-s4">
Python App Based Tests.Testsuites.02 Managed Services Central.04 Redis Crud
</stat>
</suite>
</statistics>
<errors> </errors>
</robot>